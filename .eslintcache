[{"D:\\quink-post-web-seo\\src\\index.js":"1","D:\\quink-post-web-seo\\src\\App.js":"2","D:\\quink-post-web-seo\\src\\reportWebVitals.js":"3","D:\\quink-post-web-seo\\src\\store.js":"4","D:\\quink-post-web-seo\\src\\Components\\addpost.jsx":"5","D:\\quink-post-web-seo\\src\\Components\\HelmetBase.js":"6","D:\\quink-post-web-seo\\src\\Components\\EnterInChallenge.js":"7","D:\\quink-post-web-seo\\src\\Components\\AdminPostsUpload.js":"8","D:\\quink-post-web-seo\\src\\Components\\Reducer\\index.js":"9","D:\\quink-post-web-seo\\src\\Components\\chatpage.jsx":"10","D:\\quink-post-web-seo\\src\\Components\\homepage.jsx":"11","D:\\quink-post-web-seo\\src\\Components\\Original.jsx":"12","D:\\quink-post-web-seo\\src\\Components\\loginpage.jsx":"13","D:\\quink-post-web-seo\\src\\Components\\profile.jsx":"14","D:\\quink-post-web-seo\\src\\Components\\communitypage.jsx":"15","D:\\quink-post-web-seo\\src\\Components\\postdetail.jsx":"16","D:\\quink-post-web-seo\\src\\Components\\magzinepage.jsx":"17","D:\\quink-post-web-seo\\src\\Components\\communitydes.jsx":"18","D:\\quink-post-web-seo\\src\\Components\\profileother.jsx":"19","D:\\quink-post-web-seo\\src\\Components\\originalsDetail.jsx":"20","D:\\quink-post-web-seo\\src\\Components\\downloadapp.jsx":"21","D:\\quink-post-web-seo\\src\\Components\\challengespage.jsx":"22","D:\\quink-post-web-seo\\src\\Components\\accountsetting.jsx":"23","D:\\quink-post-web-seo\\src\\Components\\editprofile.jsx":"24","D:\\quink-post-web-seo\\src\\Components\\Mobile\\mobile-menu.jsx":"25","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\Questiondes.jsx":"26","D:\\quink-post-web-seo\\src\\Components\\Constants\\Backend.js":"27","D:\\quink-post-web-seo\\src\\Components\\Reducer\\Action.js":"28","D:\\quink-post-web-seo\\src\\Components\\chatcontent.jsx":"29","D:\\quink-post-web-seo\\src\\Components\\navbar.jsx":"30","D:\\quink-post-web-seo\\src\\Components\\primaryfeed.jsx":"31","D:\\quink-post-web-seo\\src\\Components\\InterviewFeed.jsx":"32","D:\\quink-post-web-seo\\src\\Components\\challengesfeed.jsx":"33","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communitychat.jsx":"34","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communityquestion.jsx":"35","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communitymainpost.jsx":"36","D:\\quink-post-web-seo\\src\\Components\\SharePostCard.js":"37","D:\\quink-post-web-seo\\src\\Components\\InterviewPost.jsx":"38","D:\\quink-post-web-seo\\src\\Components\\challengepost.jsx":"39","D:\\quink-post-web-seo\\src\\Components\\searchtab.jsx":"40","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communitychatitem.jsx":"41","D:\\quink-post-web-seo\\src\\Components\\chatavatar.jsx":"42","D:\\quink-post-web-seo\\src\\Components\\post.jsx":"43","D:\\quink-post-web-seo\\src\\Components\\chatitem.jsx":"44","D:\\quink-post-web-seo\\src\\Components\\comingsoon.jsx":"45","D:\\quink-post-web-seo\\src\\Components\\communityfeed.jsx":"46","D:\\quink-post-web-seo\\src\\Components\\ArticleFeed.jsx":"47","D:\\quink-post-web-seo\\src\\Components\\communitypost.jsx":"48","D:\\quink-post-web-seo\\src\\Components\\ArticlePost.jsx":"49"},{"size":1340,"mtime":1621670701000,"results":"50","hashOfConfig":"51"},{"size":3670,"mtime":1621743877673,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1621670701000,"results":"53","hashOfConfig":"51"},{"size":825,"mtime":1621670701000,"results":"54","hashOfConfig":"51"},{"size":16868,"mtime":1621670701000,"results":"55","hashOfConfig":"51"},{"size":654,"mtime":1621670701000,"results":"56","hashOfConfig":"51"},{"size":20510,"mtime":1621670701000,"results":"57","hashOfConfig":"51"},{"size":21745,"mtime":1621670701000,"results":"58","hashOfConfig":"51"},{"size":1808,"mtime":1621670701000,"results":"59","hashOfConfig":"51"},{"size":7879,"mtime":1621670701000,"results":"60","hashOfConfig":"51"},{"size":1245,"mtime":1621670701000,"results":"61","hashOfConfig":"51"},{"size":3525,"mtime":1621670701000,"results":"62","hashOfConfig":"51"},{"size":23078,"mtime":1621748412120,"results":"63","hashOfConfig":"51"},{"size":12356,"mtime":1621670701000,"results":"64","hashOfConfig":"51"},{"size":350,"mtime":1621670701000,"results":"65","hashOfConfig":"51"},{"size":21908,"mtime":1621670701000,"results":"66","hashOfConfig":"51"},{"size":361,"mtime":1621670701000,"results":"67","hashOfConfig":"51"},{"size":19351,"mtime":1621670701000,"results":"68","hashOfConfig":"51"},{"size":12212,"mtime":1621670701000,"results":"69","hashOfConfig":"51"},{"size":3357,"mtime":1621670701000,"results":"70","hashOfConfig":"51"},{"size":1104,"mtime":1621670701000,"results":"71","hashOfConfig":"51"},{"size":357,"mtime":1621670701000,"results":"72","hashOfConfig":"51"},{"size":183,"mtime":1621670701000,"results":"73","hashOfConfig":"51"},{"size":7679,"mtime":1621670701000,"results":"74","hashOfConfig":"51"},{"size":4621,"mtime":1621748483143,"results":"75","hashOfConfig":"51"},{"size":10538,"mtime":1621670701000,"results":"76","hashOfConfig":"51"},{"size":125,"mtime":1621670701000,"results":"77","hashOfConfig":"51"},{"size":901,"mtime":1621670701000,"results":"78","hashOfConfig":"51"},{"size":4717,"mtime":1621670701000,"results":"79","hashOfConfig":"51"},{"size":12667,"mtime":1621670701000,"results":"80","hashOfConfig":"51"},{"size":19144,"mtime":1621748481557,"results":"81","hashOfConfig":"51"},{"size":1165,"mtime":1621670701000,"results":"82","hashOfConfig":"51"},{"size":8333,"mtime":1621670701000,"results":"83","hashOfConfig":"51"},{"size":4005,"mtime":1621670701000,"results":"84","hashOfConfig":"51"},{"size":1206,"mtime":1621670701000,"results":"85","hashOfConfig":"51"},{"size":3080,"mtime":1621670701000,"results":"86","hashOfConfig":"51"},{"size":2087,"mtime":1621670701000,"results":"87","hashOfConfig":"51"},{"size":1115,"mtime":1621670701000,"results":"88","hashOfConfig":"51"},{"size":2104,"mtime":1621670701000,"results":"89","hashOfConfig":"51"},{"size":7555,"mtime":1621670701000,"results":"90","hashOfConfig":"51"},{"size":1051,"mtime":1621670701000,"results":"91","hashOfConfig":"51"},{"size":384,"mtime":1621670701000,"results":"92","hashOfConfig":"51"},{"size":5676,"mtime":1621670701000,"results":"93","hashOfConfig":"51"},{"size":819,"mtime":1621670701000,"results":"94","hashOfConfig":"51"},{"size":1827,"mtime":1621746916879,"results":"95","hashOfConfig":"51"},{"size":7984,"mtime":1621670701000,"results":"96","hashOfConfig":"51"},{"size":1178,"mtime":1621670701000,"results":"97","hashOfConfig":"51"},{"size":1555,"mtime":1621670701000,"results":"98","hashOfConfig":"51"},{"size":766,"mtime":1621670701000,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"icycb4",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\quink-post-web-seo\\src\\index.js",[],"D:\\quink-post-web-seo\\src\\App.js",[],"D:\\quink-post-web-seo\\src\\reportWebVitals.js",[],"D:\\quink-post-web-seo\\src\\store.js",[],"D:\\quink-post-web-seo\\src\\Components\\addpost.jsx",["229","230","231","232","233"],"import React, { useState } from \"react\";\nimport \"../Styles/addpost.css\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport Carousel from \"react-elastic-carousel\";\nimport profile from \"../Assets/profile.jpg\";\nimport Loader from \"react-loader-spinner\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport BACKEND from \"./Constants/Backend\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport DOMPurify from \"dompurify\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"../Styles/TextEditorPost.css\";\n\nfunction PostChallenge(props) {\n  const globalState = useSelector((state) => state);\n  console.log(props, \"<<<<<<<<<<<<<<<<<<<<<<<\");\n  const [article, setArticle] = useState(true);\n  const [image, setimage] = useState(\"\");\n  const [articleImage, setarticleImage] = useState(\"\");\n  const [articleData, setarticleData] = useState({});\n  const [imageData, setimageData] = useState({});\n  const [selectedValue, setselectedValue] = useState(\"SELECT\");\n  const [showLoader, setshowLoader] = useState(false);\n  const [lang, setLang] = useState(\"Select\")\n\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [convertedContent, setConvertedContent] = useState(null);\n  const handleEditorChange = (state) => {\n    setEditorState(state);\n    convertContentToHTML();\n  };\n\n  const history = useHistory()\n\n  const convertContentToHTML = () => {\n    // {draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n    let currentContentAsHTML = draftToHtml(\n      convertToRaw(editorState.getCurrentContent())\n    );\n    // let htmlConverted = convertImageStyling(currentContentAsHTML);\n    setConvertedContent(currentContentAsHTML);\n    // setConvertedContent(htmlConverted);\n  };\n\n  const createMarkup = (html) => {\n    return {\n      __html: DOMPurify.sanitize(html),\n    };\n  };\n\n  const uploadImageCallBack = (imageAdd) => {\n    // console.log(file, \"thsii is file\")\n\n    return new Promise((resolve, reject) => {\n      console.log(imageAdd, \"handle image called\");\n      // console.log(\"handleUpload called\")\n      const data = new FormData();\n      data.append(\"file\", imageAdd);\n      data.append(\"upload_preset\", \"quinkpost\");\n      data.append(\"cloud_name\", \"Quink-Post\");\n      console.log(\"before cloud post\");\n\n      fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"this is data from cloudinakdfj\");\n          // setimage(data.url);\n          resolve({ data: { link: data.url } });\n          // resolve(data.url)\n          console.log(data.url, \"<<<<<<<thii si rurl\");\n\n          //   const xhr = new XMLHttpRequest();\n          //   xhr.open(\n          //     \"POST\",\n          //     \"https://api.cloudinary.com/v1_1/quink-post/image/upload \"\n          //   ).then(res=>{console.log(res)});\n          //   xhr.setRequestHeader(\"Authorization\", \"Client-ID quinkpost\");\n          //   const data = new FormData();\n          //   data.append(\"image\", file);\n          //   xhr.send(data);\n          //   // console.log(xhr, \"<<<<\")\n          //   xhr.addEventListener(\"load\", () => {\n          //     const response = JSON.parse(xhr.responseText);\n          //     console.log(response, \"<<<<<<\");\n          //     resolve({ data: { link: response.url } })\n          //   });\n          //   xhr.addEventListener(\"error\", () => {\n          //     const error = JSON.parse(xhr.responseText);\n          //     console.log(error);\n          //     reject(error);\n          //   });\n        });\n    });\n  };\n  // try {\n  //   console.log(imageAdd, \"handle image called\");\n  //   // console.log(\"handleUpload called\")\n  //   const data = new FormData();\n  //   data.append(\"file\", imageAdd);\n  //   data.append(\"upload_preset\", \"quinkpost\");\n  //   data.append(\"cloud_name\", \"Quink-Post\");\n  //   console.log(\"before cloud post\");\n\n  //   fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n  //     method: \"post\",\n  //     body: data,\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       console.log(data, \"this is data from cloudinakdfj\");\n  //       // setimage(data.url);\n  //       resolve(data.url)\n  //       console.log(data.url, \"<<<<<<<thii si rurl\")\n  //       // return data.url\n  //     })\n  //     .catch((e) => console.log(e, \"error from the n catch\"));\n  // } catch (e) {\n  //   console.log(e, \"error while sending in cloudinary\");\n  // }\n  // };\n\n  const handleImage = async (imageAdd) => {\n    // console.log(\"this is image add >>>>>>\",imageAdd)\n    try {\n      console.log(imageAdd[0], \"handle image called\", imageAdd);\n      // console.log(\"handleUpload called\")\n      const data = new FormData();\n      data.append(\"file\", imageAdd[0]);\n      data.append(\"upload_preset\", \"quinkpost\");\n      data.append(\"cloud_name\", \"Quink-Post\");\n      console.log(\"before cloud post\");\n\n      fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"this is data from cloudinakdfj\");\n          setimage(data.url);\n        })\n        .catch((e) => console.log(e, \"error from the n catch\"));\n    } catch (e) {\n      console.log(e, \"error while sending in cloudinary\");\n    }\n  };\n  const handleImageArticle = async (imageAdd) => {\n    // console.log(\"this is image add >>>>>>\",imageAdd)\n    try {\n      console.log(imageAdd[0], \"handle image called\");\n      // console.log(\"handleUpload called\")\n      const data = new FormData();\n      data.append(\"file\", imageAdd[0]);\n      data.append(\"upload_preset\", \"quinkpost\");\n      data.append(\"cloud_name\", \"Quink-Post\");\n      console.log(\"before cloud post\");\n\n      fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"this is data from cloudinakdfj\");\n          setarticleImage(data.url);\n        })\n        .catch((e) => console.log(e, \"error from the n catch\"));\n    } catch (e) {\n      console.log(e, \"error while sending in cloudinary\");\n    }\n  };\n  const submitWithImage = async () => {\n    try {\n      // console.log({title,description})\n      const result = await axios.post(`${BACKEND}/post/upload`, {\n        author: globalState.user._id,\n        title: \" \",\n        //   body: description,\n        lang: lang,\n        type: \"MEME\",\n        caption: imageData.caption,\n        image: image,\n      });\n      if (result.data.success) {\n        console.log(\"success\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  console.log(selectedValue, \"<<<<\");\n  const submitArticle = async (e) => {\n    try {\n      setshowLoader(true);\n      e.preventDefault();\n      // console.log(articleData, \"{{{{{{{{{{{{{{{{{{{\");\n      // console.log({ title, description })\n\n\n      const result = await axios.post(`${BACKEND}/post/upload`, {\n        author: globalState.user._id,\n        title: articleData.title,\n        body: convertedContent,\n        lang: lang,\n        type: selectedValue,\n        caption: articleData.caption,\n        image: articleImage,\n      });\n      if (result.data.success) {\n        // console.log(result.data, \"<<<<{{{\");\n        console.log(\"success\");\n        setConvertedContent(null);\n        setarticleData({ title: \"\", caption: \"\" });\n        setshowLoader(false);\n        history.push(\"/home\")\n      } else {\n        setshowLoader(false);\n        alert(\"something went wrong\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  console.log(convertedContent);\n\n  let postForm;\n  console.log(image, \"<<<< this is image Add\");\n  if (article == true) {\n    postForm = (\n      <div className=\"addpost-form-div\">\n        <form className=\"addpost-form\">\n          <div className=\"posttype-div\">\n            <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n              Choose a content label:\n            </label>\n            <select\n              id=\"post-type\"\n              name=\"posttype\"\n              className=\"form-post-type-select\"\n              // onSelect={value => setselectedValue(value)}\n              onChange={(value) => setselectedValue(value.target.value)}\n            >\n              <option value=\"SELECT\">Select</option>\n              <option value=\"ARTICLE\">Article</option>\n              <option value=\"POEM\">Poem</option>\n              <option value=\"SHAYARI\">Shayari</option>\n              <option value=\"STORY\">Story</option>\n              <option value=\"MEME\">Meme</option>\n              <option value=\"QUOTE\">Quote</option>\n            </select>\n          </div>\n          <div className=\"posttype-div\">\n            <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n              Select laguage:\n            </label>\n            <select\n              id=\"post-type\"\n              name=\"Language\"\n              className=\"form-post-type-select\"\n              // onSelect={value => setselectedValue(value)}\n              onChange={(value) => setLang(value.target.value)}\n            >\n              <option value=\"Select\">Select</option>\n              <option value=\"English\">English</option>\n              <option value=\"Hindi\">Hindi</option>\n              {/* <option value=\"SHAYARI\">Shayari</option>\n              <option value=\"STORY\">Story</option>\n              <option value=\"MEME\">Meme</option> */}\n            </select>\n          </div>\n          <div\n            style={{\n              flexDirection: \"row\",\n              alignSelf: \"center\",\n              textAlign: \"center\",\n            }}\n          >\n            <label\n              htmlFor=\"upload-image\"\n              style={{ display: \"inline-flex\", marginTop: \"10px\" }}\n            >\n              Upload cover image related to your content (helps in better\n              reach):\n            </label>\n            <input\n              type=\"file\"\n              id=\"upload-image\"\n              onChange={(e) => handleImageArticle(e.target.files)}\n            />\n          </div>\n          {/* <button id=\"upload-image\">Upload Image</button> */}\n          <Carousel className=\"image-carousel\">\n            <img\n              src={\n                articleImage\n                  ? articleImage\n                  : \"https://www.lifewire.com/thmb/P856-0hi4lmA2xinYWyaEpRIckw=/1920x1326/filters:no_upscale():max_bytes(150000):strip_icc()/cloud-upload-a30f385a928e44e199a62210d578375a.jpg\"\n              }\n              alt=\"\"\n              className=\"carousel-image\"\n            />\n            <img src={profile} alt=\"\" className=\"carousel-image\" />\n          </Carousel>\n          <label htmlFor=\"heading\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"heading\"\n            className=\"addpost-input-feilds\"\n            value={articleData.title}\n            onChange={(e) =>\n              setarticleData((prev) => {\n                return { ...prev, title: e.target.value };\n              })\n            }\n          />\n          <label htmlFor=\"caption\">Caption:</label>\n          <textarea\n            name=\"post-caption\"\n            id=\"post-caption\"\n            cols=\"20\"\n            rows=\"10\"\n            value={articleData.caption}\n            onChange={(e) =>\n              setarticleData((prev) => {\n                return { ...prev, caption: e.target.value };\n              })\n            }\n            className=\"addpost-input-feilds\"\n          ></textarea>\n          {/* {(() => {\n            if (selectedValue != \"MEME\") {\n              return (\n                <>\n                  <label htmlFor=\"caption\">Post Body:</label>\n                  <textarea\n                    name=\"post-caption\"\n                    id=\"post-caption\"\n                    cols=\"40\"\n                    rows=\"10\"\n                    value={articleData.body}\n                    onChange={(e) =>\n                      setarticleData((prev) => {\n                        return { ...prev, body: e.target.value };\n                      })\n                    }\n                    className=\"addpost-input-feilds\"\n                  ></textarea>\n                </>\n              );\n            }\n          })()} */}\n          {/* <TextEditorpost /> */}\n          <label htmlFor=\"body\" style={{ marginBottom: \"10px\" }}>\n            Body:\n          </label>\n          <div className=\"App\">\n            {/* <header className=\"App-header\">Rich Text Editor Example</header> */}\n            <Editor\n              editorState={editorState}\n              onEditorStateChange={handleEditorChange}\n              wrapperClassName=\"wrapper-class\"\n              editorClassName=\"editor-class\"\n              toolbarClassName=\"toolbar-class\"\n              toolbar={{\n                image: {\n                  uploadCallback: uploadImageCallBack,\n                  alt: { present: true, mandatory: false },\n                },\n              }}\n            />\n            {/* <div\n              className=\"preview\"\n              dangerouslySetInnerHTML={createMarkup(convertedContent)}\n            >\n            </div> */}\n          </div>\n          <div style={{ alignItems: \"center\", textAlign: \"center\" }}>\n            <Loader\n              visible={showLoader}\n              type=\"MutatingDots\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n            />\n          </div>\n\n          <button className=\"post-final-button\" onClick={submitArticle}>\n            Post Content\n          </button>\n        </form>\n      </div>\n    );\n  }\n  if (article == false) {\n    postForm = (\n      <div className=\"addpost-form-div\">\n        <form className=\"addpost-form\">\n          <div className=\"posttype-div\">\n            <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n              Choose a Post label:\n            </label>\n            <select\n              id=\"post-type\"\n              name=\"posttype\"\n              className=\"form-post-type-select\"\n            >\n              <option value=\"Health\">Health and Fitness</option>\n              <option value=\"Fashion\">Fashion</option>\n              <option value=\"Entertainment\">Entertainment</option>\n              <option value=\"Learning\">Learning</option>\n            </select>\n          </div>\n          <div style={{ flexDirection: \"row\" }}>\n            <label htmlFor=\"upload-image\">\n              Upload Image related to article:\n            </label>\n            {/* <button id=\"upload-image\" >Upload Image</button> */}\n            <input\n              type=\"file\"\n              id=\"upload-image\"\n              onChange={(value) => {\n                // console.log(value)\n                handleImage(value.target.files);\n              }}\n            />\n          </div>\n          {/* <button id=\"upload-image\" >Upload Image</button> */}\n          <Carousel className=\"image-carousel\">\n            <img src={image} alt=\"\" className=\"carousel-image\" />\n            <img src={profile} alt=\"\" className=\"carousel-image\" />\n          </Carousel>\n          <label htmlFor=\"caption\">Post Caption:</label>\n          <textarea\n            name=\"post-caption\"\n            value={imageData.caption}\n            onChange={(e) =>\n              setimageData({ ...imageData, caption: e.target.value })\n            }\n            id=\"post-caption\"\n            cols=\"20\"\n            rows=\"10\"\n            className=\"addpost-input-feilds\"\n          ></textarea>\n          <button className=\"post-final-button\" onClick={submitWithImage}>\n            Post Image\n          </button>\n        </form>\n      </div>\n    );\n  }\n  const handleTypeClick1 = () => {\n    setArticle(true);\n  };\n  const handleTypeClick2 = () => {\n    setArticle(false);\n  };\n  return (\n    <div className=\"addpost-container\">\n      <div className=\"addpost-header\">\n        <div className=\"addpost-title\">Create Post</div>\n        <div className=\"cancel-addpost\">\n          <Link to=\"/home\" className=\"cancel-icon-addpost\">\n            <CancelOutlinedIcon style={{ fontSize: 32 }} />\n          </Link>\n        </div>\n      </div>\n      {/* <div className=\"addpost-type\">\n        <div\n          className={`post-type-toggle ${article && \"post-type-active\"}`}\n          onClick={handleTypeClick1}\n        >\n          Article\n        </div>\n        <div\n          className={`post-type-toggle ${!article && \"post-type-active\"}`}\n          onClick={handleTypeClick2}\n        >\n          Image\n        </div>\n      </div> */}\n      <div>{postForm}</div>\n    </div>\n  );\n}\n\nexport default PostChallenge;\n","D:\\quink-post-web-seo\\src\\Components\\HelmetBase.js",["234"],"import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nconst HelmetBase = ({ title, description, keywords, link }) => {\n\n\n    return (<>\n        <div>\n\n            <Helmet>\n\n                <title>{title}</title>\n                <link rel=\"canonical\" href={`https://www.quinkpost.com/${link}`} />\n                <meta\n                    name=\"description\"\n                    content={description}\n                />\n                <meta\n                    name=\"keywords\"\n                    content={keywords?.join()}\n                />\n            \n            </Helmet>\n        </div>\n    </>)\n}\nexport default HelmetBase","D:\\quink-post-web-seo\\src\\Components\\EnterInChallenge.js",["235","236","237","238","239"],"import React, { useState } from \"react\";\nimport \"../Styles/addpost.css\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport Carousel from \"react-elastic-carousel\";\nimport profile from \"../Assets/profile.jpg\";\n\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport BACKEND from \"./Constants/Backend\";\nimport axios from \"axios\";\n// import TextEditorpost from \"./TextEditorpost\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport DOMPurify from \"dompurify\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"../Styles/TextEditorPost.css\";\n\nfunction PostChallenge(props) {\n    const history = useHistory();\n\n    const globalState = useSelector((state) => state);\n    const challengeId = props.match.params.challengeId;\n    const challengeName = props.match.params.challengeName\n    console.log(props, \"<<<<<<<<<<<<<<<<<<<<<<<\");\n    const [article, setArticle] = useState(true);\n    const [image, setimage] = useState(\"\");\n    const [articleImage, setarticleImage] = useState(\"\");\n    const [articleData, setarticleData] = useState({});\n    const [imageData, setimageData] = useState({});\n    const [selectedValue, setselectedValue] = useState(\"SELECT\");\n    const [showLoader, setshowLoader] = useState(false)\n    const [lang, setLang] = useState(\"Select\")\n\n    const [editorState, setEditorState] = useState(() =>\n        EditorState.createEmpty()\n    );\n    const [convertedContent, setConvertedContent] = useState(null);\n    const handleEditorChange = (state) => {\n        setEditorState(state);\n        convertContentToHTML();\n    };\n    const convertContentToHTML = () => {\n        // {draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n        let currentContentAsHTML = draftToHtml(\n            convertToRaw(editorState.getCurrentContent())\n        );\n        setConvertedContent(currentContentAsHTML);\n    };\n    const createMarkup = (html) => {\n        return {\n            __html: DOMPurify.sanitize(html),\n        };\n    };\n\n    const uploadImageCallBack = (imageAdd) => {\n        // console.log(file, \"thsii is file\")\n\n        return new Promise((resolve, reject) => {\n\n            console.log(imageAdd, \"handle image called\");\n            // console.log(\"handleUpload called\")\n            const data = new FormData();\n            data.append(\"file\", imageAdd);\n            data.append(\"upload_preset\", \"quinkpost\");\n            data.append(\"cloud_name\", \"Quink-Post\");\n            console.log(\"before cloud post\");\n\n            fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data, \"this is data from cloudinakdfj\");\n                    // setimage(data.url);\n                    resolve({ data: { link: data.url } })\n                    // resolve(data.url)\n                    console.log(data.url, \"<<<<<<<thii si rurl\")\n\n\n\n                    //   const xhr = new XMLHttpRequest();\n                    //   xhr.open(\n                    //     \"POST\",\n                    //     \"https://api.cloudinary.com/v1_1/quink-post/image/upload \"\n                    //   ).then(res=>{console.log(res)});\n                    //   xhr.setRequestHeader(\"Authorization\", \"Client-ID quinkpost\");\n                    //   const data = new FormData();\n                    //   data.append(\"image\", file);\n                    //   xhr.send(data);\n                    //   // console.log(xhr, \"<<<<\")\n                    //   xhr.addEventListener(\"load\", () => {\n                    //     const response = JSON.parse(xhr.responseText);\n                    //     console.log(response, \"<<<<<<\");\n                    //     resolve({ data: { link: response.url } })\n                    //   });\n                    //   xhr.addEventListener(\"error\", () => {\n                    //     const error = JSON.parse(xhr.responseText);\n                    //     console.log(error);\n                    //     reject(error);\n                    //   });\n                });\n        })\n    }\n    // try {\n    //   console.log(imageAdd, \"handle image called\");\n    //   // console.log(\"handleUpload called\")\n    //   const data = new FormData();\n    //   data.append(\"file\", imageAdd);\n    //   data.append(\"upload_preset\", \"quinkpost\");\n    //   data.append(\"cloud_name\", \"Quink-Post\");\n    //   console.log(\"before cloud post\");\n\n    //   fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n    //     method: \"post\",\n    //     body: data,\n    //   })\n    //     .then((res) => res.json())\n    //     .then((data) => {\n    //       console.log(data, \"this is data from cloudinakdfj\");\n    //       // setimage(data.url);\n    //       resolve(data.url)\n    //       console.log(data.url, \"<<<<<<<thii si rurl\")\n    //       // return data.url\n    //     })\n    //     .catch((e) => console.log(e, \"error from the n catch\"));\n    // } catch (e) {\n    //   console.log(e, \"error while sending in cloudinary\");\n    // }\n    // };\n\n    const handleImage = async (imageAdd) => {\n        // console.log(\"this is image add >>>>>>\",imageAdd)\n        try {\n            console.log(imageAdd[0], \"handle image called\", imageAdd);\n            // console.log(\"handleUpload called\")\n            const data = new FormData();\n            data.append(\"file\", imageAdd[0]);\n            data.append(\"upload_preset\", \"quinkpost\");\n            data.append(\"cloud_name\", \"Quink-Post\");\n            console.log(\"before cloud post\");\n\n            fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data, \"this is data from cloudinakdfj\");\n                    setimage(data.url);\n                })\n                .catch((e) => console.log(e, \"error from the n catch\"));\n        } catch (e) {\n            console.log(e, \"error while sending in cloudinary\");\n        }\n    };\n    const handleImageArticle = async (imageAdd) => {\n        // console.log(\"this is image add >>>>>>\",imageAdd)\n        try {\n            console.log(imageAdd[0], \"handle image called\");\n            // console.log(\"handleUpload called\")\n            const data = new FormData();\n            data.append(\"file\", imageAdd[0]);\n            data.append(\"upload_preset\", \"quinkpost\");\n            data.append(\"cloud_name\", \"Quink-Post\");\n            console.log(\"before cloud post\");\n\n            fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data, \"this is data from cloudinakdfj\");\n                    setarticleImage(data.url);\n                })\n                .catch((e) => console.log(e, \"error from the n catch\"));\n        } catch (e) {\n            console.log(e, \"error while sending in cloudinary\");\n        }\n    };\n    const submitWithImage = async () => {\n        try {\n            // console.log({title,description})\n            const result = await axios.post(`${BACKEND}/post/upload`, {\n                author: globalState.user._id,\n                title: \" \",\n                //   body: description,\n                type: \"MEME\",\n                caption: imageData.caption,\n                image: image,\n            });\n            if (result.data.success) {\n                console.log(\"success\");\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    console.log(selectedValue, \"<<<<\");\n    const submitArticle = async (e) => {\n        try {\n            setshowLoader(true)\n            const checkvalue = window.confirm(\"ARE YOU SURE ,YOU WANT TO SUBMIT YOUR CONTENT.\")\n            e.preventDefault();\n            if (checkvalue) {\n               \n                // console.log(articleData, \"{{{{{{{{{{{{{{{{{{{\");\n                // console.log({ title, description })\n                const result = await axios.post(`${BACKEND}/challenge/participate`, {\n                    author: globalState.user._id,\n                    title: articleData.title,\n                    challengeId: challengeId,\n                    body: convertedContent,\n                    lang: lang,\n                    type: selectedValue,\n                    caption: articleData.caption,\n                    image: articleImage,\n                    isChallengePost: true\n                });\n                if (result.data.success) {\n                    console.log(result.data, \"<<<<{{{\");\n                    console.log(\"success\");\n                    setConvertedContent(null)\n                    setarticleData({ title: \"\", caption: \"\" })\n                    setshowLoader(false)\n                    history.push(\"/home\");\n                } else {\n                    setshowLoader(false)\n                    alert(\"Fill your content correctly something is missing ??\")\n                }\n            }\n           \n           \n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    console.log(convertedContent);\n\n    let postForm;\n    console.log(image, \"<<<< this is image Add\");\n    if (article == true) {\n        postForm = (\n            <div className=\"addpost-form-div\">\n\n                <form className=\"addpost-form\">\n                    <div className=\"posttype-div\">\n                        <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n                            Choose a content label:\n            </label>\n                        <select\n                            id=\"post-type\"\n                            name=\"posttype\"\n                            className=\"form-post-type-select\"\n                            // onSelect={value => setselectedValue(value)}\n                            onChange={(value) => setselectedValue(value.target.value)}\n                        >\n                            <option value=\"SELECT\">Select</option>\n                            <option value=\"ARTICLE\">Article</option>\n                            <option value=\"POEM\">Poem</option>\n                            <option value=\"SHAYARI\">Shayari</option>\n                            <option value=\"STORY\">Story</option>\n                            <option value=\"MEME\">Meme</option>\n                        </select>\n                        <div className=\"posttype-div\">\n                            <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n                                Select Language:\n            </label>\n                            <select\n                                id=\"post-type\"\n                                name=\"Lannguage\"\n                                className=\"form-post-type-select\"\n                                // onSelect={value => setselectedValue(value)}\n                                onChange={(value) => setLang(value.target.value)}\n                            >\n                                <option value=\"Select\">Select</option>\n                                <option value=\"English\">ENGLISH</option>\n                                <option value=\"Hindi\">HINDI</option>\n                                {/* <option value=\"SHAYARI\">Shayari</option>\n                            <option value=\"STORY\">Story</option>\n                            <option value=\"MEME\">Meme</option> */}\n                            </select>\n                        </div>\n                    </div>\n                    <div style={{ flexDirection: \"row\", alignSelf: \"center\", textAlign: \"center\" }}>\n                        <label htmlFor=\"upload-image\" style={{ display: \"inline-flex\", marginTop: \"10px\" }}>\n                            Upload cover image related to your content (helps in better\n                            reach):\n            </label>\n                        <input\n                            type=\"file\"\n                            id=\"upload-image\"\n                            onChange={(e) => handleImageArticle(e.target.files)}\n                        />\n                    </div>\n                    {/* <button id=\"upload-image\">Upload Image</button> */}\n                    <Carousel className=\"image-carousel\">\n                        <img\n                            src={\n                                articleImage\n                                    ? articleImage\n                                    : \"https://www.lifewire.com/thmb/P856-0hi4lmA2xinYWyaEpRIckw=/1920x1326/filters:no_upscale():max_bytes(150000):strip_icc()/cloud-upload-a30f385a928e44e199a62210d578375a.jpg\"\n                            }\n                            alt=\"\"\n                            className=\"carousel-image\"\n                        />\n                        <img src={profile} alt=\"\" className=\"carousel-image\" />\n                    </Carousel>\n                    <label htmlFor=\"heading\">Title:</label>\n                    <input\n                        type=\"text\"\n                        id=\"heading\"\n                        className=\"addpost-input-feilds\"\n                        value={articleData.title}\n                        onChange={(e) =>\n                            setarticleData((prev) => {\n                                return { ...prev, title: e.target.value };\n                            })\n                        }\n                    />\n                    <label htmlFor=\"caption\">Caption:</label>\n                    <textarea\n                        name=\"post-caption\"\n                        id=\"post-caption\"\n                        cols=\"20\"\n                        rows=\"10\"\n                        value={articleData.caption}\n                        onChange={(e) =>\n                            setarticleData((prev) => {\n                                return { ...prev, caption: e.target.value };\n                            })\n                        }\n                        className=\"addpost-input-feilds\"\n                    ></textarea>\n                    {/* {(() => {\n            if (selectedValue != \"MEME\") {\n              return (\n                <>\n                  <label htmlFor=\"caption\">Post Body:</label>\n                  <textarea\n                    name=\"post-caption\"\n                    id=\"post-caption\"\n                    cols=\"40\"\n                    rows=\"10\"\n                    value={articleData.body}\n                    onChange={(e) =>\n                      setarticleData((prev) => {\n                        return { ...prev, body: e.target.value };\n                      })\n                    }\n                    className=\"addpost-input-feilds\"\n                  ></textarea>\n                </>\n              );\n            }\n          })()} */}\n                    {/* <TextEditorpost /> */}\n                    <label htmlFor=\"body\" style={{ marginBottom: \"10px\" }}>Body:</label>\n                    <div className=\"App\">\n                        {/* <header className=\"App-header\">Rich Text Editor Example</header> */}\n                        <Editor\n                            editorState={editorState}\n                            onEditorStateChange={handleEditorChange}\n                            wrapperClassName=\"wrapper-class\"\n                            editorClassName=\"editor-class\"\n                            toolbarClassName=\"toolbar-class\"\n                            toolbar={{\n                                image: {\n                                    uploadCallback: uploadImageCallBack,\n                                    alt: { present: true, mandatory: false },\n                                },\n                            }}\n                        />\n                        {/* <div\n              className=\"preview\"\n              dangerouslySetInnerHTML={createMarkup(convertedContent)}\n            >\n            </div> */}\n                    </div>\n                    <div style={{ alignItems: \"center\", textAlign: \"center\" }}>\n                        <Loader\n                            visible={showLoader}\n                            type=\"MutatingDots\"\n                            color=\"#00BFFF\"\n                            height={100}\n                            width={100}\n                        />\n                    </div>\n\n                    <button className=\"post-final-button\" onClick={submitArticle}>\n                        Post Content\n          </button>\n                </form>\n            </div>\n        );\n    }\n    if (article == false) {\n        postForm = (\n            <div className=\"addpost-form-div\">\n                <form className=\"addpost-form\">\n                    <div className=\"posttype-div\">\n                        <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n                            Choose a Post label:\n            </label>\n                        <select\n                            id=\"post-type\"\n                            name=\"posttype\"\n                            className=\"form-post-type-select\"\n                        >\n                            <option value=\"Health\">Health and Fitness</option>\n                            <option value=\"Fashion\">Fashion</option>\n                            <option value=\"Entertainment\">Entertainment</option>\n                            <option value=\"Learning\">Learning</option>\n                        </select>\n                    </div>\n                    <div style={{ flexDirection: \"row\" }}>\n                        <label htmlFor=\"upload-image\">\n                            Upload Image related to article:\n            </label>\n                        {/* <button id=\"upload-image\" >Upload Image</button> */}\n                        <input\n                            type=\"file\"\n                            id=\"upload-image\"\n                            onChange={(value) => {\n                                // console.log(value)\n                                handleImage(value.target.files);\n                            }}\n                        />\n                    </div>\n                    {/* <button id=\"upload-image\" >Upload Image</button> */}\n                    <Carousel className=\"image-carousel\">\n                        <img src={image} alt=\"\" className=\"carousel-image\" />\n                        <img src={profile} alt=\"\" className=\"carousel-image\" />\n                    </Carousel>\n                    <label htmlFor=\"caption\">Post Caption:</label>\n                    <textarea\n                        name=\"post-caption\"\n                        value={imageData.caption}\n                        onChange={(e) =>\n                            setimageData({ ...imageData, caption: e.target.value })\n                        }\n                        id=\"post-caption\"\n                        cols=\"20\"\n                        rows=\"10\"\n                        className=\"addpost-input-feilds\"\n                    ></textarea>\n                    <button className=\"post-final-button\" onClick={submitWithImage}>\n                        Post Image\n          </button>\n                </form>\n            </div>\n        );\n    }\n    const handleTypeClick1 = () => {\n        setArticle(true);\n    };\n    const handleTypeClick2 = () => {\n        setArticle(false);\n    };\n    return (\n        <div className=\"addpost-container\">\n            <div className=\"addpost-header\">\n                <div className=\"addpost-title\">{challengeName}</div>\n                <div className=\"cancel-addpost\">\n                    <Link to=\"/home\" className=\"cancel-icon-addpost\">\n                        <CancelOutlinedIcon style={{ fontSize: 32 }} />\n                    </Link>\n                </div>\n            </div>\n            {/* <div className=\"addpost-type\">\n        <div\n          className={`post-type-toggle ${article && \"post-type-active\"}`}\n          onClick={handleTypeClick1}\n        >\n          Article\n        </div>\n        <div\n          className={`post-type-toggle ${!article && \"post-type-active\"}`}\n          onClick={handleTypeClick2}\n        >\n          Image\n        </div>\n      </div> */}\n            <div>{postForm}</div>\n        </div>\n    );\n}\n\nexport default PostChallenge;\n","D:\\quink-post-web-seo\\src\\Components\\AdminPostsUpload.js",["240","241","242","243","244","245","246"],"import React, { useState } from \"react\";\nimport \"../Styles/addpost.css\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport Carousel from \"react-elastic-carousel\";\nimport profile from \"../Assets/profile.jpg\";\nimport Loader from \"react-loader-spinner\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport BACKEND from \"./Constants/Backend\";\nimport axios from \"axios\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport DOMPurify from \"dompurify\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"../Styles/TextEditorPost.css\";\n\nfunction PostChallenge(props) {\n    const globalState = useSelector((state) => state);\n    console.log(props, \"<<<<<<<<<<<<<<<<<<<<<<<\");\n    const [article, setArticle] = useState(true);\n    const [image, setimage] = useState(\"\");\n    const [articleImage, setarticleImage] = useState(\"\");\n    const [articleData, setarticleData] = useState({});\n    const [imageData, setimageData] = useState({});\n    const [selectedValue, setselectedValue] = useState(\"SELECT\");\n    const [showLoader, setshowLoader] = useState(false);\n    const [lang, setLang] = useState(\"Select\")\n    const [password, setpassword] = useState(\"wrong password\")\n    const [showModaloriginal, setshowModaloriginal] = useState(false)\n\n    const [editorState, setEditorState] = useState(() =>\n        EditorState.createEmpty()\n    );\n    const [convertedContent, setConvertedContent] = useState(null);\n    const handleEditorChange = (state) => {\n        setEditorState(state);\n        convertContentToHTML();\n    };\n\n    const convertContentToHTML = () => {\n        // {draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n        let currentContentAsHTML = draftToHtml(\n            convertToRaw(editorState.getCurrentContent())\n        );\n        // let htmlConverted = convertImageStyling(currentContentAsHTML);\n        setConvertedContent(currentContentAsHTML);\n        // setConvertedContent(htmlConverted);\n    };\n\n    const createMarkup = (html) => {\n        return {\n            __html: DOMPurify.sanitize(html),\n        };\n    };\n\n    const uploadImageCallBack = (imageAdd) => {\n        // console.log(file, \"thsii is file\")\n\n        return new Promise((resolve, reject) => {\n            console.log(imageAdd, \"handle image called\");\n            // console.log(\"handleUpload called\")\n            const data = new FormData();\n            data.append(\"file\", imageAdd);\n            data.append(\"upload_preset\", \"quinkpost\");\n            data.append(\"cloud_name\", \"Quink-Post\");\n            console.log(\"before cloud post\");\n\n            fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data, \"this is data from cloudinakdfj\");\n                    // setimage(data.url);\n                    resolve({ data: { link: data.url } });\n                    // resolve(data.url)\n                    console.log(data.url, \"<<<<<<<thii si rurl\");\n\n                    //   const xhr = new XMLHttpRequest();\n                    //   xhr.open(\n                    //     \"POST\",\n                    //     \"https://api.cloudinary.com/v1_1/quink-post/image/upload \"\n                    //   ).then(res=>{console.log(res)});\n                    //   xhr.setRequestHeader(\"Authorization\", \"Client-ID quinkpost\");\n                    //   const data = new FormData();\n                    //   data.append(\"image\", file);\n                    //   xhr.send(data);\n                    //   // console.log(xhr, \"<<<<\")\n                    //   xhr.addEventListener(\"load\", () => {\n                    //     const response = JSON.parse(xhr.responseText);\n                    //     console.log(response, \"<<<<<<\");\n                    //     resolve({ data: { link: response.url } })\n                    //   });\n                    //   xhr.addEventListener(\"error\", () => {\n                    //     const error = JSON.parse(xhr.responseText);\n                    //     console.log(error);\n                    //     reject(error);\n                    //   });\n                });\n        });\n    };\n    // try {\n    //   console.log(imageAdd, \"handle image called\");\n    //   // console.log(\"handleUpload called\")\n    //   const data = new FormData();\n    //   data.append(\"file\", imageAdd);\n    //   data.append(\"upload_preset\", \"quinkpost\");\n    //   data.append(\"cloud_name\", \"Quink-Post\");\n    //   console.log(\"before cloud post\");\n\n    //   fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n    //     method: \"post\",\n    //     body: data,\n    //   })\n    //     .then((res) => res.json())\n    //     .then((data) => {\n    //       console.log(data, \"this is data from cloudinakdfj\");\n    //       // setimage(data.url);\n    //       resolve(data.url)\n    //       console.log(data.url, \"<<<<<<<thii si rurl\")\n    //       // return data.url\n    //     })\n    //     .catch((e) => console.log(e, \"error from the n catch\"));\n    // } catch (e) {\n    //   console.log(e, \"error while sending in cloudinary\");\n    // }\n    // };\n\n    const handleImage = async (imageAdd) => {\n        // console.log(\"this is image add >>>>>>\",imageAdd)\n        try {\n            console.log(imageAdd[0], \"handle image called\", imageAdd);\n            // console.log(\"handleUpload called\")\n            const data = new FormData();\n            data.append(\"file\", imageAdd[0]);\n            data.append(\"upload_preset\", \"quinkpost\");\n            data.append(\"cloud_name\", \"Quink-Post\");\n            console.log(\"before cloud post\");\n\n            fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data, \"this is data from cloudinakdfj\");\n                    setimage(data.url);\n                })\n                .catch((e) => console.log(e, \"error from the n catch\"));\n        } catch (e) {\n            console.log(e, \"error while sending in cloudinary\");\n        }\n    };\n    const handleImageArticle = async (imageAdd) => {\n        // console.log(\"this is image add >>>>>>\",imageAdd)\n        try {\n            console.log(imageAdd[0], \"handle image called\");\n            // console.log(\"handleUpload called\")\n            const data = new FormData();\n            data.append(\"file\", imageAdd[0]);\n            data.append(\"upload_preset\", \"quinkpost\");\n            data.append(\"cloud_name\", \"Quink-Post\");\n            console.log(\"before cloud post\");\n\n            fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data, \"this is data from cloudinakdfj\");\n                    setarticleImage(data.url);\n                })\n                .catch((e) => console.log(e, \"error from the n catch\"));\n        } catch (e) {\n            console.log(e, \"error while sending in cloudinary\");\n        }\n    };\n    const submitWithImage = async () => {\n        try {\n            // console.log({title,description})\n            const result = await axios.post(`${BACKEND}/admin`, {\n                author: globalState.user._id,\n                title: \" \",\n                //   body: description,\n                lang: lang,\n                type: \"MEME\",\n                caption: imageData.caption,\n                image: image,\n            });\n            if (result.data.success) {\n                console.log(\"success\");\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    console.log(selectedValue, \"<<<<\");\n    const submitArticle = async (e) => {\n        try {\n            setshowLoader(true);\n            e.preventDefault();\n            // console.log(articleData, \"{{{{{{{{{{{{{{{{{{{\");\n            // console.log({ title, description })\n\n\n            const result = await axios.post(`${BACKEND}/admin`, {\n                author: globalState.user._id,\n                title: articleData.title,\n                body: convertedContent,\n                lang: lang,\n                type: selectedValue,\n                caption: articleData.caption,\n                image: articleImage,\n            });\n            if (result.data.success) {\n                // console.log(result.data, \"<<<<{{{\");\n                console.log(\"success\");\n                setConvertedContent(null);\n                setarticleData({ title: \"\", caption: \"\" });\n                setshowLoader(false);\n            } else {\n                setshowLoader(false);\n                alert(\"something went wrong\");\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    console.log(convertedContent);\n\n    let postForm;\n    console.log(image, \"<<<< this is image Add\");\n    if (article == true) {\n        postForm = (\n            <div className=\"addpost-form-div\">\n                <form className=\"addpost-form\">\n                    <div className=\"posttype-div\">\n                        <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n                            Choose a content label:\n            </label>\n                        <select\n                            id=\"post-type\"\n                            name=\"posttype\"\n                            className=\"form-post-type-select\"\n                            // onSelect={value => setselectedValue(value)}\n                            onChange={(value) => setselectedValue(value.target.value)}\n                        >\n                            <option value=\"SELECT\">Select</option>\n                            <option value=\"TRANSCRIBED\">TRANSCRIBED</option>\n                            <option value=\"ARTICLE\">ARTICLE</option>\n                            <option value=\"PODCAST\">PODCAST</option>\n                            <option value=\"CURRENT\">CURRENT</option>\n\n                        </select>\n                    </div>\n                    <div className=\"posttype-div\">\n                        <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n                            Select laguage:\n            </label>\n                        <select\n                            id=\"post-type\"\n                            name=\"Language\"\n                            className=\"form-post-type-select\"\n                            // onSelect={value => setselectedValue(value)}\n                            onChange={(value) => setLang(value.target.value)}\n                        >\n                            <option value=\"Select\">Select</option>\n                            <option value=\"English\">English</option>\n                            <option value=\"Hindi\">Hindi</option>\n                            {/* <option value=\"SHAYARI\">Shayari</option>\n              <option value=\"STORY\">Story</option>\n              <option value=\"MEME\">Meme</option> */}\n                        </select>\n                    </div>\n                    <div\n                        style={{\n                            flexDirection: \"row\",\n                            alignSelf: \"center\",\n                            textAlign: \"center\",\n                        }}\n                    >\n                        <label\n                            htmlFor=\"upload-image\"\n                            style={{ display: \"inline-flex\", marginTop: \"10px\" }}\n                        >\n                            Upload cover image related to your content (helps in better\n                            reach):\n            </label>\n                        <input\n                            type=\"file\"\n                            id=\"upload-image\"\n                            onChange={(e) => handleImageArticle(e.target.files)}\n                        />\n                    </div>\n                    {/* <button id=\"upload-image\">Upload Image</button> */}\n                    <Carousel className=\"image-carousel\">\n                        <img\n                            src={\n                                articleImage\n                                    ? articleImage\n                                    : \"https://www.lifewire.com/thmb/P856-0hi4lmA2xinYWyaEpRIckw=/1920x1326/filters:no_upscale():max_bytes(150000):strip_icc()/cloud-upload-a30f385a928e44e199a62210d578375a.jpg\"\n                            }\n                            alt=\"\"\n                            className=\"carousel-image\"\n                        />\n                        <img src={profile} alt=\"\" className=\"carousel-image\" />\n                    </Carousel>\n                    <label htmlFor=\"heading\">Title:</label>\n                    <input\n                        type=\"text\"\n                        id=\"heading\"\n                        className=\"addpost-input-feilds\"\n                        value={articleData.title}\n                        onChange={(e) =>\n                            setarticleData((prev) => {\n                                return { ...prev, title: e.target.value };\n                            })\n                        }\n                    />\n                    <label htmlFor=\"caption\">Caption:</label>\n                    <textarea\n                        name=\"post-caption\"\n                        id=\"post-caption\"\n                        cols=\"20\"\n                        rows=\"10\"\n                        value={articleData.caption}\n                        onChange={(e) =>\n                            setarticleData((prev) => {\n                                return { ...prev, caption: e.target.value };\n                            })\n                        }\n                        className=\"addpost-input-feilds\"\n                    ></textarea>\n                    {/* {(() => {\n            if (selectedValue != \"MEME\") {\n              return (\n                <>\n                  <label htmlFor=\"caption\">Post Body:</label>\n                  <textarea\n                    name=\"post-caption\"\n                    id=\"post-caption\"\n                    cols=\"40\"\n                    rows=\"10\"\n                    value={articleData.body}\n                    onChange={(e) =>\n                      setarticleData((prev) => {\n                        return { ...prev, body: e.target.value };\n                      })\n                    }\n                    className=\"addpost-input-feilds\"\n                  ></textarea>\n                </>\n              );\n            }\n          })()} */}\n                    {/* <TextEditorpost /> */}\n                    <label htmlFor=\"body\" style={{ marginBottom: \"10px\" }}>\n                        Body:\n          </label>\n                    <div className=\"App\">\n                        {/* <header className=\"App-header\">Rich Text Editor Example</header> */}\n                        <Editor\n                            editorState={editorState}\n                            onEditorStateChange={handleEditorChange}\n                            wrapperClassName=\"wrapper-class\"\n                            editorClassName=\"editor-class\"\n                            toolbarClassName=\"toolbar-class\"\n                            toolbar={{\n                                image: {\n                                    uploadCallback: uploadImageCallBack,\n                                    alt: { present: true, mandatory: false },\n                                },\n                            }}\n                        />\n                        {/* <div\n              className=\"preview\"\n              dangerouslySetInnerHTML={createMarkup(convertedContent)}\n            >\n            </div> */}\n                    </div>\n                    <div style={{ alignItems: \"center\", textAlign: \"center\" }}>\n                        <Loader\n                            visible={showLoader}\n                            type=\"MutatingDots\"\n                            color=\"#00BFFF\"\n                            height={100}\n                            width={100}\n                        />\n                    </div>\n\n                    <button className=\"post-final-button\" onClick={submitArticle}>\n                        Post Content\n          </button>\n                </form>\n            </div>\n        );\n    }\n    if (article == false) {\n        postForm = (\n            <div className=\"addpost-form-div\">\n                <form className=\"addpost-form\">\n                    <div className=\"posttype-div\">\n                        <label htmlFor=\"post-type\" className=\"form-post-type-label\">\n                            Choose a Post label:\n            </label>\n                        <select\n                            id=\"post-type\"\n                            name=\"posttype\"\n                            className=\"form-post-type-select\"\n                        >\n                            <option value=\"Health\">Health and Fitness</option>\n                            <option value=\"Fashion\">Fashion</option>\n                            <option value=\"Entertainment\">Entertainment</option>\n                            <option value=\"Learning\">Learning</option>\n                        </select>\n                    </div>\n                    <div style={{ flexDirection: \"row\" }}>\n                        <label htmlFor=\"upload-image\">\n                            Upload Image related to article:\n            </label>\n                        {/* <button id=\"upload-image\" >Upload Image</button> */}\n                        <input\n                            type=\"file\"\n                            id=\"upload-image\"\n                            onChange={(value) => {\n                                // console.log(value)\n                                handleImage(value.target.files);\n                            }}\n                        />\n                    </div>\n                    {/* <button id=\"upload-image\" >Upload Image</button> */}\n                    <Carousel className=\"image-carousel\">\n                        <img src={image} alt=\"\" className=\"carousel-image\" />\n                        <img src={profile} alt=\"\" className=\"carousel-image\" />\n                    </Carousel>\n                    <label htmlFor=\"caption\">Post Caption:</label>\n                    <textarea\n                        name=\"post-caption\"\n                        value={imageData.caption}\n                        onChange={(e) =>\n                            setimageData({ ...imageData, caption: e.target.value })\n                        }\n                        id=\"post-caption\"\n                        cols=\"20\"\n                        rows=\"10\"\n                        className=\"addpost-input-feilds\"\n                    ></textarea>\n                    <button className=\"post-final-button\" onClick={submitWithImage}>\n                        Post Image\n          </button>\n                </form>\n            </div>\n        );\n    }\n\n    const showOriginals = (\n        <div className=\"addpost-container\">\n            <div className=\"addpost-header\">\n                <div className=\"addpost-title\">Quink Post Originals</div>\n                <div className=\"cancel-addpost\">\n                    <Link to=\"/home\" className=\"cancel-icon-addpost\">\n                        <CancelOutlinedIcon style={{ fontSize: 32 }} />\n                    </Link>\n                </div>\n            </div>\n            {/* <div className=\"addpost-type\">\n        <div\n          className={`post-type-toggle ${article && \"post-type-active\"}`}\n          onClick={handleTypeClick1}\n        >\n          Article\n        </div>\n        <div\n          className={`post-type-toggle ${!article && \"post-type-active\"}`}\n          onClick={handleTypeClick2}\n        >\n          Image\n        </div>\n      </div> */}\n            <div>{postForm}</div>\n        </div>\n    )\n    const checkPass = () => {\n        if (password == \"rightpassword\") {\n            setshowModaloriginal(true)\n        }\n    }\n    const handleTypeClick1 = () => {\n        setArticle(true);\n    };\n    const handleTypeClick2 = () => {\n        setArticle(false);\n    };\n    return (<>\n\n        {(() => {\n            if (!showModaloriginal) {\n                return <>\n                    <input value={password} onChange={e => setpassword(e.target.value)} placeholder=\"Enter password\" />\n                    <button onClick={checkPass}>submit</button>\n                </>\n            }\n            else {\n                return <div className=\"addpost-container\">\n                    <div className=\"addpost-header\">\n                        <div className=\"addpost-title\">Quink Post Originals</div>\n                        <div className=\"cancel-addpost\">\n                            <Link to=\"/home\" className=\"cancel-icon-addpost\">\n                                <CancelOutlinedIcon style={{ fontSize: 32 }} />\n                            </Link>\n                        </div>\n                    </div>\n                    {/* <div className=\"addpost-type\">\n        <div\n          className={`post-type-toggle ${article && \"post-type-active\"}`}\n          onClick={handleTypeClick1}\n        >\n          Article\n        </div>\n        <div\n          className={`post-type-toggle ${!article && \"post-type-active\"}`}\n          onClick={handleTypeClick2}\n        >\n          Image\n        </div>\n      </div> */}\n                    <div>{postForm}</div>\n                </div>\n            }\n\n        })()}\n\n\n    </>\n    );\n}\n\nexport default PostChallenge;\n","D:\\quink-post-web-seo\\src\\Components\\Reducer\\index.js",["247","248","249","250","251","252","253","254","255","256"],"// import ACTION from \"./Action\"\nimport {\n    USER_LOGGED_IN,\n    CLOUDINARY_IMAGE,\n    SEARCH_POST,\n    CHALLENGE_POST,\n    COMMUNITY,\n    COMMUNITY_POST,\n    TOGGLE_CHAT_CONTACT,\n    SELECTED_POST_TYPE,\n    SHOW_SEARCH,\n    LANGUAGE_PREFERENCE\n\n} from './Action'\n\nconst initialState = {\n    user: {\n        name: \" \"\n    },\n    cloudinary: \"\",\n    // searchPost: [],\n    SEARCH_POST: \"\",\n\n    community: [],\n    challengePost: [],\n    toggleContactReducer: null,\n    SELECTED_POST_TYPE: \"ARTICLE\",\n    SHOW_SEARCH: false,\n    LANGUAGE_PREFERENCE: \"English\"\n}\n\nconst rootReducer = (state = initialState, Action) => {\n    switch (Action.type) {\n        case USER_LOGGED_IN:\n\n            return { ...state, user: Action.payload }\n            break;\n\n        case CLOUDINARY_IMAGE:\n            return { ...state, cloudinary: Action.payload }\n            break;\n        case SEARCH_POST:\n            return { ...state, searchPost: Action.payload }\n\n            break;\n        case CHALLENGE_POST:\n            return { ...state, challengePost: Action.payload }\n\n            break;\n        case COMMUNITY:\n            return { ...state, community: Action.payload }\n\n            break;\n        case TOGGLE_CHAT_CONTACT:\n            return { ...state, toggleContactReducer: Action.payload }\n            break;\n        case SELECTED_POST_TYPE:\n            return { ...state, SELECTED_POST_TYPE: Action.payload }\n            break\n        case SHOW_SEARCH:\n            return { ...state, SHOW_SEARCH: Action.payload }\n            break;\n        case SEARCH_POST:\n            return { ...state, SEARCH_POST: Action.payload }\n        case LANGUAGE_PREFERENCE: {\n            return { ...state, LANGUAGE_PREFERENCE: Action.payload }\n        }\n        default:\n            return state;\n    }\n}\nexport default rootReducer\n","D:\\quink-post-web-seo\\src\\Components\\chatpage.jsx",["257","258","259","260","261","262","263"],"import React, { useEffect, useState } from \"react\";\nimport \"../Styles/chatpage.css\";\nimport { Link } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport profileimageC from \"../Assets/profile.jpg\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport { TOGGLE_CHAT_CONTACT } from \"./Reducer/Action\";\n\nimport Modal from \"react-modal\";\nimport ChatContent from \"./chatcontent\";\nimport axios from \"axios\";\nimport BACKEND from \"./Constants/Backend\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport io from \"socket.io-client\";\nconst socket = io(`${BACKEND}`, {\n  transports: [\"websocket\", \"polling\", \"flashsocket\"],\n});\n\nfunction Chatpage(props) {\n  console.log(props?.location?.state);\n  const otherState = props?.location?.state;\n  const dispatch = useDispatch();\n  const globalState = useSelector((state) => state);\n  const { user } = globalState;\n  const [Data, setData] = useState([]);\n  const [chatUser1, setchatUser1] = useState();\n  const [chatUser2, setchatUser2] = useState();\n  const [chatCommonId, setchatCommonId] = useState();\n  const [toggleContact, settoggleContact] = useState(null);\n  const [showRecentChat, setshowRecentChat] = useState(\"hide-recentchats\");\n  const [user2Name, setuser2Name] = useState(\"\");\n  const [user2avatar, setuser2avatar] = useState(\"\");\n  useEffect(() => {\n    // console.log(toggleContact)\n    if (toggleContact != null) {\n      // socket.emit(\"getPrivatePreviousChat\", {\n      //     chatId: chatCommonId,tate\n      //     sender: user._id,\n      //     user2: chatUser2,\n      //   })\n    }\n    // soc\n  }, [toggleContact]);\n\n  const handleRecentChats = () => {\n    if (showRecentChat == \"show-recentchats\") {\n      setshowRecentChat(\"hide-recentchats\");\n    } else {\n      setshowRecentChat(\"show-recentchats\");\n    }\n  };\n\n  // const otherState=props.location.state\n\n  const selectContact = (user2, chatId, user2Name, user2avatar) => {\n    setchatUser2(user2);\n    setuser2Name(user2Name);\n    setchatCommonId(chatId);\n    setuser2avatar(user2avatar);\n    if (toggleContact == null) {\n      settoggleContact(false);\n      dispatch({ type: TOGGLE_CHAT_CONTACT, payload: toggleContact });\n    } else {\n      settoggleContact(!toggleContact);\n      dispatch({ type: TOGGLE_CHAT_CONTACT, payload: toggleContact });\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await axios.post(\n          `${BACKEND}/personalChat/getPartner`,\n          {\n            userId: globalState?.user?._id,\n          }\n        );\n        // console.log(result.data);\n        setData(data.userChats);\n        if (otherState.value) {\n          selectContact(\n            otherState?.user2Id,\n            undefined,\n            otherState?.user2Name,\n            otherState?.user2Avatar\n          );\n        }\n\n        // console.log(Data, \"******************\")\n        // console.log(Data, \"this is ???????????DAta\")\n        // setLoading(false);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, []);\n\n  const contactList = Data?.map((contact) => {\n    // console.log(contact,\"++++++\")\n    // console.log(contact,\"<<<<<thi s is contact\")\n    const { user1, user2 } = contact;\n\n    const temUser = () => {\n      if (user1._id == user._id) {\n        return {\n          userName: user2.userName,\n          user2Id: user2._id,\n          avatar: user2.avatar,\n        };\n      } else {\n        return {\n          userName: user1.userName,\n          user2Id: user1._id,\n          avatar: user1.avatar,\n        };\n      }\n    };\n\n    const get2User = temUser();\n\n    return (\n      <div\n        className=\"contact-individual\"\n        onClick={() =>\n          selectContact(\n            get2User.user2Id,\n            contact._id,\n            get2User.userName,\n            get2User.avatar\n          )\n        }\n        style={{ cursor: \"pointer\" }}\n      >\n        <div className=\"contact-individual-1\">\n          <div className=\"contact-profile\">\n            <Avatar src={get2User.avatar} className=\"contact-profile-avatar\" />{\" \"}\n          </div>\n          <div className=\"contact-individual-container\">\n            <div className=\"contact-individual-name\"> {get2User.userName} </div>\n            <div className=\"contact-individual-message\">{contact.mssg}</div>\n          </div>\n        </div>\n        <div className=\"new-mssg-badge\">{contact.newno}</div>\n      </div>\n    );\n  });\n\n  const [newchatModal, setNewchatModal] = useState(false);\n  const handlemodal = () => {\n    setNewchatModal(true);\n  };\n  const handlemodal1 = () => {\n    setNewchatModal(false);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-upper\">\n        <div>Quink Post | Messaging</div>\n        <div>\n          <Link to=\"/home\" className=\"chat-home-link\">\n            <button className=\"chat-home\">Home</button>\n          </Link>\n        </div>\n      </div>\n      <div onClick={handleRecentChats} className=\"button-recentchat\">\n        Recent Chats\n      </div>\n      <div className=\"mainchat-container\">\n        <div className={`contacts ${showRecentChat}`}>\n          <div className=\"search-newchat\">\n            <input type=\"text\" className=\"chat-search\" placeholder=\"Search..\" />\n            {/* <div> */}\n            <AddBoxIcon className=\"newchat-icon\" onClick={handlemodal} />\n            {/* </div> */}\n          </div>\n          <Modal isOpen={newchatModal} className=\"new-chat-modal\">\n            <div className=\"new-chat-modal-header\">\n              <div className=\"new-chat-modal-header-1\">New Chat</div>\n              <div className=\"new-chat-modal-header-2\" onClick={handlemodal1}>\n                x\n              </div>\n            </div>\n            <div className=\"new-chat-modal-body\">\n              <div className=\"new-chat-each-user\">\n                <div>\n                  <Avatar />\n                </div>\n                <div className=\"new-chat-each-user-info\">\n                  <div className=\"new-chat-each-user-info-displayname\">\n                    Display name\n                  </div>\n                  <div className=\"new-chat-each-user-info-username\">\n                    @username\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Modal>\n          <div\n            className=\"chat-coantainer-1\"\n            // style={{\n            //   display: `${showRecentChat[0]}`,\n            //   height: `${showRecentChat[1]}`,\n            // }}\n          >\n            {contactList}\n          </div>\n        </div>\n        <div className=\"chat\">\n          <div className=\"chat-header\">\n            <div className=\"chat-header-1\">\n              <Avatar src={user2avatar} className=\"chat-header-avatar\" />\n              <div className=\"main-contact\">{user2Name}</div>\n            </div>\n            <div className=\"info-icon\">\n              <InfoIcon />\n            </div>\n          </div>\n\n          {/* {(props?.location?.state) ?\n            () => {\n              settoggleContact(false)\n              dispatch({ type: TOGGLE_CHAT_CONTACT, payload: toggleContact })\n              return <ChatContent chatCommonId={null} sender={user._id} user2Name={otherState?.user2Name} user2Id={otherState?.user2Id} />\n            } : */}\n          {user2Name ? (\n            <ChatContent\n              chatCommonId={chatCommonId}\n              sender={user._id}\n              user2Name={user2Name}\n              user2Id={chatUser2}\n            />\n          ) : (\n            <div\n              style={{\n                textAlign: \"center\",\n                paddingTop: \"20px\",\n                paddingBottom: \"20px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              No chat selected. Double Tap to select a contact\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatpage;\n","D:\\quink-post-web-seo\\src\\Components\\homepage.jsx",["264","265","266","267"],"import React, { useEffect } from \"react\";\nimport Navbar from \"./navbar\";\nimport Primaryfeed from \"./primaryfeed\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Homepage(props) {\n  const history = useHistory()\n  const value = localStorage.getItem(\"QuinkPostUserLoggedIn\");\n  // if (value == false) {\n  //   history.push(\"/\")\n\n  // }\n  useEffect(async () => {\n    const value = await localStorage.getItem(\"QuinkPostUserLoggedIn\")\n    console.log(\"value\", value)\n\n   \n    if (value == \"false\") {\n      console.log(\"inside value\")\n      history.push(\"/\")\n    }\n\n  }, [])\n  // console.log(props.route.params, \"this params is in home screen\")\n  // console.log(localStorage.getItem(\"Quink-Post-User\"),\"this is user <<<<<<<<<<<<<<<\")\n  //   useEffect(() => {\n  //  (async()=>{\n  //   try{\n  //   //   const user=await axios.get(\"/user/6034c1d7b440fa71fc16fc5b\")\n  //   // console.log(user.data,\"this is kuser from backend\")\n  //   // dispatch({type:Action.USER_LOGGED_IN,payload:user.data.user})\n\n  //   }catch(e){console.log(e)}\n  //  })()  \n\n  //   }, [])\n\n  return (\n    <div className=\"homecontainer\" style={{ overflowX: 'hidden', overflowY: 'hidden' }}>\n      <Navbar />\n      <Primaryfeed />\n    </div>\n  );\n}\n\nexport default Homepage;\n","D:\\quink-post-web-seo\\src\\Components\\Original.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\loginpage.jsx",["268","269","270","271","272","273","274","275","276","277"],"import React, { useState } from \"react\";\nimport \"../Styles/loginpage.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport BACKEND from \"./Constants/Backend\";\nimport Scrollspy from \"react-scrollspy\";\nimport { USER_LOGGED_IN } from \"./Reducer/Action\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport GoogleLogin from \"react-google-login\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Loginpage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // const [userName, setUserName] = useState(\"\")\n  // const [password, setPassword] = useState(\"\")\n  const applink =\n    \"https://apkfab.com/quink-post/com.quinkpost.quinkpost/apk?h=32e536d86dfa2803a52be2c2faa5bfedef20d6399515110b994b6e84fe68d84e\";\n  const [login, setLogin] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [registerValue, setregisterValue] = useState({});\n  const [showLink, setshowLink] = useState(applink);\n  const [showLoader, setshowLoader] = useState(false);\n  const [showtoken, setshowtoken] = useState(\"\")\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const applink = await axios.get(`${BACKEND}/app/link`);\n        const temp = applink.data;\n        // console.log(temp[0]?.appLink)\n        setshowLink(temp[0]?.appLink);\n        // console.log(temp[0].applink)\n        // setshowLoader(true);\n        const userToken = await localStorage.getItem(\"Quink-Post\");\n        console.log(userToken, \">>>>>>\")\n        setshowtoken(userToken)\n        if (userToken != \" \") {\n          console.log(userToken);\n          const result = await axios.post(`${BACKEND}/user/key`, {\n            token: userToken,\n          });\n          console.log(result.data, \"from useEffect\");\n          if (result.data.success) {\n            console.log(result.data);\n            localStorage.setItem(\"QuinkPostUserLoggedIn\", true);\n            dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n            setshowLoader(false);\n            history.push(\"/home\");\n          } else {\n            localStorage.setItem(\"QuinkPostUserLoggedIn\", false);\n            setshowLoader(false);\n          }\n        } else {\n          console.log(\"empty token \", userToken);\n          setshowLoader(false);\n        }\n        // console.log(window)\n      } catch (e) {\n        console.log(e, \"something prob\");\n      }\n    })();\n  }, []);\n\n  const [register, setRegister] = useState(false);\n  const [active, setActive] = useState(false);\n\n  const responseGoogle = async (response) => {\n    // response.preventDefault()\n    // window.reload(false)\n    console.log(response);\n    // console.log(response,\"this is response\")\n    // await localStorage.setItem(\"Quink-Post\", response.user)\n    if (response.profileObj) {\n      // const googleUser=response.profileObj\n      const { googleId, profileObj } = response;\n      const { data } = await axios.post(\n        `${BACKEND}/google/googleUser/${googleId}`,\n        {\n          profileObj,\n        }\n      );\n      console.log(data);\n      const { success, token, user } = data;\n      if (success) {\n        console.log(\"successfully loged in from google\");\n        await localStorage.setItem(\"Quink-Post\", token);\n        dispatch({ type: USER_LOGGED_IN, payload: user });\n        localStorage.setItem(\"QuinkPostUserLoggedIn\", true);\n\n        history.push(\"/home\");\n      }\n      // console.log(data)\n      // const result = await axios.post(`${BACKEND}/user/login`,\n      //   { userName: googleUser.userName, password: login.password })\n    }\n  };\n\n  const submitLogin = async () => {\n    console.log(login,\"<<<<<\")\n    setshowLoader(true);\n    if (login.userName == \"\" || login.password == \"\") {\n      alert(\" check username/password \")\n      setshowLoader(false)\n      return null\n    }\n    try {\n      console.log(\"checking logim\");\n      console.log(login);\n      const result = await axios.post(`${BACKEND}/user/login`, {\n        userName: login.userName,\n        password: login.password,\n      });\n      console.log(\"here i am\");\n      console.log(result.data, \"where is data\");\n      if (result.data.success) {\n        await localStorage.setItem(\"Quink-Post\", result.data.token);\n        console.log(result.data);\n        dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n        localStorage.setItem(\"QuinkPostUserLoggedIn\", true);\n        setshowLoader(false);\n        history.push(\"/home\");\n        // localStorage.setItem(\"Quink-Post-User\", result.data.user)\n        // navigation.navigate(\"BottomTab\", { screen: \"HomeScreen\" });\n        // window.location.pathname = `/home`\n      } else {\n        setshowLoader(false);\n        alert(\"Invalid username/password\");\n        localStorage.setItem(\"QuinkPostUserLoggedIn\", false);\n        console.log(\"invalid user name\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const featurecard1 = (\n    <Card elevation=\"20\" style={{ maxWidth: 345 }}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Earn Money\"\n          height=\"180\"\n          image=\"https://m.economictimes.com/thumb/msid-70740347,width-1200,height-900,resizemode-4,imgsize-186055/rupee-getty-1200.jpg\"\n          title=\"Earn Money\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Create Content! Earn Money!\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            India's first platform that let's you earn through content creation. Content can be created in native languages as well.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{ justifyContent: \"center\" }}>\n        <Button size=\"small\" color=\"primary\">\n          Get Started\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n      </CardActions>\n    </Card>\n  );\n\n  const featurecard2 = (\n    <Card style={{ maxWidth: 345 }} elevation=\"20\">\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Content Creation Challenges\"\n          height=\"180\"\n          image=\"https://islamfact.com/wp-content/uploads/2019/01/huUIsZLk5o.jpg\"\n          title=\"Content Creation Challenges\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Participate in Ongoing Challenges.\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Participate in content creation challenges and win fiscal incentives.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{ justifyContent: \"center\" }}>\n        <Button size=\"small\" color=\"primary\">\n          Get Started\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n      </CardActions>\n    </Card>\n  );\n\n  const featurecard3 = (\n    <Card style={{ maxWidth: 345 }} elevation=\"20\">\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Infotainment\"\n          height=\"180\"\n          image=\"https://thumbs.dreamstime.com/b/infotainment-media-word-concepts-banner-soft-news-mass-tv-entertainment-infographics-linear-icons-purple-background-206580029.jpg\"\n          title=\"Infotainment\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            A complete Infotainment Platform.\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            A platform where you can get both infotainment and knowledgeable stuff.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{ justifyContent: \"center\" }}>\n        <Button size=\"small\" color=\"primary\">\n          Get Started\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n      </CardActions>\n    </Card>\n  );\n\n  const featurecard4 = (\n    <Card style={{ maxWidth: 345 }} elevation=\"20\">\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Connect with Community members\"\n          height=\"180\"\n          image=\"https://legamart.com/articles/wp-content/uploads/2020/08/unnamed.png\"\n          title=\"Connect with Community members\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Join Community! Interact, Share & Work!\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Connect with similar minds. Share your knowledge and learn from them.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{ justifyContent: \"center\" }}>\n        <Button size=\"small\" color=\"primary\">\n          Get Started\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n      </CardActions>\n    </Card>\n  );\n\n  const submitRegister = async (e) => {\n    setshowLoader(true);\n    e.preventDefault();\n    if (registerValue.password == registerValue.confirmPassword) {\n      try {\n        const result = await axios.post(`${BACKEND}/user/signUp`, {\n          userName: registerValue.userName,\n          firstName: registerValue.firstName,\n          password: registerValue.password,\n          email: registerValue.email,\n          // console.log(result.data)\n        });\n        if (result.data.success) {\n          await localStorage.setItem(\"Quink-Post\", result.data.token);\n          console.log(result.data);\n          dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n          localStorage.setItem(\"QuinkPostUserLoggedIn\", true);\n\n          history.push(\"/home\");\n          setshowLoader(false);\n        } else {\n          setshowLoader(false);\n          alert(\"Username is already taken\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"password and confirm password should be same\");\n    }\n  };\n\n  const handleclick1 = () => {\n    if (register === true) {\n      setRegister(false);\n    }\n    if (active == true) {\n      setActive(false);\n    }\n    if (register === false) {\n      setRegister(true);\n    }\n    if (active == false) {\n      setActive(true);\n    }\n  };\n  let form;\n  let formtitle;\n  if (register === true) {\n    formtitle = (\n      <>\n        <div>Already a User? Login</div>\n      </>\n    );\n  } else {\n    formtitle = (\n      <>\n        <div>New User? Signup</div>\n      </>\n    );\n  }\n  if (register === true) {\n    form = (\n      <div className=\"loginbox position-2\">\n        <h1>Create Account</h1>\n        <div style={{ marginBottom: 10 }}>\n          <span\n            style={{\n              fontSize: \"1.3rem\",\n              fontWeight: \"bold\",\n              color: \"#0095f6\",\n              marginRight: 10,\n              backgroundColor: \"#fff\",\n              textShadow: \"1px 1px grey\",\n            }}\n          >\n            Login with google\n          </span>\n          <GoogleLogin\n            clientId=\"990734078330-qteq6i15s9cni5apfkt9qv2okudhqk93.apps.googleusercontent.com\"\n            buttonText=\"Login\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div>\n        {(() => {\n          if (showLoader) {\n            return (<>\n              <div className=\"info-box\" style={{ alignItems: \"center\" }}>\n                <Loader\n                  visible={showLoader}\n                  type=\"MutatingDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                />\n              </div></>)\n          }\n          else {\n            return (<>\n              <div className=\"info-box\">\n                <label htmlFor=\"firstname\">FirstName:</label>\n                <input\n                  type=\"text\"\n                  id=\"firstname\"\n                  value={registerValue.firstName}\n                  onChange={(e) =>\n                    setregisterValue((prev) => {\n                      return { ...prev, firstName: e.target.value };\n                    })\n                  }\n                />\n                {/* <label htmlFor=\"lastname\">LastName:</label>\n          <input type=\"text\" id=\"lastname\" /> */}\n                <label htmlFor=\"username-1\">User Name</label>\n                <input\n                  type=\"text\"\n                  id=\"username-1\"\n                  value={registerValue.userName}\n                  onChange={(e) =>\n                    setregisterValue((prev) => {\n                      return { ...prev, userName: e.target.value };\n                    })\n                  }\n                />\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={registerValue.email}\n                  onChange={(e) =>\n                    setregisterValue((prev) => {\n                      return { ...prev, email: e.target.value };\n                    })\n                  }\n                />\n                <label htmlFor=\"pass-set\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"pass-set\"\n                  value={registerValue.password}\n                  onChange={(e) =>\n                    setregisterValue((prev) => {\n                      return { ...prev, password: e.target.value };\n                    })\n                  }\n                />\n                <label htmlFor=\"pass-set-1\">Confirm Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"pass-set-1\"\n                  value={registerValue.confirmPassword}\n                  onChange={(e) =>\n                    setregisterValue((prev) => {\n                      return { ...prev, confirmPassword: e.target.value };\n                    })\n                  }\n                />\n              </div>\n            </>)\n          }\n        })()}\n\n        <button className=\"button-login\" onClick={submitRegister}>\n          Register\n        </button>\n        <button onClick={handleclick1} className=\"button-toggle\">\n          {formtitle}\n        </button>\n      </div>\n    );\n  } else {\n    form = (\n\n      <div className=\"loginbox position-1\">\n        <a href='https://play.google.com/store/apps/details?id=com.quinkpost.quinkpost'>\n          <button\n            className=\"button-login\"\n            style={{\n              width: \"8rem\",\n              height: \"3rem\",\n              fontSize: \"1rem\",\n              padding: \"4px\",\n            }}\n          >\n            Download App\n          </button>\n        </a>\n\n        <h1>Quink Post | Login</h1>\n\n        <div style={{ marginBottom: 10 }}>\n          <span\n            style={{\n              fontSize: \"1.3rem\",\n              fontWeight: \"bold\",\n              color: \"#0095f6\",\n              marginRight: 10,\n              backgroundColor: \"#fff\",\n              textShadow: \"1px 1px grey\",\n            }}\n          >\n            Login with google\n            {/* {showtoken} */}\n          </span>\n          <GoogleLogin\n            clientId=\"990734078330-qteq6i15s9cni5apfkt9qv2okudhqk93.apps.googleusercontent.com\"\n            buttonText=\"Login\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div>\n        {(() => {\n          if (showLoader) {\n            return (<>\n              <div className=\"info-box\" style={{ alignItems: \"center\" }}>\n                <Loader\n                  visible={showLoader}\n                  type=\"MutatingDots\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                />\n              </div>\n            </>)\n          }\n          else {\n            return (<> <div className=\"info-box\">\n              <label htmlFor=\"username\">Username :</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                value={login.userName}\n                onChange={(value) =>\n                  setLogin({ ...login, userName: value.target.value })\n                }\n              />\n              <label htmlFor=\"password\">Password :</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                value={login.password}\n                onChange={(value) =>\n                  setLogin({ ...login, password: value.target.value })\n                }\n              />\n            </div>\n            </>)\n          }\n        })()}\n\n        <div className=\"remember-me\">\n          <input type=\"checkbox\" style={{ cursor: \"pointer\" }} /> remember me\n        </div>\n        <button className=\"button-login\" onClick={submitLogin}>\n          Login\n        </button>\n        <button onClick={handleclick1} className=\"button-toggle\">\n          {formtitle}\n        </button>\n      </div>\n    );\n  }\n  return (\n    <>\n      <Scrollspy\n        className=\"scrollspy\"\n        items={[\n          // \"section-1\",\n          // \"section-2\",\n          \"section-3\",\n          \"section-4\",\n        ]}\n        currentClassName=\"isCurrent\"\n      >\n        <h3 style={{ margin: \"10px\", padding: \"6px 0\", color: \"#fff\" }}>\n          Quink Post\n        </h3>\n        {/* <li style={{ margin: \"10px\", padding: \"9px 0\", marginLeft: \"auto\" }}>\n          <a style={{ color: \"#fff\", textDecoration: \"none\" }} href=\"#section-1\">\n            Login\n          </a>\n        </li> */}\n        {/* <li style={{ margin: \"10px\", padding: \"9px 0\", marginLeft: \"auto\" }}>\n          <a style={{ color: \"#fff\", textDecoration: \"none\" }} href=\"#section-2\">\n            Register\n          </a>\n        </li> */}\n        <li style={{ margin: \"10px\", padding: \"9px 0\", marginLeft: \"auto\" }}>\n          <a\n            style={{ color: \"#fff\", textDecoration: \"none\" }}\n            href=\"#section-3\"\n          >\n            Features\n          </a>\n        </li>\n        <li style={{ margin: \"10px\", padding: \"9px 0\" }}>\n          <a\n            style={{ color: \"#fff\", textDecoration: \"none\" }}\n            href=\"#section-4\"\n          >\n            Contact\n          </a>\n        </li>\n      </Scrollspy>\n\n      <div className={`container ${register && \"container2\"}`}>\n        <div>{form}</div>\n        <div className=\"watermark\">\n          <span>Quink</span>\n          <span className=\"post\">\n            Post<span className=\"dot\">.</span>\n          </span>\n        </div>\n        <div className=\"info\">\n          <span>\"</span>Every Content Matters.. Make sure your's mean something\n        </div>\n\n        <div className=\"services-quink\">\n          {/* <section id=\"section-1\">\n            <h2>Section 1</h2>\n            <p>\n              What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the\n              printing and typesetting industry. Lorem Ipsum has been the\n              industry's standard dummy text ever since the 1500s, when an\n              unknown printer took a galley of type and scrambled it to make a\n              type specimen book. It has survived not only five centuries, but\n              also the leap into electronic typesetting, remaining essentially\n              unchanged. It was popularised in the 1960s with the release of Le\n            </p>\n          </section> */}\n          {/* <section id=\"section-2\">\n            <h2>Section 2</h2>\n            <p>\n              look even slightly believable. If you are going to use a passage\n              of Lorem Ipsum, you need to be sure there isn't anything\n              embarrassing hidden in the middle of text. All the Lorem Ipsum\n              generators on the Internet tend to repeat predefined chunks as\n              necessary, making this the first true generator on the Internet.\n              It uses a dictionary of over 200 Latin words, combined with a\n              handful of model sentence structures, to generate Lorem Ipsum\n              which looks reasonable. The generated Lorem Ipsum is therefore\n              always free from repetition, injected humour, or\n              non-characteristic words etc.\n            </p>\n          </section> */}\n          <section id=\"section-3\">\n            <h2 style={{ fontSize: \"35px\" }}>Features</h2>\n            {/* <p>\n              India's first infotainment platform that let's you earn through\n              content creation.\n            </p>\n            <p>\n              A platform with content creation, community\n              connect/work with similar minds, mentorship and content creation\n              challenges also providing Quink Post original content such as transcribed\n              interviews, survey reports, research summaries, written podcasts,\n              magazines, articles.\n            </p>\n            <p>Create Content! Earn Money!</p> */}\n            <div style={{ textAlign: \"-webkit-center\" }}>\n              <Grid\n                container\n                spacing={3}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item xs={12} sm={6} lg={3} md={3}>\n                  <div>{featurecard1}</div>\n                </Grid>\n                <Grid item xs={12} sm={6} lg={3} md={3}>\n                  <div>{featurecard2}</div>\n                </Grid>\n                <Grid item xs={12} sm={6} lg={3} md={3}>\n                  <div>{featurecard3}</div>\n                </Grid>\n                <Grid item xs={12} sm={6} lg={3} md={3}>\n                  <div>{featurecard4}</div>\n                </Grid>\n              </Grid>\n            </div>\n            {/* <div style={{ display: \"flex\" }}>\n              <div style={{ marginRight: \"25px\" }}>{featurecard1}</div>\n              <div style={{ marginRight: \"25px\" }}>{featurecard2}</div>\n              <div style={{ marginRight: \"25px\" }}>{featurecard3}</div>\n              <div style={{ marginRight: \"25px\" }}>{featurecard3}</div>\n              <div style={{ marginRight: \"25px\" }}>{featurecard3}</div>\n            </div> */}\n          </section>\n          <section id=\"section-4\">\n            <h2 style={{ fontSize: \"35px\" }}>Contact Us</h2>\n            <p style={{ fontWeight: \"bold\", marginLeft: \"8px\" }}>E-Mail : info@quinkpost.com</p>\n            <p style={{ fontWeight: \"bold\", marginLeft: \"8px\" }}>\n              Address : Bhopal Smart City Development Corporation Ltd,\n              Govindpura\n            </p>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Loginpage;\n","D:\\quink-post-web-seo\\src\\Components\\profile.jsx",["278","279"],"import React, { useEffect, useState } from \"react\";\nimport \"../Styles/profile.css\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport { Avatar } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport BACKEND from \"./Constants/Backend\";\nimport { USER_LOGGED_IN } from \"./Reducer/Action\";\nimport Quinkpost from \"../Assets/Quinkpost.jpg\";\n\nfunction Profile() {\n  const defaultUrl =\n    \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\";\n  const globalUser = useSelector((state) => state);\n  // console.log(globalUser);\n  const dispatch = useDispatch();\n  const loggedInUser = globalUser?.user;\n  const [saved, setSaved] = useState(false);\n  const [followermodalIsOpen, followersetIsOpen] = useState(false);\n  const [followingmodalIsOpen, followingsetIsOpen] = useState(false);\n  const [followers, setFollowers] = useState([]);\n  const [followings, setfollowings] = useState([]);\n  const [userPost, setuserPost] = useState([]);\n  const [userSavedPost, setuserSavedPost] = useState([]);\n  const [toggleFollowers, settoggleFollowers] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const userPost = await axios.get(\n          `${BACKEND}/user/${globalUser.user._id}`\n        );\n        setuserPost(userPost.data.user.post);\n        setuserSavedPost(userPost.data.user.savedPost);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      console.log(\"useEffect called  *************\");\n      // const globalUser = useSelector((state) => state);\n      const data = await axios.get(\n        `${BACKEND}/user/follwers/followings/${globalUser.user._id}`\n      );\n      console.log(data.data, \"<<<<this is inside effect\");\n      setFollowers(data.data.followers);\n      setfollowings(data.data.followings);\n    })();\n  }, [toggleFollowers]);\n\n  const removeFollowing = async (user2Id) => {\n    try {\n      console.log(\"kok lkjsdfj<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\");\n      const result = await axios.post(`${BACKEND}/follow/unfollow`, {\n        followerId: loggedInUser._id,\n        followingToId: user2Id,\n      });\n      console.log(result.data, \"in remove follower function\");\n      if (result.data.success) {\n        settoggleFollowers(!toggleFollowers);\n        console.log(\"follower removed <<<<<<<<<<<<<<<<\");\n        console.log(result.data, \"<<<<<<<<<<<<<<<<<<<<<\");\n        dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleClick = () => {\n    setSaved(false);\n  };\n  const handleClick1 = () => {\n    setSaved(true);\n  };\n\n  const handlefollowerModal = () => {\n    followersetIsOpen(true);\n  };\n  const handlefollowerModal1 = () => {\n    followersetIsOpen(false);\n  };\n  const handlefollowingModal = () => {\n    followingsetIsOpen(true);\n  };\n  const handlefollowingModal1 = () => {\n    followingsetIsOpen(false);\n  };\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-container-upper\">\n        <div className=\"profile-container-upper-heading\">Profile</div>\n        <div className=\"profile-container-upper-homeicon\">\n          <Link to=\"/home\">\n            <IconButton className=\"iconbutton-profile\">\n              <HomeRoundedIcon />\n            </IconButton>\n          </Link>\n        </div>\n      </div>\n      <div className=\"profile-container-infobox\">\n        <div className=\"profile-profile-image\">\n          <div\n            className=\"profile-profile-image-img\"\n            style={{\n              backgroundImage: loggedInUser?.avatar\n                ? `url(${loggedInUser?.avatar})`\n                : `url(${defaultUrl})`,\n            }}\n          ></div>\n        </div>\n        <div className=\"profile-profile-info\">\n          <div className=\"profile-profile-names\">\n            <div>\n              <div className=\"profile-profile-displayname\">\n                {loggedInUser?.userName}\n              </div>\n              <div className=\"profile-profile-username\">\n                {loggedInUser?.firstName}\n              </div>\n            </div>\n            <Link to=\"/edit\" className=\"edit-link\">\n              <div className=\"editprofile\">\n                <CreateIcon />\n                <span className=\"editprofile-text\">Edit Profile</span>\n              </div>\n            </Link>\n          </div>\n          <div>\n            <div className=\"profilesecondary\">\n              <div className=\"profile-detail-profile\">\n                <div className=\"profile-detail-each-profile\">Quinks</div>\n                <div className=\"number-profile\">\n                  {loggedInUser?.post?.length}\n                </div>\n              </div>\n              <div className=\"line\"></div>\n              <div className=\"profile-detail\" onClick={handlefollowerModal}>\n                <div className=\"profile-detail-each-profile\">followers</div>\n                <div className=\"number-profile\">\n                  {loggedInUser?.followers?.length}\n                </div>\n              </div>\n              <Modal isOpen={followermodalIsOpen} className=\"followers-modal\">\n                <div className=\"follower-modal-header\">\n                  <div className=\"follower-modal-header-head\">Follower</div>\n                  <div onClick={handlefollowerModal1}>\n                    <CancelOutlinedIcon style={{ fontSize: \"20px\" }} />\n                  </div>\n                </div>\n                <div className=\"follower-each-modal-container\">\n                  {(() => {\n                    return followers?.map((followers, key) => {\n                      // console.log(followers, \"this is>>>>>>>>>>>>>>>>>\")\n                      return (\n                        <Link to={`/profileOther/${followers?._id}`}>\n                          <div\n                            className=\"follower-each-modal\"\n                            key={key}\n                            style={{ textDecoration: \"none\" }}\n                          >\n                            <div className=\"follower-each-modal-avatar\">\n                              <Avatar />\n                            </div>\n                            <div className=\"follower-each-modal-info\">\n                              <div\n                                className=\"follower-each-modal-info-displayname\"\n                                style={{ textDecoration: \"none\" }}\n                              >\n                                {followers?.userName}\n                              </div>\n                              <div className=\"follower-each-modal-info-username\">\n                                {followers?.firstName}\n                              </div>\n                            </div>\n\n                            {/* <div className=\"follower-each-modal-remove\" style={{ cursor: \"pointer\" }}>remove</div> */}\n                          </div>\n                        </Link>\n                      );\n                    });\n                  })()}\n                </div>\n              </Modal>\n              <div className=\"line\"></div>\n              <div className=\"profile-detail\" onClick={handlefollowingModal}>\n                <div className=\"profile-detail-each-profile\">following</div>\n                <div className=\"number-profile\">\n                  {loggedInUser?.followings?.length}\n                </div>\n              </div>\n              <Modal isOpen={followingmodalIsOpen} className=\"followers-modal\">\n                <div className=\"follower-modal-header\">\n                  <div className=\"follower-modal-header-head\">Following</div>\n                  <div onClick={handlefollowingModal1}>\n                    <CancelOutlinedIcon style={{ fontSize: \"20px\" }} />\n                  </div>\n                </div>\n                <div className=\"follower-each-modal-container\">\n                  {(() => {\n                    return followings?.map((following, key) => {\n                      return (\n                        <div className=\"follower-each-modal\">\n                          <div className=\"follower-each-modal-avatar\">\n                            <Avatar />\n                          </div>\n                          <div className=\"follower-each-modal-info\">\n                            <div className=\"follower-each-modal-info-displayname\">\n                              {following?.userName}\n                            </div>\n                            <div className=\"follower-each-modal-info-username\">\n                              {following?.firstName}\n                            </div>\n                          </div>\n                          <div\n                            style={{ cursor: \"pointer\" }}\n                            className=\"follower-each-modal-remove\"\n                            onClick={() => removeFollowing(following._id)}\n                          >\n                            unfollow\n                          </div>\n                        </div>\n                      );\n                    });\n                  })()}\n                </div>\n              </Modal>\n            </div>\n            <div style={{ borderLeft: \"inset\" }}>\n              <div className=\"profile-bio\">Bio:</div>\n              <div className=\"profile-bio-detail\">\n                {loggedInUser?.bio ? loggedInUser?.bio : \"Add your bio\"}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"profile-saved-toggle\">\n        <div\n          className={`profile-saved-toggle-each ${!saved && \"profile-toggle-active\"\n            }`}\n          onClick={handleClick}\n        >\n          <AllInboxIcon />\n          Posts\n        </div>\n        <div\n          className={`profile-saved-toggle-each ${saved && \"profile-toggle-active\"\n            }`}\n          onClick={handleClick1}\n        >\n          <BookmarkBorderIcon />\n          Saved Posts\n        </div>\n      </div>\n      <div\n        className={`main-profile-container ${!saved && \"profile-display-none\"}`}\n      >\n        {(() => {\n          return userSavedPost.map((post, index) => {\n            // console.log(post, \"this is saved post\")\n            return (\n              // <Link\n              //   to={{\n              //     pathname: ``,\n              //     state: { post, user: globalUser },\n              //   }}\n              // >\n              <a href={`${post?.title}/${loggedInUser}/${post?._id}`}>\n                <div className=\"individual-post-profile\" key={index}>\n                  <img\n                    src={post?.image}\n                    alt=\"\"\n                    className=\"individual-post-profile-img\"\n                  />\n                  <div className=\"individual-post-profile-heading\">\n                    {post?.caption}\n                  </div>\n                </div>\n              </a>\n            );\n          });\n        })()}\n      </div>\n      <div\n        className={`main-profile-container ${saved && \"profile-display-none\"}`}\n      >\n        {(() => {\n          return userPost.map((post, index) => {\n            // console.log(post)\n            return (\n              // <Link\n              //   to={{\n              //     pathname: `${post.title}/${loggedInUser}/${post._id}`,\n              //     state: { post, user: globalUser },\n              //   }}\n              // >\n              <a href={`${post?.title}/${loggedInUser}/${post?._id}`}>\n                <div className=\"individual-post-profile\" key={index}>\n                  <img\n                    src={post?.image ? post?.image : Quinkpost}\n                    alt=\"\"\n                    className=\"individual-post-profile-img\"\n                  />\n                  <div className=\"individual-post-profile-heading\">\n                    {post?.caption}\n                  </div>\n                </div>\n              </a>\n            );\n          });\n        })()}\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","D:\\quink-post-web-seo\\src\\Components\\communitypage.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\postdetail.jsx",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { useEffect, useState } from \"react\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport \"../Styles/postdetail.css\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport Quinkpost from '../Assets/Quinkpost.jpg';\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport NearMeOutlinedIcon from \"@material-ui/icons/NearMeOutlined\";\nimport DOMPurify from \"dompurify\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport ModeCommentOutlinedIcon from \"@material-ui/icons/ModeCommentOutlined\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HelmetBase from \"./HelmetBase\";\nimport {\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  EmailShareButton,\n  EmailIcon,\n  FacebookIcon,\n  FacebookShareButton,\n  InstapaperShareButton,\n  InstapaperIcon,\n  LineShareButton,\n  LineIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  LivejournalShareButton,\n  LivejournalIcon,\n  PinterestShareButton,\n  PinterestIcon,\n  RedditShareButton,\n  RedditIcon,\n  TumblrShareButton,\n  TumblrIcon,\n  ViberShareButton,\n  ViberIcon,\n  VKShareButton,\n  VKIcon,\n  FacebookMessengerIcon,\n  FacebookMessengerShareButton,\n} from \"react-share\";\nimport { Avatar } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport BACKEND from \"./Constants/Backend\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n// import { SaveSharpIcon } from \"@material-ui/icons\";\nimport SaveSharpIcon from \"@material-ui/icons/SaveSharp\";\nimport io from \"socket.io-client\"\nconst socket = io(`${BACKEND}`, { transports: ['websocket', 'polling', 'flashsocket'] });\n\n\nfunction Postdetail(props) {\n  const postId = props.match.params.postId;\n  const user = useSelector((state) => state.user);\n  const [postData, setpostData] = useState();\n  const [cmmtMobModal, setcmmtMobModal] = useState(false);\n  const [cmmnt, setCmmnt] = useState(false);\n  const [commentInPost, setcommentInPost] = useState([]);\n  const [likeComment, setlikeComment] = useState([]);\n  const [totalComment, settotalComment] = useState(\"...\");\n  const [totalLikedPost, settotalLikedPost] = useState(\"...\");\n  const [liked, setLiked] = useState(false);\n  const [textInComment, settextInComment] = useState(\"\");\n  const [commentToggle, setcommentToggle] = useState(false);\n  const [sharemodalIsOpen, setsharemodalIsOpen] = useState(false);\n  const [forwardmodalIsOpen, setforwardmodalIsOpen] = useState(false);\n  const [toggelSave, settoggelSave] = useState(true);\n  const [chatData, setchatData] = useState([])\n  const locationExact = window.location.href;\n  useEffect(() => {\n    (async () => {\n      try {\n        const getPostData = await axios.get(`${BACKEND}/post/open/${postId}`);\n        // console.log(getPostData.data.post.body,\"***********\")\n        const postBody = getPostData.data.post.body;\n        // console.log(postBody)\n        // console.log(postBody.search(\"+\"),\"this is split\")\n        // console.log(\"called like\")\n        await setpostData(getPostData.data.post);\n\n        console.log(postData, \"this is post Data\");\n\n        const resultLikedPost = await axios.post(\n          `${BACKEND}/like/checkIsLiked`,\n          {\n            userId: user._id,\n            postId: postId,\n          }\n        );\n        if (resultLikedPost.data.success) {\n          // console.log(resultLikedPost.data, \"this is result from backend\");\n\n          setLiked(resultLikedPost.data.islikedBy);\n          settotalLikedPost(resultLikedPost.data.length);\n        } else {\n          settotalLikedPost(resultLikedPost.data.length);\n        }\n      } catch (e) {\n        console.log(e, \"error\");\n      }\n    })();\n  }, [liked]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await axios.post(\n          `${BACKEND}/personalChat/getPartner`,\n          {\n            userId: user?._id,\n          }\n        );\n        setchatData(data.userChats );\n        // if (otherState.value) {\n        //   selectContact(otherState?.user2Id, undefined, otherState?.user2Name, otherState?.user2Avatar)\n        // }\n      } catch (e) { console.log(e) }\n    })()\n  }, [])\n\n  useEffect(() => {\n    (async () => {\n      const result = await axios.post(`${BACKEND}/save/checkIsSaved`, {\n        userId: user._id,\n        postId: postId,\n      });\n      console.log(result.data, \"this is saved console\");\n      if (result.data.success) {\n        settoggelSave(true);\n      } else {\n        settoggelSave(false);\n      }\n    })();\n  }, []);\n\n  useEffect(async () => {\n    const result = await axios.get(`${BACKEND}/comment/inPost/${postId}`);\n    // console.log(result);\n    setcommentInPost(result.data.comments.reverse());\n    result.data.comments.map((comment) => {\n      return setlikeComment((prev) => {\n        return { ...prev, [comment._id]: comment.likedBy };\n      });\n    });\n    // settotalLikedPost(postData.likedBy.length)\n    settotalComment(result.data.comments.length);\n  }, [, commentToggle]);\n\n  const send = (user2Id, chatId) => {\n    // console.log(mem,\"this ismem\")\n    // console.log(user2Id, \"this is id\");\n\n    socket.emit(\"OneToOneChat\", {\n      sender: { _id: user._id },\n      user2: user2Id,\n      chatId: chatId,\n      sharePost: true,\n      data: postData,\n    });\n  };\n  \n  // const send = (user2Id, chatId) => {\n  //   // console.log(mem,\"this ismem\")\n  //   console.log(user2Id, \"this is id\");\n\n  //   socket.emit(\"OneToOneChat\", {\n  //     sender: { _id: user._id },\n  //     user2: user2Id,\n  //     chatId: chatId,\n  //     sharePost: true,\n  //     data: postData,\n  //   });\n  // };\n\n\n  const contactList = chatData?.map((contact) => {\n    // console.log(contact,\"++++++\")\n    console.log(contact,\"<<<<<thi s is contact\")\n    // console.log(contact, \"<<<<<\")\n    const { user1, user2 } = contact\n\n    const temUser = () => {\n\n      if (user1._id == user._id) {\n        return { userName: user2.userName, user2Id: user2._id, avatar: user2.avatar }\n      }\n      else {\n        return { userName: user1.userName, user2Id: user1._id, avatar: user1.avatar }\n      }\n    }\n\n    const get2User = temUser()\n\n    return (\n      <div className=\"contact-individual\" style={{ cursor: \"pointer\" }}>\n        <HelmetBase title={`${postData?.title}`} link={`/user${postData?.author?.userName}/${postData?.title}/${postData?.author?._id}`} />\n        <div className=\"contact-individual-1\">\n          <div className=\"contact-profile\">\n            <Avatar src={get2User.avatar} className=\"contact-profile-avatar\" />{\" \"}\n          </div>\n          <div className=\"contact-individual-container\">\n            <div className=\"contact-individual-name\"> {get2User.userName} </div>\n            {/* <div className=\"contact-individual-message\">{contact.mssg}</div> */}\n          </div>\n        </div>\n        <div className=\"new-mssg-badge\" onClick={() => send(get2User?.user2Id, contact._id)}>Send </div>\n      </div>\n    );\n  });\n\n\n// console.log(contactList,\"<<<<<<<<<<<<<<<<<<<<<\")\n  const onSave = async () => {\n    try {\n      if (toggelSave) {\n        const result = await axios.patch(`${BACKEND}/save/unsave`, {\n          userId: user._id,\n          postId: postId,\n        });\n        if (result.data.success) {\n          // dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n          settoggelSave(false);\n        }\n      } else {\n        const result = await axios.patch(`${BACKEND}/save`, {\n          userId: user._id,\n          postId: postId,\n        });\n\n        if (result.data.success) {\n          // dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n          settoggelSave(true);\n        }\n      }\n    } catch (e) {\n      console.log(e, \"error\");\n    }\n  };\n\n  const handleShareModal = () => {\n    setsharemodalIsOpen(!sharemodalIsOpen);\n  };\n\n  const handleforwardModal = () => {\n    setforwardmodalIsOpen(!forwardmodalIsOpen);\n  };\n\n  const settings = {\n    dots: true,\n    fade: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n  };\n  const handleComment = () => {\n    if (cmmnt == true) {\n      setCmmnt(false);\n      // console.log(cmmnt);\n    }\n    if (cmmnt == false) {\n      setCmmnt(true);\n    }\n  };\n\n  const shareUrl = `${locationExact}`;\n\n  const LikeThisPost = async () => {\n    try {\n      if (liked) {\n        // console.log(\"going to dislike\");\n        const result = await axios.patch(`${BACKEND}/like/dislike`, {\n          userId: user._id,\n          postId: postId,\n        });\n        if (result.data.success) {\n          setLiked(false);\n        }\n      } else {\n        console.log(\"going to like\");\n        const result = await axios.patch(`${BACKEND}/like`, {\n          userId: user._id,\n          postId,\n        });\n        if (result.data.success) {\n          await axios.post(`${BACKEND}/notification/likedBy/${user._id}/${postData._id}/LikedYourPost`)\n          setLiked(true);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const postThisComment = async () => {\n    // console.log(textInComment, \"this is texgt in comment\");\n    // console.log(\"set comment\");\n    try {\n      const result = await axios.post(`${BACKEND}/comment`, {\n        text: textInComment,\n        author: user._id,\n        post: postId,\n      });\n      if (result.data.success) {\n        // console.log(result.data.comment, \"this is result\");\n        settextInComment(\" \");\n        setcommentToggle(!commentToggle);\n        // setlikeComment(prev => { return { ...prev, [result.data.comment._id]: [] } })\n        // setchangeStateOnSendComment(!changeStateOnSendComment)\n      }\n      // console.log(result.data)\n    } catch (e) {\n      console.log(e, \"error while commenting\");\n    }\n  };\n\n  const createMarkup = (html) => {\n    return {\n      __html: DOMPurify.sanitize(html),\n    };\n  };\n\n  // console.log(postData?.body);\n\n  const handlecmmtModal = () => {\n    setcmmtMobModal(true);\n  };\n  let secondcontainer;\n  if (cmmnt == false) {\n    secondcontainer = (\n      <div\n        className=\"postdetail-container-body\"\n        dangerouslySetInnerHTML={createMarkup(postData?.body)}\n      >\n        {/* {draftToHtml(convertToRaw(editorState.getCurrentContent()))} */}\n\n        {/* {postData?.body} */}\n      </div>\n      // {\n      // <>\n      // <h2>{postData?.body}</h2>\n      // {postData}\n\n      // <p>{postData?.body}</p>\n      // </>\n      // }\n      // <textarea\n      //   name=\"post-caption\"\n      //   id=\"post-caption\"\n      //   cols=\"20\"\n      //   rows=\"10\"\n      //   value={articleData.caption}\n      //   onChange={e => setarticleData({ ...articleData, caption: e.target.value })}\n      //   className=\"addpost-input-feilds\"\n      // ></textarea>\n    );\n  }\n  if (cmmnt == true) {\n    secondcontainer = (\n      <div className=\"postdetail-container-comment\">\n        <div className=\"postdetail-container-comment-1\">\n          <div className=\"postdetail-container-comment-2-mobile\">\n            <div className=\"postdetail-container-comment-2-head\">\n              Write a comment..\n            </div>\n            <div className=\"postdetail-container-comment-2-textbox\">\n              <textarea\n                name=\"comment-postdetail\"\n                id=\"\"\n                cols=\"30\"\n                rows=\"10\"\n                className=\"comment-textbox-mobile\"\n                onChange={(e) => {\n                  settextInComment(e.target.value);\n                }}\n              ></textarea>\n            </div>\n            <div\n              className=\"postdetail-container-comment-2-button-mobile\"\n              onClick={postThisComment}\n            >\n              Post Comment\n            </div>\n          </div>\n\n          {(() => {\n            {\n              /* console.log(\"yes\", commentInPost.length) */\n            }\n            return commentInPost.map((comment) => {\n              // console.log(comment, \"this is comment\");\n              {\n                /* console.log(comment, \"this\") */\n              }\n              return (\n                <div className=\"postdetail-container-comment-1-1\">\n                  <div className=\"postdetail-comment-avatar\">\n                    <Avatar src={comment?.author?.avatar} />\n                  </div>\n                  <div className=\"postdetail-comment-comment-box\">\n                    <div className=\"postdetail-comment-comment-box-username\">\n                      {comment.author.userName}\n                    </div>\n                    <div>{comment.text}</div>\n                  </div>\n                </div>\n              );\n            });\n          })()}\n\n          {/* <div className=\"postdetail-container-comment-1-1\">\n            <div className=\"postdetail-comment-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"postdetail-comment-comment-box\">\n              <div className=\"postdetail-comment-comment-box-username\">\n                @username\n              </div>\n              <div>Lorem ipsum dolor, sit ame</div>\n            </div>\n          </div> */}\n        </div>\n        <div className=\"postdetail-container-comment-2 display-none-cmmt\">\n          <div className=\"postdetail-container-comment-2-head\">\n            Write a comment..\n          </div>\n          <div className=\"postdetail-container-comment-2-textbox\">\n            <textarea\n              name=\"comment-postdetail\"\n              id=\"\"\n              cols=\"30\"\n              rows=\"10\"\n              className=\"comment-textbox\"\n              onChange={(e) => {\n                settextInComment(e.target.value);\n              }}\n            ></textarea>\n          </div>\n          <div\n            className=\"postdetail-container-comment-2-button\"\n            style={{ cursor: \"pointer\" }}\n            onClick={postThisComment}\n          >\n            Post Comment\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div\n        className=\"profile-container-upper\"\n      // style={{ backgroundColor: \"lightgrey\" }}\n      >\n        <div\n          className=\"profile-container-upper-homeicon\"\n          style={{ flexDirection: \"row\", display: \"flex\" }}\n        >\n          <Link\n            style={{ textDecoration: \"none\", color: \"#000\" }}\n            to=\"/home\"\n          >\n            <IconButton className=\"iconbutton-profile\">\n              <HomeRoundedIcon />\n            </IconButton>\n          </Link>\n          <div\n            style={{\n              marginLeft: \"15px\",\n              fontSize: 23,\n              fontWeight: \"bold\",\n              marginTop: \"6.5px\",\n            }}\n          >\n            Quink Post\n          </div>\n        </div>\n      </div>\n      <div className=\"postdetail-container\">\n        <div className=\"postdetail-container-upper\">\n          <div className=\"postdetail-container-upper-slider\">\n            <Slider {...settings} className=\"slider\">\n              <div className=\"slider-div\">\n                <img\n                  src={postData?.image ? postData?.image : Quinkpost}\n                  alt=\"\"\n                  className=\"slider-image\"\n                  style={{\n                    maxWidth: \"-webkit-fill-available\",\n                    width: \"-webkit-fill-available\",\n                  }}\n                />\n              </div>\n            </Slider>\n          </div>\n          <div className=\"postdetail-container-upper-info\">\n            <div className=\"postdetail-container-upper-info-1\">\n              {postData?.title}\n            </div>\n            <div className=\"postdetail-container-upper-info-2\">\n              <IconButton className=\"swipeButtons__like\" onClick={LikeThisPost}>\n                <FavoriteBorderOutlinedIcon fontSize=\"large\" />{\" \"}\n                <span className=\"no-span\">{totalLikedPost}</span>\n              </IconButton>\n              <IconButton\n                className=\"swipeButtons__comment\"\n                onClick={handleComment}\n              >\n                <ModeCommentOutlinedIcon fontSize=\"large\" />{\" \"}\n                <span className=\"no-span\">{totalComment}</span>\n              </IconButton>\n              <IconButton>\n                {/* {(())()}\n                {toggelSave}?<SaveSharpIcon fontSize=\"large\" color=\"white\" />:<SaveOutlinedIcon fontSize=\"large\" color=\"white\" /> */}\n                {(() => {\n                  if (toggelSave) {\n                    return (\n                      <SaveSharpIcon\n                        fontSize=\"large\"\n                        color=\"white\"\n                        onClick={onSave}\n                      />\n                    );\n                  } else {\n                    return (\n                      <SaveOutlinedIcon\n                        fontSize=\"large\"\n                        color=\"white\"\n                        onClick={onSave}\n                      />\n                    );\n                  }\n                })()}\n              </IconButton>\n\n              <IconButton\n                className=\"swipeButtons__share\"\n                onClick={handleforwardModal}\n              >\n                <NearMeOutlinedIcon fontSize=\"large\" color=\"primary\" />\n              </IconButton>\n\n              <IconButton\n                className=\"swipeButtons__share\"\n                onClick={handleShareModal}\n              >\n                <ShareOutlinedIcon fontSize=\"large\" />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n        {secondcontainer}\n      </div>\n      <Modal isOpen={forwardmodalIsOpen} className=\"followers-modal\">\n        <div className=\"follower-modal-header\">\n          <div className=\"follower-modal-header-head\">Foward the content</div>\n          <div onClick={handleforwardModal}>\n            <CancelOutlinedIcon style={{ fontSize: \"20px\" }} />\n          </div>\n        </div>\n            { contactList}\n      </Modal>\n\n      <Modal isOpen={sharemodalIsOpen} className=\"followers-modal\">\n        <div className=\"follower-modal-header\">\n          <div className=\"follower-modal-header-head\">Share the content</div>\n          <div onClick={handleShareModal}>\n            <CancelOutlinedIcon style={{ fontSize: \"20px\" }} />\n          </div>\n        </div>\n        <div style={{ marginTop: \"30px\", textAlign: \"center\" }}>\n          <WhatsappShareButton url={shareUrl}>\n            <WhatsappIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </WhatsappShareButton>\n          <TwitterShareButton url={shareUrl}>\n            <TwitterIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </TwitterShareButton>\n          <TelegramShareButton url={shareUrl}>\n            <TelegramIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </TelegramShareButton>\n          <EmailShareButton url={shareUrl}>\n            <EmailIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </EmailShareButton>\n          <FacebookShareButton url={shareUrl}>\n            <FacebookIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </FacebookShareButton>\n          <LinkedinShareButton url={shareUrl}>\n            <LinkedinIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </LinkedinShareButton>\n          <LineShareButton url={shareUrl}>\n            <LineIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </LineShareButton>\n          <InstapaperShareButton url={shareUrl}>\n            <InstapaperIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </InstapaperShareButton>\n          <LivejournalShareButton url={shareUrl}>\n            <LivejournalIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </LivejournalShareButton>\n          <PinterestShareButton url={shareUrl}>\n            <PinterestIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </PinterestShareButton>\n          <RedditShareButton url={shareUrl}>\n            <RedditIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </RedditShareButton>\n          <FacebookMessengerShareButton url={shareUrl}>\n            <FacebookMessengerIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </FacebookMessengerShareButton>\n          <TumblrShareButton url={shareUrl}>\n            <TumblrIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </TumblrShareButton>\n          <ViberShareButton url={shareUrl}>\n            <ViberIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </ViberShareButton>\n          <VKShareButton url={shareUrl}>\n            <VKIcon\n              size={30}\n              style={{ marginLeft: \"12px\", marginTop: \"10px\" }}\n            />\n          </VKShareButton>\n        </div>\n        {/* <div>\n          {contactList}\n        </div> */}\n      </Modal>\n    </div>\n  );\n}\n\nexport default Postdetail;\n","D:\\quink-post-web-seo\\src\\Components\\magzinepage.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\communitydes.jsx",["300","301","302","303","304"],"import React, { useEffect, useState } from \"react\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Link } from \"react-router-dom\"\nimport \"../Styles/postdetail.css\";\nimport \"../Styles/communitydes.css\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport NotListedLocationRoundedIcon from \"@material-ui/icons/NotListedLocationRounded\";\nimport ForumRoundedIcon from \"@material-ui/icons/ForumRounded\";\nimport Communitymainpost from \"./Communitypost/communitymainpost\";\nimport Communityquestion from \"./Communitypost/communityquestion\";\nimport MoreVertOutlinedIcon from \"@material-ui/icons/MoreVertOutlined\";\nimport Modal from \"react-modal\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport BACKEND from \"./Constants/Backend\"\nimport CommunityChat from \"./Communitypost/communitychat\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport HelmetBase from \"./HelmetBase\";\nimport { Helmet } from \"react-helmet\";\n\nfunction Communitydes(props) {\n  // console.log(props.match.params.communityId,\"<<<<<<<<<<<<<<<< This is community des page \")\n  const communityId = props.match.params.communityId\n  const globalUser = useSelector((state) => state.user);\n  // const posts=props.history.location.state.post\n  // const questions=props.history.location.state.question\n  const [post, setpost] = useState()\n  const [questions, setquestions] = useState()\n  // const communityId=props.history.location.state._id\n  const [enter, setEnter] = useState(false)\n  const [compost, setCompost] = useState(true);\n  const [que, setQue] = useState(false);\n  const [chat, setChat] = useState(false);\n  const [challengesModal, setChallengesModal] = useState(false);\n  const [articleImage, setarticleImage] = useState(\"\")\n  const [caption, setcaption] = useState(\"\")\n  const [commName, setCommName] = useState(\"\")\n  const [communitydet, setCommunitydet] = useState(\"\")\n  // >>>>>>>>>>>>>>>\n  useEffect(() => {\n    (async () => {\n      const result = await axios.get(`${BACKEND}/community/allPost/${communityId}`)\n      console.log(result.data, \"*************************\")\n      setpost(result.data.community.post)\n      setquestions(result.data.community.question)\n      setCommunitydet(result.data.community.title)\n      setCommName(result.data.community.title)\n    })()\n  }, [])\n\n\n  const handleImageArticle = async (imageAdd) => {\n    // console.log(\"this is image add >>>>>>\",imageAdd)\n    try {\n      console.log(imageAdd[0], \"handle image called\");\n      // console.log(\"handleUpload called\")\n      const data = new FormData();\n      data.append(\"file\", imageAdd[0]);\n      data.append(\"upload_preset\", \"quinkpost\");\n      data.append(\"cloud_name\", \"Quink-Post\");\n      console.log(\"before cloud post\");\n\n      fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"this is data from cloudinakdfj\");\n          setarticleImage(data.url);\n        })\n        .catch((e) => console.log(e, \"error from the n catch\"));\n    } catch (e) {\n      console.log(e, \"error while sending in cloudinary\");\n    }\n  };\n  const submitPost = async () => {\n    try {\n      const { data } = await axios.post(`${BACKEND}/community/post`, {\n        communityId,\n        body: caption,\n        image: articleImage,\n        author: globalUser._id\n\n\n      })\n      if (data.success) {\n        console.log(\"post uploaded\")\n        setcaption(\"\")\n        setarticleImage(\"\")\n      }\n    } catch (e) { console.log(e) }\n  }\n\n  const handleModal = () => {\n    setChallengesModal(true);\n  };\n  const handleModal1 = () => {\n    setChallengesModal(false);\n  };\n  const handleEnter = () => {\n    if (enter == true) {\n      setEnter(false);\n    }\n    if (enter == false) {\n      setEnter(true);\n    }\n  };\n  const handleClick1 = () => {\n    setCompost(true);\n    setQue(false);\n    setChat(false);\n  };\n  const handleClick2 = () => {\n    setCompost(false);\n    setQue(true);\n    setChat(false);\n  };\n  const handleClick3 = () => {\n    setCompost(false);\n    setQue(false);\n    setChat(true);\n  };\n  return (\n    <div className=\"Communitydes-container\">\n      <HelmetBase title={`Quink Post -${communitydet} community`} link={`/community/$${communitydet}/${communityId}`} />\n      <div className=\"Communitydes-container-upper\">\n        <div className=\"Communitydes-container-upper-info\">\n          <div className=\"mobile-vertical-icon\">\n            <div className=\"Communitydes-container-upper-info-1\">\n              <div className=\"Communitydes-container-upper-info-brand\">\n                {communitydet}\n              </div>\n              <div className=\"Community-members\">Members: 123</div>\n              <div className=\"Community-members online\">Online: 23</div>\n            </div>\n            <div className=\"mobile-icon community-three-dot-mobile\">\n              <MoreVertOutlinedIcon onClick={handleModal} />\n              <Modal isOpen={challengesModal}>\n                <div className=\"Community-container-members-enter-button-container\">\n                  <div\n                    className={`Community-container-members-enter-button ${!enter && \"show-communitydes\"\n                      }`}\n                    onClick={handleEnter}\n                  >\n                    Enter Community\n                  </div>\n                  <Link to={`/home`}> <div\n                    className={`Community-container-members-leave-button ${enter && \"show-communitydes\"\n                      }`}\n                    onClick={handleEnter}\n                  >\n                    Leave Community\n                  </div></Link>\n                  <div>\n                    <CancelIcon onClick={handleModal1} />\n                  </div>\n                </div>\n\n                <div className=\"Community-container-members-members\">\n                  <div className=\"Community-container-members-members-heading\">\n                    Community Members\n                  </div>\n                  {/* <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div>\n                  <div className=\"Community-container-members-members-each\">\n                    <div className=\"Community-container-members-members-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"Community-container-members-members-displayname\">\n                      Display Name\n                    </div>\n                  </div> */}\n                </div>\n              </Modal>\n            </div>\n          </div>\n          <div className=\"Communinty-container-secondary\">\n            <div className=\"Communinty-container-secondary-navbar\">\n              <div\n                className={`community-items first-item ${compost && \"community-items-active\"\n                  }`}\n                onClick={handleClick1}\n              >\n                <HomeRoundedIcon className=\"Community-item-icon\" />{\" \"}\n                <span className=\"mobilehidden\"> Home</span>\n              </div>\n              <div\n                className={`community-items ${que && \"community-items-active\"}`}\n                onClick={handleClick2}\n              >\n                <NotListedLocationRoundedIcon className=\"Community-item-icon\" />\n                <span className=\"mobilehidden\">Questions</span>\n              </div>\n              <div\n                className={`community-items ${chat && \"community-items-active\"\n                  }`}\n                onClick={handleClick3}\n              >\n                <ForumRoundedIcon className=\"Community-item-icon\" />{\" \"}\n                <span className=\"mobilehidden\">Chat</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className={`Community-container-main ${!compost && \"show-communitydetail\"\n          }`}\n      >\n        <div className=\"Community-container-main-addpost\">\n          <div className=\"Community-container-main-addpost-title\">\n            Add a Post\n          </div>\n          <div className=\"community-container-main-addpost-container\">\n            <textarea\n              name=\"\"\n              className=\"community-container-main-addpost-textarea\"\n              value={caption}\n              onChange={(e) =>\n                setcaption(e.target.value)\n              }\n            ></textarea>\n          </div>\n          <div className=\"Community-container-main-addpost-lower\">\n            <div className=\"Community-container-main-addpost-lower-attach\">\n              {/* <AttachmentOutlinedIcon type=\"file\"/> */}\n              <input\n                type=\"file\"\n                // id=\"upload-image\"\n                onChange={(e) => handleImageArticle(e.target.files)}\n              />\n            </div>\n            <div className=\"Community-container-main-addpost-lower-button\" style={{ cursor: \"pointer\" }} onClick={submitPost}>\n              Post to community\n            </div>\n          </div>\n        </div>\n        <Communitymainpost posts={post} />\n      </div>\n      <div\n        className={`Community-container-main ${!que && \"show-communitydetail\"}`}\n      >\n        <div className=\"Community-container-main-addpost\">\n          <div className=\"Community-container-main-addpost-title\">\n            Add a Question\n          </div>\n          <div className=\"community-container-main-addpost-container\">\n            <textarea\n              name=\"\"\n              className=\"community-container-main-addpost-textarea\"\n            ></textarea>\n          </div>\n          <div className=\"Community-container-main-addpost-lower-question\">\n            <div className=\"Community-container-main-addpost-lower-button\">\n              Post a Question\n            </div>\n          </div>\n        </div>\n        {(() => {\n          return questions?.map((question, index) => {\n\n            return <Communityquestion key={index} question={question} />\n          })\n\n        })()}\n        {/* <Communityquestion />\n        <Communityquestion />\n        <Communityquestion />\n        <Communityquestion /> */}\n        {/* <Communityquestion /> */}\n      </div>\n      <div\n        className={`Community-container-main ${!chat && \"show-communitydetail\"\n          }`}\n      >\n        <CommunityChat communityId={communityId} />\n      </div>\n      <div className=\"Community-container-members\">\n        <div className=\"Community-container-members-enter-button-container\">\n          <div\n            className={`Community-container-members-enter-button ${!enter && \"show-communitydes\"\n              }`}\n            onClick={handleEnter}\n          >\n            Enter Community\n          </div>\n          <div\n            className={`Community-container-members-leave-button ${enter && \"show-communitydes\"\n              }`}\n            onClick={handleEnter}\n          >\n            Leave Community\n          </div>\n        </div>\n\n        <div className=\"Community-container-members-members\">\n          <div className=\"Community-container-members-members-heading\">\n            Community Members\n          </div>\n          {/* <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div>\n          <div className=\"Community-container-members-members-each\">\n            <div className=\"Community-container-members-members-avatar\">\n              <Avatar />\n            </div>\n            <div className=\"Community-container-members-members-displayname\">\n              Display Name\n            </div>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Communitydes;\n","D:\\quink-post-web-seo\\src\\Components\\profileother.jsx",["305","306","307","308","309","310","311","312"],"import React, { useEffect, useState } from \"react\";\nimport \"../Styles/profile.css\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import profileimage from \"../Assets/colour.jpg\";\nimport { Link } from \"react-router-dom\";\n// import CreateIcon from \"@material-ui/icons/Create\";\n// import BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\n// import AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport \"../Styles/profileother.css\";\nimport Modal from \"react-modal\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport { Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport BACKEND from \"./Constants/Backend\";\nimport Quinkpost from \"../Assets/Quinkpost.jpg\";\nimport HelmetBase from \"./HelmetBase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { USER_LOGGED_IN } from \"./Reducer/Action\";\nfunction ProfileOther(props) {\n  const dispatch = useDispatch();\n\n  // const [followValue, setfollowValue] = useState(false)\n  const [state, setstate] = useState([]);\n  const defaultUrl =\n    \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\";\n\n  const [User, setUser] = useState({});\n  const { OtherProfileId } = props.match.params;\n  const globalState = useSelector((state) => state);\n  const STARTED_FOLLOWING = \"STARTED_FOLLOWING\";\n  const [follow, setFollow] = useState(false);\n  const [followermodalIsOpen, followersetIsOpen] = useState(false);\n  const [followingmodalIsOpen, followingsetIsOpen] = useState(false);\n  const [toggleFollow, settoggleFollow] = useState(false);\n  const [followValue, setfollowValue] = useState(\"Follow\");\n\n  useEffect(() => {\n    (async () => {\n      const { data } = await axios.get(`${BACKEND}/user/${OtherProfileId}`);\n      setUser(data.user);\n      console.log(data.user, \"TTTTTTTT\");\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await axios.get(`${BACKEND}/post/ofUser/${User?._id}`);\n        console.log(\"comparing>>>>>\");\n        setstate(result.data.posts);\n        // console.log(globalState.user.followings,\">>>>>>>>>\",User?._id)\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [toggleFollow]);\n  useEffect(async () => {\n    // console.log(\n    //   globalState.user.followings,\n    //   \"<<<<thisis  followings of logged in user\"\n    // );\n    if (globalState) {\n      const checkFollowing = await globalState?.user?.followings?.find(\n        (id) => id?._id == User?._id\n      );\n      console.log(checkFollowing);\n      if (checkFollowing) {\n        console.log(\"currently you following him\");\n        setfollowValue(\"Unfollow\");\n      } else {\n        console.log(\"you are not following him yet\");\n      }\n    }\n  }, []);\n\n  const followThisUser = async () => {\n    console.log(\"calling this function\");\n    try {\n      if (globalState) {\n        if (followValue == \"Follow\") {\n          console.log(\"going to follow\");\n          const result = await axios.post(`${BACKEND}/follow`, {\n            followerId: globalState.user._id,\n            followingToId: User._id,\n          });\n          const notiToUser = await axios.post(\n            `${BACKEND}/notification/startedFollowing/${globalState?.user?._id}/${globalState?.user?.userName}/${STARTED_FOLLOWING}/${User._id}`\n          );\n          console.log(notiToUser.data);\n          // console.log(result.data)\n          setfollowValue(\"Unfollow\");\n          console.log(result.data.user, \"this is user from backend\");\n          dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n          console.log(\n            globalState.user.followings,\n            \"<<<<thisis  followings of logged in user\"\n          );\n          settoggleFollow(!toggleFollow);\n        } else {\n          console.log(\"going to unfollow\");\n          const result = await axios.post(`${BACKEND}/follow/unfollow`, {\n            followerId: globalState.user._id,\n            followingToId: User._id,\n          });\n          // console.log(result.data)\n          if (result.data.success) {\n            // console.log(result.data)\n            setfollowValue(\"Follow\");\n            dispatch({ type: USER_LOGGED_IN, payload: result.data.user });\n            settoggleFollow(!toggleFollow);\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleClick2 = () => {\n    setFollow(false);\n  };\n  const handlefollowerModal = () => {\n    followersetIsOpen(true);\n  };\n  const handlefollowerModal1 = () => {\n    followersetIsOpen(false);\n  };\n  const handlefollowingModal = () => {\n    followingsetIsOpen(true);\n  };\n  const handlefollowingModal1 = () => {\n    followingsetIsOpen(false);\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-container-upper\">\n        <div className=\"profile-container-upper-homeicon\">\n          <Link to=\"/home\">\n            <IconButton className=\"iconbutton-profile\">\n              <HomeRoundedIcon />\n            </IconButton>\n          </Link>\n        </div>\n      </div>\n      <div className=\"profile-other-container-infobox\">\n        <div className=\"profile-other-profile-image\">\n          <div\n            className=\"profile-profile-image-img\"\n            style={{\n              backgroundImage: User.avatar\n                ? `url(${User?.avatar})`\n                : `url(${defaultUrl})`,\n            }}\n          ></div>\n        </div>\n        <div className=\"profile-profile-info\">\n          <div className=\"profile-profile-names\">\n            <div>\n              <div className=\"profile-profile-displayname\">\n                {User?.userName}\n              </div>\n              <div className=\"profile-profile-username\">{User?.firstName}</div>\n            </div>\n          </div>\n          <div>\n            <div className=\"profilesecondary\">\n              <div className=\"profile-detail\">\n                <div className=\"profile-detail-each\">Quinks</div>\n                <div className=\"number\">{User?.post?.length}</div>\n              </div>\n              <div className=\"line\"></div>\n              <div className=\"profile-detail\" onClick={handlefollowerModal}>\n                <div\n                  className=\"profile-detail-each\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  followers\n                </div>\n                <div className=\"number\">{User?.followers?.length}</div>\n              </div>\n              <Modal isOpen={followermodalIsOpen} className=\"followers-modal\">\n                <div className=\"follower-modal-header\">\n                  <div\n                    className=\"follower-modal-header-head\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    Followers\n                  </div>\n                  <div onClick={handlefollowerModal1}>\n                    <CancelOutlinedIcon style={{ fontSize: \"20px\" }} />\n                  </div>\n                </div>\n                <div className=\"follower-each-modal-container\">\n                  <div className=\"follower-each-modal\">\n                    <div className=\"follower-each-modal-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"follower-each-modal-info\">\n                      <div className=\"follower-each-modal-info-displayname\">\n                        Display name\n                      </div>\n                      <div className=\"follower-each-modal-info-username\">\n                        @username\n                      </div>\n                    </div>\n                    <div className=\"follower-each-modal-remove\">remove</div>\n                  </div>\n                </div>\n              </Modal>\n              <div className=\"line\"></div>\n              <div className=\"profile-detail\" onClick={handlefollowingModal}>\n                <div\n                  className=\"profile-detail-each\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  following\n                </div>\n                <div className=\"number\">{User?.followings?.length}</div>\n              </div>\n              <Modal isOpen={followingmodalIsOpen} className=\"followers-modal\">\n                <div className=\"follower-modal-header\">\n                  <div\n                    className=\"follower-modal-header-head\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    {\" \"}\n                    Following\n                  </div>\n                  <div onClick={handlefollowingModal1}>\n                    <CancelOutlinedIcon style={{ fontSize: \"20px\" }} />\n                  </div>\n                </div>\n                <div className=\"follower-each-modal-container\">\n                  <div className=\"follower-each-modal\">\n                    <div className=\"follower-each-modal-avatar\">\n                      <Avatar />\n                    </div>\n                    <div className=\"follower-each-modal-info\">\n                      <div className=\"follower-each-modal-info-displayname\">\n                        Display name\n                      </div>\n                      <div className=\"follower-each-modal-info-username\">\n                        @username\n                      </div>\n                    </div>\n                    <div className=\"follower-each-modal-remove\">unfollow</div>\n                  </div>\n                </div>\n              </Modal>\n            </div>\n            <div className=\"profileother-followbutton\">\n              <div\n                style={{ cursor: \"pointer\" }}\n                className={`profileother-followbutton-each ${\n                  follow && \"display-follow\"\n                }`}\n                onClick={followThisUser}\n              >\n                {followValue}\n              </div>\n              <div\n                className={`profileother-followbutton-each-following ${\n                  !follow && \"display-follow\"\n                }`}\n                onClick={handleClick2}\n              >\n                Following\n              </div>\n              <Link\n                to={{\n                  pathname: \"/messaging\",\n                  state: {\n                    value: true,\n                    user2Id: User._id,\n                    user2Name: User?.userName,\n                    user2Avatar: User?.avatar,\n                  },\n                }}\n                style={{ textDecoration: \"none\" }}\n              >\n                <div className=\"profileother-followbutton-each\">Message</div>\n              </Link>\n            </div>\n            <div style={{borderLeft: \"inset\"}}>\n              <div className=\"profile-bio\">Bio:</div>\n              <div className=\"profile-bio-detail\">{User?.bio}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={`main-profile-container`}>\n        {(() => {\n          return User.post?.map((post, key) => {\n            console.log(post);\n            return (\n              <a href={`${post.title}/${OtherProfileId}/${post._id}`}>\n                <div className=\"individual-post-profile\" key={key}>\n                  <img\n                    src={post?.image ? post?.image : Quinkpost}\n                    alt=\"\"\n                    className=\"individual-post-profile-img\"\n                  />\n                  <div className=\"individual-post-profile-heading\">\n                    {post?.caption}\n                  </div>\n                </div>\n              </a>\n              // <Link to={{ pathname: \"/postDetails\", state: { post } }}>\n              //   {\" \"}\n              //   <div className=\"individual-post-profile\" key={key}>\n              //     <img\n              //       // src={profileimage}\n              //       src={post?.image}\n              //       alt=\"No picture\"\n              //       className=\"individual-post-profile-img\"\n              //     />\n              //     <div className=\"individual-post-profile-heading\">\n              //       {post?.caption}\n              //     </div>\n              //   </div>\n              // </Link>\n            );\n          });\n        })()}\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileOther;\n","D:\\quink-post-web-seo\\src\\Components\\originalsDetail.jsx",["313"],"import React, { useEffect, useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport DOMPurify from \"dompurify\";\nimport Quinkpost from \"../Assets/Quinkpost.jpg\";\nimport BACKEND from \"./Constants/Backend\"\nimport axios from \"axios\";\nimport HelmetBase from \"./HelmetBase\";\nfunction OriginalsDetial(props) {\n  const postId = props.match.params.postId;\n  const settings = {\n    dots: true,\n    fade: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n  };\n  const [Post, setPost] = useState({})\n  useEffect(() => {\n    try {\n      (async () => {\n        const { data } = await axios.get(`${BACKEND}/admin/${postId}`)\n        const adminPost = data?.adminPost\n        console.log(data, \"Original\")\n        setPost(adminPost[0])\n      })()\n    } catch (e) { console.log(e) }\n  }, [])\n\n\n  const createMarkup = (html) => {\n    return {\n      __html: DOMPurify.sanitize(html),\n    };\n  };\n\n  return (\n    <>\n      <HelmetBase title=\"Quink Post - Originals\" link=\"/originals/details\" />\n      <div\n        className=\"profile-container-upper\"\n      // style={{ backgroundColor: \"lightgrey\" }}\n      >\n        <div\n          className=\"profile-container-upper-homeicon\"\n          style={{ flexDirection: \"row\", display: \"flex\" }}\n        >\n          <Link\n            style={{ textDecoration: \"none\", color: \"#000\" }}\n            to=\"/home\"\n          >\n            <IconButton className=\"iconbutton-profile\">\n              <HomeRoundedIcon />\n            </IconButton>\n          </Link>\n          <div\n            style={{\n              marginLeft: \"15px\",\n              fontSize: 23,\n              fontWeight: \"bold\",\n              marginTop: \"6.5px\",\n            }}\n          >\n            Quink Post\n          </div>\n        </div>\n      </div>\n      <div className=\"postdetail-container\">\n        <div className=\"postdetail-container-upper\">\n          <div className=\"postdetail-container-upper-slider\">\n            <Slider {...settings} className=\"slider\">\n              {/* <div className=\"slider-div\"> */}\n              <img\n                src={(Post?.image) ? Post?.image : Quinkpost}\n                alt=\"\"\n                className=\"slider-image\"\n                style={{\n                  maxWidth: \"-webkit-fill-available\",\n                  width: \"-webkit-fill-available\",\n                }}\n              />\n              <img\n                src={Quinkpost}\n                alt=\"\"\n                className=\"slider-image\"\n                style={{\n                  maxWidth: \"-webkit-fill-available\",\n                  width: \"-webkit-fill-available\",\n                }}\n              />\n              {/* </div> */}\n            </Slider>\n          </div>\n          <div className=\"postdetail-container-upper-info\">\n            <div className=\"postdetail-container-upper-info-4\">\n              {Post?.title}\n            </div>\n          </div>\n        </div>\n        <div className=\"postdetail-container-body\">\n          <div\n            className=\"postdetail-container-body\"\n            dangerouslySetInnerHTML={createMarkup(Post?.body)}\n          ></div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default OriginalsDetial;\n","D:\\quink-post-web-seo\\src\\Components\\downloadapp.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\challengespage.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\accountsetting.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\editprofile.jsx",["314"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/editprofile.css\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useDispatch } from \"react-redux\"\nimport { USER_LOGGED_IN } from \"./Reducer/Action\"\nimport BACKEND from \"./Constants/Backend\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\n\n// import BACKEND from \".\"\n\nfunction Editprofile() {\n  const defaultUrl = \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\n\n  const globalState = useSelector(state => state)\n  const dispatch = useDispatch()\n  // console.log(globalState?.user, \"lllll\")\n  // const [image, setimage] = useState();\n  const [formData, setformData] = useState({\n    userName: globalState?.user?.userName,\n    bio: globalState?.user?.bio,\n    email: globalState?.user?.email,\n    firstName: globalState?.user?.firstName\n  });\n  const [profileImage, setprofileImage] = useState(globalState?.user?.avatar)\n  const editMyProfile = async () => {\n    // console.log(\"ok you are here now\");\n    console.log(formData)\n    //\n    try {\n      const result = await axios.patch(`${BACKEND}/user/update`, {\n        userId: globalState?.user._id,\n        userName: formData?.userName,\n        firstName: formData?.firstName,\n        bio: formData?.bio,\n        avatar: formData?.image\n      })\n      if (result.data.success) {\n        console.log(result.data)\n        dispatch({ type: USER_LOGGED_IN, payload: result.data.user })\n        window.location.reload(false)\n        setformData({\n          userName: \"\",\n          firstName: \"\",\n          bio: \"\",\n          profileImage: globalState?.user?.avatar\n        })\n\n      }\n    } catch (e) { console.log(e) }\n\n  };\n\n  const handleImage = async (imageAdd) => {\n    try {\n      console.log(imageAdd, \"handle image called\");\n      const data = new FormData();\n      data.append(\"file\", imageAdd[0]);\n      data.append(\"upload_preset\", \"quinkpost\");\n      data.append(\"cloud_name\", \"Quink-Post\");\n      console.log(\"before cloud post\");\n      fetch(\"https://api.cloudinary.com/v1_1/quink-post/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"this is data from cloudinakdfj\");\n          setformData({ ...formData, image: data.url });\n          setprofileImage(data.url)\n          // console.log(profileImage, \"<<<<<<<< changed\", data.url)\n        })\n        .catch((e) => console.log(e, \"error from the n catch\"));\n    } catch (e) {\n      console.log(e, \"error while sending in cloudinary\");\n    }\n  };\n\n  return (\n    <div className=\"editprofile-container\">\n      <div className=\"editprofile-container-upper\">\n        <div className=\"editprofile-container-upper-heading\">Edit Profile</div>\n        <div className=\"editprofile-container-upper-homeicon\">\n          <Link to=\"/profile\">\n            <IconButton className=\"iconbutton-editprofile\">\n              <ArrowBackIcon />\n            </IconButton>\n          </Link>\n        </div>\n      </div>\n      <div className=\"secondary-editprofile-container\">\n        <div className=\"edit-profile-image-container\">\n          <div className=\"secondary-editprofile-container-1\">Profile Image</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <div className=\"secondary-2-edit-profile-image\">\n              <div className=\"secondary-2-edit-profile-image-1\">\n                <div\n                  className=\"editprofile-profile-image-img\"\n                  style={{ backgroundImage: (profileImage?.trim() != \"\") ? `url(${profileImage})` : `url(${defaultUrl})` }}\n                ></div>\n                <input type=\"file\" onChange={(e) => handleImage(e.target.files)} />\n              </div>\n              {/* <div className=\"secondary-2-edit-profile-image-2\">\n                {console.log(profileImage, \"<<<<<<<<\")}\n                <div\n                  onClick={editMyProfile}\n                  className=\"upload-new-image-editprofile\">\n                  Upload New Image\n                </div>\n              </div> */}\n            </div>\n          </div>\n        </div>\n        <div className=\"editname-container\">\n          <div className=\"secondary-editprofile-container-1\">Display Name</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <input\n              type=\"text\"\n              value={formData?.firstName}\n              onChange={(e) =>\n                setformData(prev => { return { ...prev, firstName: e.target.value } })\n              }\n              className=\"editprofile-textinputbox\"\n            />\n          </div>\n        </div>\n        <div className=\"editname-container\">\n          <div className=\"secondary-editprofile-container-1\">Username</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <input\n              type=\"text\"\n              className=\"editprofile-textinputbox\"\n              value={formData?.userName}\n              onChange={(e) =>\n                setformData(prev => { return { ...prev, userName: e.target.value } })\n              }\n            />\n          </div>\n        </div>\n        <div className=\"editbio-container\">\n          <div className=\"secondary-editprofile-container-1\">Bio</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <textarea name=\"bio-textarea\" value={formData.bio} onChange={e => setformData(prev => { return { ...prev, bio: e.target.value } })} className=\"bio-textarea\"></textarea>\n          </div>\n        </div>\n        <div className=\"editname-container\">\n          <div className=\"secondary-editprofile-container-1\">Email</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <input type=\"text\" className=\"editprofile-textinputbox\" value={formData.email} onChange={e => setformData(prev => { return { ...prev, email: e.target.value } })} />\n          </div>\n        </div>\n        <div className=\"editname-container\">\n          <div className=\"secondary-editprofile-container-1\">Phone Number</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <input type=\"text\" className=\"editprofile-textinputbox\" />\n          </div>\n        </div>\n        <div className=\"editname-container\">\n          <div className=\"secondary-editprofile-container-1\">Language</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <select\n              id=\"language\"\n              name=\"language-select\"\n              className=\"editprofile-language-type-select\"\n            >\n              <option value=\"English\">English</option>\n              <option value=\"Hindi\">Hindi</option>\n              <option value=\"both\">Both</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"editname-container\">\n          <div className=\"secondary-editprofile-container-1\">Gender</div>\n          <div className=\"secondary-editprofile-container-2\">\n            <select\n              id=\"gender\"\n              name=\"gender-select\"\n              className=\"editprofile-language-type-select\"\n            >\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"savechanges-container\">\n          <div className=\"savechanges-button\" style={{ cursor: \"pointer\" }} onClick={editMyProfile} >\n            Save Changes\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Editprofile;\n","D:\\quink-post-web-seo\\src\\Components\\Mobile\\mobile-menu.jsx",["315","316"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../navbar\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"../../Styles/Mobile/mobile-menu.css\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport BACKEND from \"../Constants/Backend\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LANGUAGE_PREFERENCE } from \"../Reducer/Action\";\n\nfunction Mobilemenu() {\n  const defaultUrl =\n    \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\";\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [showLink, setshowLink] = useState(\"https://www.google.com\");\n  const [contentType, setcontentType] = useState(\"Langauge\");\n  const globalUser = useSelector((state) => state.user);\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await axios.get(`${BACKEND}/app/link`);\n        // setshowLink(data?.data?.downloadlink);\n        const temp = data?.data;\n        // console.log(temp[0]?.appLink)\n        setshowLink(temp[0]?.appLink);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, []);\n\n  const LanguagePriority = () => {\n    if (contentType == \"Hindi\") {\n      setcontentType(\"English\");\n      dispatch({ type: LANGUAGE_PREFERENCE, payload: contentType });\n    } else {\n      setcontentType(\"Hindi\");\n      dispatch({ type: LANGUAGE_PREFERENCE, payload: contentType });\n    }\n  };\n\n\n  const logoutHandler = () => {\n    localStorage.setItem(\"Quink-Post\", \" \");\n    localStorage.setItem(\"QuinkPostUserLoggedIn\", false)\n    history.push(\"/\");\n    // history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Link to=\"/profile\" style={{ textDecoration: \"none\" }}>\n        <div className={`profile-card`}>\n          <div className=\"profile-info\">\n            <div className=\"profile-img\">\n              <Avatar\n                src={globalUser?.avatar ? globalUser?.avatar : defaultUrl}\n                className=\"profile-avatar\"\n              />\n            </div>\n            <div className=\"profile-names\">\n              <div className=\"profile-displayname\">{globalUser?.firstName}</div>\n              <div className=\"profile-username\">{globalUser?.userName}</div>\n            </div>\n          </div>\n          <div className=\"profilesecondary\">\n            <div className=\"profile-detail\">\n              <div className=\"profile-detail-each\">Quinks</div>\n              <div className=\"number\">{globalUser?.post?.length}</div>\n            </div>\n            <div className=\"line\"></div>\n            <div className=\"profile-detail\">\n              <div className=\"profile-detail-each\">followers</div>\n              <div className=\"number\">{globalUser?.followers?.length}</div>\n            </div>\n            <div className=\"line\"></div>\n            <div className=\"profile-detail\">\n              <div className=\"profile-detail-each\">following</div>\n              <div className=\"number\">{globalUser?.followings?.length}</div>\n            </div>\n          </div>\n        </div>\n      </Link>\n      <div className={`sidemenu-container `}>\n        <div className=\"sidemenu-btn\" onClick={logoutHandler}>\n          <ExitToAppIcon className=\"menu-icon-each\" />\n          Logout\n        </div>\n        <div className=\"sidemenu-btn\">\n          <a href='https://play.google.com/store/apps/details?id=com.quinkpost.quinkpost' className=\"account-setting\">\n            <AppsIcon className=\"menu-icon-each\" />\n            Download the App\n          </a>\n        </div>\n        <div className=\"sidemenu-btn\" onClick={LanguagePriority}>\n          <LibraryBooksIcon className=\"menu-icon-each\" />\n          {`${contentType}`} Content\n        </div>\n        <div className=\"sidemenu-btn\">\n          <CallIcon className=\"menu-icon-each\" />\n          Contact us\n        </div>\n        <div className=\"sidemenu-btn\">\n          <HelpIcon className=\"menu-icon-each\" />\n          Help and Support\n        </div>\n        <div className=\"sidemenu-btn\">\n          <SettingsIcon className=\"menu-icon-each\" />\n          Account Settings\n        </div>\n        {/* <div className=\"menu-cross\">\n          <CancelIcon onClick={closeMenu} />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Mobilemenu;\n","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\Questiondes.jsx",["317","318"],"import React, { useEffect, useState } from \"react\";\nimport \"../../Styles/Communitypost/questiondes.css\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport AttachmentIcon from \"@material-ui/icons/Attachment\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport BACKEND from \"../Constants/Backend\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\";\n\nfunction Questiondes(props) {\nconst [answers, setanswers] = useState([])\nconst [inputValue, setinputValue] = useState(\"\")\n  const questionId = props.location.questionId;\n  const question = props.location.question;\n  const globalUser = useSelector(state => state)\n  console.log(globalUser)\n  // const answers=[]\n  // console.log(props.location.answers)\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await axios.get(`${BACKEND}/community/inside/getAllAnswer/${questionId}`)\n        console.log(result.data.answers,\"<<<<<<<<<<<<<<<<this is answers of question\")\n        // console.log(result.data)\n        setanswers(result.data.answers)\n        \n        // setanswers(result.data.answers)\n      } catch (e) { console.log(e) }\n    })()\n  },[])\n\n  const sendAnswer=async()=>{\n    try {\n      console.log(\"yes\")\n      if (inputValue != \"\") {\n        // console.log(input,\"lll\")\n        const result = await axios.patch(`${BACKEND}/community/inside/answer`, {\n          answer: inputValue,\n          user: globalUser.user._id,\n          questionId: questionId\n        })\n        console.log(result.data, \"kkkkkkkkkkkkkkkkkkk\")\n        if (result.data.success) {\n          setinputValue(\"\")\n          // settoggle(!toggle)\n        }\n\n\n      }\n      else { console.log(\"enter your suggestion\") }\n\n\n\n    } catch (e) { console.log(e) }\n  }\n\n  // console.log(props.location)\n  return (\n    <div className=\"community-question-container\">\n      <div className=\"community-question-header\">\n     {question}\n      </div>\n      <div className=\"addanswer-box\">\n        <div>\n          <textarea\n            name=\"\"\n            id=\"\"\n            value={inputValue}\n            onChange={(value)=>{setinputValue(value.target.value)}}\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"Write Answer...\"\n            className=\"addanswer-box-textarea\"\n          ></textarea>\n        </div>\n        <div className=\"addanswer-box-buttons\">\n          <div className=\"add-answer-icons\">\n            <ImageIcon className=\"add-answer-icons-each\" />\n            <AttachmentIcon />\n          </div>\n          <div className=\"add-answer-button\" onClick={sendAnswer}>Add Answer</div>\n        </div>\n      </div>\n      {(() => {\n        return answers.map((answer, key) => {\n          return (\n            <div className=\"answerbox\" key={key}>\n              <div>\n              {answer.answer}\n              </div>\n              <div className=\"answer-vote-icons\">\n                <div className=\"answer-vote-icons-each green\">\n                  <ArrowUpwardIcon /> {answer.likedBy.length}\n                </div>\n                <div className=\"answer-vote-icons-each red\">\n                  <ArrowDownwardIcon /> 23\n                </div>\n              </div>\n            </div>\n          );\n        });\n      })()}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"answerbox\">\n        <div>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. At odio\n          maiores est nesciunt culpa earum asperiores inventore minima\n          aspernatur. Officiis obcaecati, sint porro totam, maiores ipsam\n          tenetur sed fugit fuga cumque numquam tempora. Officia, ullam!\n        </div>\n        <div className=\"answer-vote-icons\">\n          <div className=\"answer-vote-icons-each green\">\n            <ArrowUpwardIcon /> 123\n          </div>\n          <div className=\"answer-vote-icons-each red\">\n            <ArrowDownwardIcon /> 23\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Questiondes;\n","D:\\quink-post-web-seo\\src\\Components\\Constants\\Backend.js",[],"D:\\quink-post-web-seo\\src\\Components\\Reducer\\Action.js",[],"D:\\quink-post-web-seo\\src\\Components\\chatcontent.jsx",["319","320","321","322"],"import React, { createRef, useEffect, useState } from \"react\";\nimport \"../Styles/chatcontent.css\";\nimport ChatItem from \"./chatitem\";\nimport io from \"socket.io-client\"\nimport { useSelector } from \"react-redux\"\nimport SharePostCard from \"./SharePostCard\";\nimport BACKEND from \"./Constants/Backend\";\nconst socket = io(`${BACKEND}`, { transports: ['websocket', 'polling', 'flashsocket'] });\nexport default function ChatContent({ chatCommonId, sender, user2Id, user2Name }) {\n  // console.log(chatCommonId, sender, user2Id, \"<<<<<\")\n  // console.log(ChatMessage,\"this is chat message from chat content screen\")\n  // const senderId=ChatMessage[0].sender._id\n  const messagesEndRef = createRef(null);\n\n\n\n  const [msg, setmsg] = useState(\"\");\n  const [newMessage, setnewMessage] = useState(false)\n  const user = useSelector(state => state.user)\n  const toggleContactReducer = useSelector(state => state.toggleContactReducer)\n  // console.log(toggleContactReducer, \"<<<<<<This is toggleChat contact\")\n  // const [initialMessage,setinitialMessage] = useState(false)\n  // const [inComingChat,setinComingChat] = useState(ChatMessage)\n  const [ChatMessage, setChatMessage] = useState([])\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    // setinComingChat(ChatMessage)\n    // console.log(\"useEffectCalled\")\n    // console.log(\"inside useEffect\")\n    socket.emit(\"getPrivatePreviousChat\", {\n      chatId: chatCommonId,\n      sender: sender,\n      user2: user2Id,\n    })\n  }, [toggleContactReducer])\n\n  socket.on(\"initialMessage\", data => {\n    // console.log(data)\n    // console.log ( data,\"this is initial message\")\n    // console.log(data[0], \"this is data\")\n\n    setChatMessage(data)\n  })\n\n\n\n\n\n  // useEffect(() => {\n\n  //   window.addEventListener(\"keydown\", (e) => {\n  //     if (e.keyCode == 13) {\n  //       if (msg != \"\") {\n  //         ChatMessage.push({\n  //           key: 1,\n  //           type: \"\",\n  //           msg: msg,\n  //           image: \"https://ui-avatars.com/api/?name=D+P\",\n  //         });\n  //         // setchat([...chatItms]);\n  //         scrollToBottom();\n  //         setmsg(\"\");\n  //       }\n  //     }\n  //   });\n  //   scrollToBottom();\n  // },[newMessage]);\n\n  const onStateChange = (e) => {\n    setmsg(e.target.value);\n  };\n\n  const sendThisMessage = () => {\n    socket.emit('OneToOneChat', { sender: { _id: user._id, userName: user.userName, avatar: user.avatar }, user2: user2Id, chatId: chatCommonId, message: msg })\n    setmsg(\"\")\n  }\n  socket.on('messageFromOne', data => {\n    // console.log(data,\">><<gettint message\")\n    // console.log(\"new message >>>>>>>>>>\", data.message.message, \">>>>>>>>>>>>>\",socket.id)\n    // console.log('Incoming message:', data)\n    // console.log(data.message, \"this is data from sending me\")\n    // console.log(data.message, \"this is messages\")\n\n    setChatMessage([...ChatMessage, data.message])\n\n  });\n\n\n  return (\n    <div className=\"main__chatcontent\">\n      <div className=\"content__body\">\n        <div className=\"chat__items\"> \n          {ChatMessage?.map((itm, index) => {\n            // console.log(itm,\"this is one item\")\n            if (!itm.post) {\n              return (\n                <ChatItem\n                  animationDelay={index + 2}\n                  key={itm.key}\n                  user={user2Name}\n                  msg={itm.message}\n                  senderId={itm?.sender?._id}\n                  image={itm?.sender?.avatar}\n                />\n              );\n            }\n            else {\n              return (\n                <SharePostCard\n                  animationDelay={index + 2}\n                  key={itm.key}\n                  user={user2Name}\n                  timeStamp={itm.timeStamp}\n                  avatar={itm?.sender?.avatar}\n                  senderId={itm?.sender?._id}\n                  title={itm?.post?.title}\n                  postId={itm?.post?._id}\n                  image={itm?.post?.image}\n                  caption={itm?.post?.caption}\n\n\n                />\n              )\n            }\n          })}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n      <div className=\"content__footer\">\n        <div className=\"sendNewMessage\">\n          <button className=\"addFiles\">\n            <i className=\"fa fa-plus\"></i>\n          </button>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message here\"\n            onChange={onStateChange}\n            value={msg}\n          />\n          <button className=\"btnSendMsg\" id=\"sendMsgBtn\" onClick={sendThisMessage}>\n            <i className=\"fa fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","D:\\quink-post-web-seo\\src\\Components\\navbar.jsx",["323","324","325","326","327"],"import React, { useState, useEffect } from \"react\";\nimport \"../Styles/navbar.css\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport PeopleOutlineRoundedIcon from \"@material-ui/icons/PeopleOutlineRounded\";\nimport BarChartRoundedIcon from \"@material-ui/icons/BarChartRounded\";\nimport ImportContactsRoundedIcon from \"@material-ui/icons/ImportContactsRounded\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Avatar, Badge } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Modal from \"react-modal\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport LocalActivityIcon from \"@material-ui/icons/LocalActivity\";\nimport NextWeekIcon from \"@material-ui/icons/NextWeek\";\nimport AssistantIcon from \"@material-ui/icons/Assistant\";\nimport BACKEND from \"./Constants/Backend\";\nimport { useSelector } from \"react-redux\";\nimport ACTION, {\n  LikedYourPost,\n  NEW_POST_NOTI,\n  SEARCH_POST,\n  SHOW_SEARCH,\n  STARTED_FOLLOWING_NOTI,\n} from \"./Reducer/Action\";\n\nfunction Navbar() {\n  const layerUser = useSelector((state) => state);\n  const [notiModal, setnotiModal] = useState(false);\n  const [notiItem, setNotiItem] = useState([]);\n  const [menuModal, setMenuModal] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const getNoti = await axios.get(\n        `${BACKEND}/notification/all/${layerUser?.user?._id}`\n      );\n      const notifications = getNoti.data.NotiFilter;\n      console.log(notifications, \"%%%\");\n      setNotiItem(notifications);\n    })();\n  }, []);\n\n  const handleNotimodal = () => {\n    setnotiModal(true);\n  };\n  const handleNotimodal1 = () => {\n    setnotiModal(false);\n  };\n  const handleMenuModal = () => {\n    setMenuModal(true);\n  };\n  const handleMenuModal1 = () => {\n    setMenuModal(false);\n  };\n\n  let notiList = notiItem?.reverse()?.map((noti, index) => {\n    // console.log(noti?.followingId);\n    const timeStamp = new Date(noti.timeStamp)\n    const months = [\"Dec\", \"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\"];\n\n    const getDate = {\n      month: months[timeStamp.getMonth() + 1],\n      date: timeStamp.getDate(),\n      hour: timeStamp.getHours(),\n      minute: timeStamp.getMinutes()\n    }\n    console.log(timeStamp, \"_____\", noti?.timeStamp)\n    if (noti.Type === STARTED_FOLLOWING_NOTI) {\n      return (\n        <div className=\"noti-item\">\n          <Avatar className=\"chat-header-avatar\" style={{ marginRight: \"7px\" }} />\n          <div>\n            <Link\n              to={`/user/${noti?.followingId?.followingName}/${noti?.followingId?.following._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginRight: \"3px\",\n              }}\n            >\n              {noti?.followingId?.followingName}\n            </Link>\n            started following you\n          <div>{getDate.hour}:{getDate.minute}  {getDate.date} {getDate.month}</div>\n\n          </div>\n\n        </div>\n      );\n    }\n    if (noti.Type === NEW_POST_NOTI) {\n      return (\n        <div className=\"noti-item\">\n          <Avatar className=\"chat-header-avatar\" src={noti?.newPostIdByFollowing?.image} style={{ marginRight: \"7px\" }} />\n          <div>\n            <Link to=\n              {`/user/${noti?.newPostIdByFollowing?.author?.userName}/${noti?.newPostIdByFollowing?.author?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginRight: \"3px\",\n              }}\n            >\n              {noti?.newPostIdByFollowing?.author?.userName}\n            </Link>\n            uploaded new Quink\n            <Link\n              to={`/${noti?.newPostIdByFollowing?.author?.userName}/${noti?.newPostIdByFollowing?.title}/${noti?.newPostIdByFollowing?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginLeft: \"3px\",\n              }}\n            >\n              Open Quink\n            </Link>\n            <div>{getDate.hour}:{getDate.minute}  {getDate.date} {getDate.month}</div>\n\n          </div>\n        </div>\n      );\n    }\n    if (noti.Type === LikedYourPost) {\n      return (\n        <div className=\"noti-item\">\n          <Avatar className=\"chat-header-avatar\" src={noti?.LikedBy?.LikedByUser?.avatar} style={{ marginRight: \"7px\" }} />\n          <div>\n            <Link\n              to={`/user/${noti?.LikedBy?.LikedByUser?.userName}/${noti?.LikedBy?.LikedByUser?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginRight: \"3px\",\n              }}\n            >\n              {noti?.LikedBy?.LikedByUser?.userName}\n            </Link>\n            liked your Quink\n            <Link\n              to={`/${noti?.LikedBy?.LikedByUser?.userName}/${noti?.LikedBy?.postId?.title}/${noti?.LikedBy?.postId?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginLeft: \"3px\",\n              }}\n            >\n              {noti?.LikedBy?.postId?.title}\n            </Link>\n            <div>{getDate.hour}:{getDate.minute}  {getDate.date} {getDate.month}</div>\n\n          </div>\n        </div>\n      );\n    }\n\n    // return <div className=\"noti-item\">{noti.noti}</div>;\n  });\n\n  return (\n    <div className=\"navbarcontainer\">\n      <div className=\"brand\">\n        <div>Quink Post.</div>\n        <div className=\"mobile-icon mobile-chat-icon-box\">\n          <Badge badgeContent={3} color=\"error\">\n            <NotificationsIcon\n              className=\"mobile-chat-icon-box-icons\"\n              onClick={handleNotimodal}\n            />\n          </Badge>\n          <Badge badgeContent={2} color=\"error\">\n            <Link to=\"/messaging\" className=\"chatpage-mobile-link\">\n              <ChatIcon className=\"mobile-chat-icon-box-icons\" />\n            </Link>\n          </Badge>\n          <MoreVertIcon\n            className=\"mobile-chat-icon-box-icons\"\n            onClick={handleMenuModal}\n          />\n          <Modal isOpen={menuModal} className=\"menuModal\">\n            <Link to=\"/originals\" className=\"original-link\">\n              <div className=\"original-btn-modal\">Originals</div>\n            </Link>\n            <Link to=\"/addpost\" className=\"addpost \">\n              <div>\n                <button className=\"addpost-button addpost-mobile\">\n                  <AddIcon />\n                  Add post\n                </button>\n              </div>\n            </Link>\n            <div className=\"trend-1 trend-mobile\">\n              <TrendingUpIcon className=\"trend-icons\" />\n              trending\n            </div>\n            <div className=\"trend-1 trend-mobile\">\n              <DevicesIcon className=\"trend-icons\" />\n              technology\n            </div>\n            <div className=\"trend-1 trend-mobile\">\n              <LocalActivityIcon className=\"trend-icons\" />\n              fashion\n            </div>\n            <div className=\"trend-1 trend-mobile\">\n              <NextWeekIcon className=\"trend-icons\" />\n              buisness\n            </div>\n            <div className=\"trend-1 trend-mobile\">\n              <AssistantIcon className=\"trend-icons\" />\n              entertainment\n            </div>\n            <div className=\"menu-mobile-cross\" onClick={handleMenuModal1}>\n              <CancelIcon />\n            </div>\n          </Modal>\n        </div>\n        <Modal isOpen={notiModal} className=\"notimodal\">\n          <div className={`noti-Container`}>\n            <div className=\"noti-header\">\n              <div>Notifications.</div>\n              <div>\n                <CancelIcon\n                  className=\"noti-cancel\"\n                  onClick={handleNotimodal1}\n                />\n              </div>\n            </div>\n            <div>{notiList}</div>\n            {/* <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div>\n            <div className=\"noti-item\">\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nam\n            </div> */}\n          </div>\n        </Modal>\n      </div>\n      <Link to=\"/originals\" className=\"original-link\">\n        <div className=\"original-btn\">Originals</div>\n      </Link>\n      <div className=\"mobile-navbtn-holder\">\n        <NavLink\n          exact={true}\n          to=\"/home\"\n          className=\"navbar-btn\"\n          activeClassName=\"navbar-btn-active\"\n        >\n          <div className=\"navbar-btn-div\">\n            <HomeRoundedIcon className=\"navbar-btn-icon\" />\n            <span className=\"abcd\">Home</span>\n          </div>\n        </NavLink>\n        <NavLink\n          to=\"/community\"\n          className=\"navbar-btn\"\n          activeClassName=\"navbar-btn-active\"\n        >\n          <div className=\"navbar-btn-div\">\n            <PeopleOutlineRoundedIcon className=\"navbar-btn-icon\" />\n            <span className=\"abcd\">Community</span>\n          </div>\n        </NavLink>\n        <NavLink\n          to=\"/challenges\"\n          className=\"navbar-btn\"\n          activeClassName=\"navbar-btn-active\"\n        >\n          <div className=\"navbar-btn-div\">\n            <BarChartRoundedIcon className=\"navbar-btn-icon\" />\n            <span className=\"abcd\">Challenges</span>\n          </div>\n        </NavLink>\n        <NavLink\n          to=\"/magazines\"\n          className=\"navbar-btn\"\n          activeClassName=\"navbar-btn-active\"\n        >\n          <div className=\"navbar-btn-div\">\n            <ImportContactsRoundedIcon className=\"navbar-btn-icon\" />\n            <span className=\"abcd\">Magazines</span>\n          </div>\n        </NavLink>\n        <NavLink\n          to=\"/mobile-menu\"\n          className=\"navbar-btn mobile-icon\"\n          activeClassName=\"navbar-btn-active mobile-icon\"\n        >\n          <div className=\"navbar-btn-div mobile-icon\">\n            <MenuIcon className=\"navbar-btn-icon\" />\n            <span className=\"abcd\"></span>\n          </div>\n        </NavLink>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","D:\\quink-post-web-seo\\src\\Components\\primaryfeed.jsx",["328","329","330","331","332","333","334","335","336"],"import React, { useEffect, useState } from \"react\";\nimport \"../Styles/primaryfeed.css\";\nimport searchicon from \"../Assets/search.png\";\nimport { Badge } from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { Avatar } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport LocalActivityIcon from \"@material-ui/icons/LocalActivity\";\nimport NextWeekIcon from \"@material-ui/icons/NextWeek\";\nimport AssistantIcon from \"@material-ui/icons/Assistant\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport \"../Styles/notification.css\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport \"../Styles/sidemenu.css\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { Link, BrowserRouter } from \"react-router-dom\";\nimport Searchtab from \"./searchtab\";\nimport cross from \"../Assets/cross.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BACKEND from \"./Constants/Backend\";\nimport ACTION, {\n  LANGUAGE_PREFERENCE,\n  LikedYourPost,\n  NEW_POST_NOTI,\n  SEARCH_POST,\n  SHOW_SEARCH,\n  STARTED_FOLLOWING_NOTI,\n  USER_LOGGED_IN,\n} from \"./Reducer/Action\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Primaryfeed() {\n  const layerUser = useSelector((state) => state);\n  const showsearchRed = layerUser?.SHOW_SEARCH;\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [noti, setNoti] = useState(false);\n  const [notiItem, setNotiItem] = useState([]);\n  const [notiLength, setnotiLength] = useState(null);\n  const [sidebar, setSidebar] = useState(true);\n  const [contentType, setcontentType] = useState(\"Langauge\");\n  const [menubtn, setMenubtn] = useState(false);\n  const [showShade, setshowShade] = useState(null);\n  // const [showSearch, setshowSearch] = useState(layerUser?.SHOW_SEARCH)\n  const [search, setSearch] = useState(false);\n  const [searchField, setsearchField] = useState(\"\");\n  const [showLink, setshowLink] = useState(\"https://www.google.com\");\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log(\" In ++++++++++++++++++++++++++++++++++\")\n\n        const userToken = await localStorage.getItem(\"Quink-Post\");\n        if (userToken == \"\") {\n          history.push(\"/\");\n        }\n        dispatch({ type: SHOW_SEARCH, payload: null });\n        const data = await axios.get(`${BACKEND}/app/link`);\n\n        const temp = data?.data;\n        // console.log(temp[0]?.appLink)\n        setshowLink(temp[0]?.appLink);\n        // setshowLink(data?.data?.downloadlink);\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      const getNoti = await axios.get(\n        `${BACKEND}/notification/all/${layerUser?.user?._id}`\n      );\n      console.log(\"%%%getiingig\")\n      const notifications = getNoti.data.NotiFilter;\n      console.log(notifications, \"%%%\");\n      const tem = layerUser.user.notification\n        ? layerUser?.user?.notification\n        : 0;\n      const intprevnoti = parseInt(tem);\n      const intCurrentNoi = parseInt(notifications.length);\n      const popupValue = intCurrentNoi - intprevnoti;\n      setnotiLength(popupValue);\n      setshowShade(popupValue);\n      console.log(popupValue, \"this is popup <<<<<<\");\n      setNotiItem(notifications.reverse());\n    })();\n  }, []);\n\n  // useEffect(async () => {\n  //   // console.log(\"caled\",searchField)\n  //   try {\n  //     if (searchField == \"\") {\n  //       console.log(\"show all\")\n  //       const resp = await axios.get(`/post/all`);\n  //       setFeed(resp.data)\n  //       // dispatch({ type: ACTION.SEARCH_POST, payload: resp.data.posts })\n  //     }\n  //     else {\n  //       console.log(\"show search\")\n  //       const resp = await axios.get(`${BACKEND}/search/post/${searchField}`)\n  //       // dispatch({ type: ACTION.SEARCH_POST, payload: resp.data })\n  //       setFeed(resp.data)\n  //     }\n  //   } catch (e) { console.log(e) }\n\n  // }, [showSearch]);\n\n  // const onSearchChange = (event) => {\n  //   setsearchField(event.target.value)\n  //   refreshFunction(event.target.value)\n  // }\n\n  const LanguagePriority = () => {\n    if (contentType == \"Hindi\") {\n      setcontentType(\"English\");\n      dispatch({ type: LANGUAGE_PREFERENCE, payload: contentType });\n    } else {\n      setcontentType(\"Hindi\");\n      dispatch({ type: LANGUAGE_PREFERENCE, payload: contentType });\n    }\n  };\n\n  const openNoti = async () => {\n    setNoti(true);\n    setSidebar(false);\n    setMenubtn(false);\n    try {\n      const { data } = await axios.patch(\n        `${BACKEND}/user/updateNoti/${layerUser?.user?._id}/${notiItem?.length}`\n      );\n      if (data.success) {\n        const updatedUser = data?.user;\n        // console.log(data?.user, \"<<<<OOO\");\n\n        dispatch({ type: USER_LOGGED_IN, payload: updatedUser });\n        setnotiLength(null);\n      }\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  let notiList = notiItem?.map((noti, index) => {\n    const giveShade = index < showShade ? true : false;\n    console.log(noti, \"______\");\n    const timeStamp = new Date(noti.timeStamp);\n    const months = [\n      \"Dec\",\n      \"Jan\",\n      \"Feb\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n    ];\n\n    const getDate = {\n      month: months[timeStamp.getMonth() + 1],\n      date: timeStamp.getDate(),\n      hour: timeStamp.getHours(),\n      minute: timeStamp.getMinutes(),\n    };\n\n    if (noti.Type === STARTED_FOLLOWING_NOTI) {\n      return (\n        <div\n          className=\"noti-item\"\n          style={{ backgroundColor: giveShade ? \"#E8E8E8\" : \"white\" }}\n        >\n          <Avatar\n            className=\"chat-header-avatar\"\n            src={noti?.following?.followingId?.avatar}\n            style={{ marginRight: \"7px\" }}\n          />\n          <div>\n            <Link\n             to= {`/user/${noti?.following?.followingId?.userName}/${noti?.following?.followingId._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginRight: \"3px\",\n              }}\n            >\n              {noti?.following?.followingId?.userName}\n            </Link>{\" \"}\n            started following you\n            <div style={{ fontSize: \"12px\", color: \"gray\" }}>\n              {getDate.hour}:{getDate.minute} {getDate.date} {getDate.month}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (noti.Type === NEW_POST_NOTI) {\n      return (\n        <div\n          className=\"noti-item\"\n          style={{ backgroundColor: giveShade ? \"#E8E8E8\" : \"white\" }}\n        >\n          <Avatar\n            className=\"chat-header-avatar\"\n            src={noti?.newPostIdByFollowing?.image}\n            style={{ marginRight: \"7px\" }}\n          />\n          <div>\n            <Link\n              to={`/user/${noti?.newPostIdByFollowing?.author?.userName}/${noti?.newPostIdByFollowing?.author?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginRight: \"3px\",\n              }}\n            >\n              {noti?.newPostIdByFollowing?.author?.userName}\n            </Link>{\" \"}\n            uploaded new Quink\n            <Link\n              to={`/${noti?.newPostIdByFollowing?.title}/${noti?.newPostIdByFollowing?.author?.userName}/${noti?.newPostIdByFollowing?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginLeft: \"3px\",\n              }}\n            >\n              Open Quink\n            </Link>\n            <div style={{ fontSize: \"12px\", color: \"gray\" }}>\n              {getDate.hour}:{getDate.minute} {getDate.date} {getDate.month}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (noti.Type === LikedYourPost) {\n      return (\n        <div\n          className=\"noti-item\"\n          style={{ backgroundColor: giveShade ? \"#E8E8E8\" : \"white\" }}\n        >\n          <Avatar\n            className=\"chat-header-avatar\"\n            src={noti?.LikedBy?.LikedByUser?.avatar}\n            style={{ marginRight: \"7px\" }}\n          />\n          <div>\n            <Link\n              to={`/user/${noti?.LikedBy?.LikedByUser?.userName}/${noti?.LikedBy?.LikedByUser?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginRight: \"3px\",\n              }}\n            >\n              {noti?.LikedBy?.LikedByUser?.userName}\n            </Link>{\" \"}\n            liked your Quink{\" \"}\n            <Link\n              to={`${noti?.LikedBy?.postId?.title}/${noti?.LikedBy?.LikedByUser?.userName}/${noti?.LikedBy?.postId?._id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"rgb(56 56 56)\",\n                fontWeight: \"bold\",\n                marginLeft: \"3px\",\n              }}\n            >\n              {noti?.LikedBy?.postId?.title}\n            </Link>\n            <div style={{ fontSize: \"12px\", color: \"gray\" }}>\n              {getDate.hour}:{getDate.minute} {getDate.date} {getDate.month}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // return <div className=\"noti-item\">{noti.noti}</div>;\n  });\n  const closeNoti = () => {\n    setNoti(false);\n    setSidebar(true);\n    setMenubtn(false);\n  };\n  const openMenu = () => {\n    setNoti(false);\n    setSidebar(false);\n    setMenubtn(true);\n  };\n  const closeMenu = () => {\n    setNoti(false);\n    setSidebar(true);\n    setMenubtn(false);\n  };\n  // console.log(showSearch, \"<<<<thsi is search\");\n\n  const submitSearch = async (e) => {\n    e.preventDefault();\n    // console.log(searchField, \"<<<<<\", searchField.trim());\n    // console.log(\"ok time submit it\");\n    if (searchField.trim() != \"\") {\n      // console.log(get)\n      // setTimeout(() => {\n      //   dispatch({ type: SEARCH_POST, payload: searchField })\n      // }, 4000)\n      dispatch({ type: SHOW_SEARCH, payload: !showsearchRed });\n    } else {\n      dispatch({ type: SHOW_SEARCH, payload: null });\n    }\n\n    // if\n\n    // console.log(showSearch)\n    // if (searchField.trim() == \"\") {\n    //   console.log(\"ALL\")\n    //   setshowSearch(false)\n    //   // settogglePost(\"SEARCHED\")\n    // }\n    // else {\n    //   console.log(\"SEARCHED\")\n    //   setshowSearch(true)\n    //   // settogglePost(\"ALL\")\n    // }\n    // try {\n    //   // const posts = await axios.get(`${BACKEND}/search/post/${searchField}`)\n    //   return <SearchPost />\n    //   // dispatch({type:ACTION.SEARCH_POST,payload:posts.data})\n    // } catch (E) { console.log(E) }\n  };\n  const logOut = () => {\n    localStorage.setItem(\"Quink-Post\", \" \");\n    localStorage.setItem(\"QuinkPostUserLoggedIn\", false)\n    history.push(\"/\");\n  };\n  const handleSearch = () => {\n    setSearch(false);\n  };\n  const handleSearch1 = () => {\n    setSearch(false);\n  };\n  return (\n    <div className=\"primaryfeed-container\">\n      <div className=\"upper\">\n        <div className=\"searchbox\">\n          <div className=\"searchbox-div1\" onClick={handleSearch}>\n            <div>\n              <img src={searchicon} alt=\"\" className=\"search-icon\" />\n            </div>\n            <form onSubmit={submitSearch}>\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"search here..\"\n                  className=\"search-input\"\n                  value={searchField}\n                  onChange={(event) => setsearchField(event.target.value)}\n                />\n              </div>\n            </form>\n          </div>\n          <div\n            className={`search-cross-icon ${search && \"search-cross-display\"}`}\n            onClick={handleSearch1}\n          >\n            <img\n              src={cross}\n              alt=\"\"\n              className=\"search-icon\"\n              onClick={() => {\n                setsearchField(\"\");\n                dispatch({ type: SHOW_SEARCH, payload: null });\n                // dispatch({ type: SHOW_SEARCH, payload: searchField })\n\n                // setshowSearch(false)\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"upper-icons\">\n          <div className=\"icon\">\n            <Badge badgeContent={notiLength} color=\"error\">\n              <NotificationsIcon\n                className=\"icons\"\n                x\n                style={{ fontSize: 36 }}\n                onClick={openNoti}\n              />\n            </Badge>\n          </div>\n          <div className=\"icon\">\n            <Link to=\"/messaging\">\n              <Badge badgeContent={4} color=\"error\">\n                <ChatIcon className=\"icons\" style={{ fontSize: 36 }} />\n              </Badge>\n            </Link>\n          </div>\n          <Link to=\"/addpost\" className=\"addpost \">\n            <div>\n              <button className=\"addpost-button\">\n                <AddIcon />\n                Add post\n              </button>\n            </div>\n          </Link>\n          <div className=\"menu\">\n            <MoreVertIcon onClick={openMenu} />\n          </div>\n        </div>\n      </div>\n      <div className=\"secondary-container\">\n        <BrowserRouter>\n          <div className={`feed ${!search && \"display-feed\"}`}>\n            {/* <Post /> */}\n          </div>\n          <div className={`feed ${search && \"display-searchtab\"}`}>\n            <Searchtab\n              // lang={contentType}\n              className={`searchtab-component ${search && \"display-searchtab\"}`}\n              searchField={searchField}\n            />\n          </div>\n        </BrowserRouter>\n        <div className=\"sidebar\">\n          <div\n            className={`sidemenu-container ${!menubtn && \"sidemenu-hidden\"}`}\n          >\n            <div className=\"sidemenu-btn\" onClick={logOut}>\n              <ExitToAppIcon className=\"menu-icon-each\" />\n              Logout\n            </div>\n            <div className=\"sidemenu-btn\">\n              <a href='https://play.google.com/store/apps/details?id=com.quinkpost.quinkpost' className=\"account-setting\">\n                <AppsIcon className=\"menu-icon-each\" />\n                Download the App\n              </a>\n            </div>\n            <div className=\"sidemenu-btn\" onClick={LanguagePriority}>\n              <LibraryBooksIcon className=\"menu-icon-each\" />\n              {`${contentType}`} Content\n            </div>\n            <div className=\"sidemenu-btn\">\n              <CallIcon className=\"menu-icon-each\" />\n              Contact us\n            </div>\n            <div className=\"sidemenu-btn\">\n              <HelpIcon className=\"menu-icon-each\" />\n              Help and Support\n            </div>\n            <div className={\"sidemenu-btn\"}>\n              <SettingsIcon className=\"menu-icon-each\" />\n              Account Settings\n            </div>\n            <div className=\"menu-cross\">\n              <CancelIcon onClick={closeMenu} />\n            </div>\n          </div>\n          <div className={`noti-Container ${!noti && \"noti-hidden\"}`}>\n            <div className=\"noti-header\">\n              <div>Notifications.</div>{\" \"}\n              <div>\n                <CancelIcon className=\"noti-cancel\" onClick={closeNoti} />\n              </div>\n            </div>\n            {notiList}\n          </div>\n          <Link to=\"/profile\" style={{ textDecoration: \"none\" }}>\n            <div\n              className={`profile-card ${!sidebar && \"profile-card-hidden\"}`}\n            >\n              <div className=\"profile-info\">\n                <div className=\"profile-img\">\n                  <Avatar\n                    src={layerUser?.user?.avatar}\n                    className=\"profile-avatar\"\n                  />\n                </div>\n                <div className=\"profile-names\">\n                  <div className=\"profile-displayname\">\n                    {(() => {\n                      if (layerUser) {\n                        return layerUser?.user?.userName;\n                      }\n                    })()}\n                  </div>\n                  <div className=\"profile-username\">\n                    {(() => {\n                      if (layerUser) {\n                        return layerUser?.user?.firstName;\n                      }\n                    })()}\n                  </div>\n                </div>\n              </div>\n              <div className=\"profilesecondary\">\n                <div className=\"profile-detail\">\n                  <div className=\"profile-detail-each\">Quinks</div>\n                  <div className=\"number\">\n                    {(() => {\n                      if (layerUser) {\n                        return layerUser?.user?.post?.length;\n                      }\n                    })()}\n                  </div>\n                </div>\n                <div className=\"line\"></div>\n                <div className=\"profile-detail\">\n                  <div className=\"profile-detail-each\">followers</div>\n                  <div className=\"number\">\n                    {(() => {\n                      if (layerUser) {\n                        return layerUser?.user?.followers?.length;\n                      }\n                    })()}\n                  </div>\n                </div>\n                <div className=\"line\"></div>\n                <div className=\"profile-detail\">\n                  <div className=\"profile-detail-each\">following</div>\n                  <div className=\"number\">\n                    {(() => {\n                      if (layerUser) {\n                        return layerUser?.user?.followings?.length;\n                      }\n                    })()}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n\n          <div className={`trend ${!sidebar && \"profile-card-hidden\"}`}>\n            <div className=\"trend-1\">\n              <TrendingUpIcon className=\"trend-icons\" />\n              trending\n            </div>\n            <div className=\"trend-1\">\n              <DevicesIcon className=\"trend-icons\" />\n              technology\n            </div>\n            <div className=\"trend-1\">\n              <LocalActivityIcon className=\"trend-icons\" />\n              fashion\n            </div>\n            <div className=\"trend-1\">\n              <NextWeekIcon className=\"trend-icons\" />\n              buisness\n            </div>\n            <div className=\"trend-1\">\n              <AssistantIcon className=\"trend-icons\" />\n              entertainment\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Primaryfeed;\n","D:\\quink-post-web-seo\\src\\Components\\InterviewFeed.jsx",["337","338","339"],"import React, { useEffect, useState } from \"react\";\nimport InterviewPost from \"./InterviewPost\";\nimport axios from \"axios\";\nimport BACKEND from \"./Constants/Backend\";\n\nconst InterviewFeed = () => {\n  const [interview, setinterview] = useState([]);\n\n  useEffect(() => {\n    {\n      (async () => {\n        const result = await axios.get(`${BACKEND}/admin`);\n        console.log(result.data);\n        const posts = result.data.adminPost;\n        posts.map((post, index) => {\n          if (post.type == \"TRANSCRIBED\") {\n            setinterview((prev) => {\n              return [...prev, post];\n            });\n          }\n        });\n      })();\n    }\n  }, []);\n  return (\n    <div className=\"articleFeed\">\n      <div className=\"articleFeed-title \">Quink Post Interviews.</div>\n      <div className=\"articlePost\">\n        {(() => {\n          return interview.map((post, key) => {\n            return <InterviewPost post={post} />;\n          });\n        })()}\n\n        {/* <InterviewPost /> */}\n        {/* <InterviewPost />\n        <InterviewPost />\n        <InterviewPost />\n        <InterviewPost /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default InterviewFeed;\n","D:\\quink-post-web-seo\\src\\Components\\challengesfeed.jsx",["340"],"import React, { useEffect, useState } from \"react\";\nimport \"../Styles/communityfeed.css\";\nimport search from \"../Assets/search.png\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Challengepost from \"./challengepost\";\nimport BACKEND from \"./Constants/Backend\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\"\nimport {CHALLENGE_POST} from \"./Reducer/Action\";\n\nfunction Challengesfeed() {\n  const dispatch = useDispatch()\n  const [createcommunity, setCreatecommunity] = useState(false);\n  const [challenge, setchallenge] = useState([])\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await axios.get(`${BACKEND}/challenge/all`);\n        setchallenge(result.data.challenge);\n        dispatch({ type: CHALLENGE_POST, payload: result.data.challenge })\n\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [createcommunity]);\n  // setchallenge(useSelector(state => state?.challengePost))\n\n  const handleCreate = () => {\n    setCreatecommunity(true);\n  };\n  const handleCreate1 = () => {\n    setCreatecommunity(false);\n  };\n  return (\n    <div className=\"communityfeed-container\">\n      <div className=\"community-upper\">\n        <div className=\"community-pagetitle\"> Challenges </div>\n        <div className=\"create-community\">\n          {\" \"}\n          <button className=\"createcommunity-button\" onClick={handleCreate}>\n            <AddIcon />\n            Create challenges\n          </button>{\" \"}\n        </div>\n      </div>\n      <div className=\"community-secondary-container\">\n        <div\n          className={`community-feed ${createcommunity && \"show-createcommunity\"\n            }`}\n        >\n          {(() => {\n            if (challenge?.length) {\n              return challenge?.map((challenge, index) => {\n                return <Challengepost challenge={challenge} key={index} />\n\n              })\n            }\n          })()}\n          {/* <Challengepost />\n          <Challengepost />\n          <Challengepost />\n          <Challengepost />\n          <Challengepost /> */}\n        </div>\n        <div\n          className={`community-feed createcommunity ${!createcommunity && \"show-createcommunity\"\n            }`}\n        >\n          <div>Challenges can be created after 2000 followers..</div>\n          <div className=\"createcommunityback\" onClick={handleCreate1}>\n            Challenges Home\n          </div>\n        </div>\n        <div className=\"sidebar\">\n          <div className=\"community-searchbox\">\n            <div>\n              <img src={search} alt=\"\" className=\"community-search-icon\" />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"Search challenges..\"\n                className=\"community-search-input\"\n              />\n            </div>\n          </div>\n          <div className=\"joined-communities\">\n            <div className=\"joined-communities-header\">Joined Challenges</div>\n            {/* <div className=\"joined-communities-body\">\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n              <div className=\"each-joined-community\">\n                <div className=\"each-joined-community-avatar\">\n                  <Avatar />\n                </div>\n                <div className=\"each-joined-community-info\">\n                  <div className=\"each-joined-community-info-1\">\n                    Challenge Name\n                  </div>\n                  <div className=\"each-joined-community-info-2\">\n                    Members:123\n                  </div>\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Challengesfeed;\n","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communitychat.jsx",["341"],"import React, { createRef, useEffect, useState } from \"react\";\nimport \"../../Styles/communitychatcontent.css\";\nimport CommunityChatItem from \"./communitychatitem\";\nimport io from \"socket.io-client\"\nimport { useSelector } from \"react-redux\";\nimport BACKEND from \"../Constants/Backend\";\nexport default function CommunityChat(props) {\n  const messagesEndRef = createRef(null);\n    const globalUser = useSelector((state) => state);\n    const socket = io(`${BACKEND}`,{transports:['websocket','polling','flashsocket']});\n\n    const user=globalUser.user\n  // const chatItms = [\n  //\n  //   {\n  //     key: 4,\n  //     image: \"https://ui-avatars.com/api/?name=R+W\",\n  //     type: \"\",\n  //     msg: \"Awesome these days.\",\n  //   },\n  //\n  // ];\n// const [user,setuser] = useState({})\n  const [chats, setchats] = useState([])\n  const [msg, setmsg] = useState(\"\");\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     chat: this.chatItms,\n  //     msg: \"\",\n  //   };\n  // }\n\n  // const scrollToBottom = () => {\n  //   messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  // };\n\n  useEffect(() => {\n    console.log(\"yes \")\n socket.emit(\"fetchMessage\", { communityId: props.communityId })\n\n        console.log(\"useEffect called\")\n        // (async()=>{\n        //   const user=await AsyncStorage.getItem(\"quinkuser\")\n        // })()\n    // window.addEventListener(\"keydown\", (e) => {\n    //   if (e.keyCode == 13) {\n    //     if (msg != \"\") {\n    //       chatItms.push({\n    //         key: 1,\n    //         type: \"\",\n    //         msg: msg,\n    //         image: \"https://ui-avatars.com/api/?name=D+P\",\n    //       });\n    //       setchat([...chatItms]);\n    //       scrollToBottom();\n    //       setmsg(\"\");\n    //     }\n    //   }\n    // });\n    // scrollToBottom();\n  },[]);\n\n  socket.on(\"message\", (messagevalue) => {\n      // console.log(messagevalue,\"this is msg\")\n\n  setchats(messagevalue)\n})\nsocket.once(\"dupdateMessage\", messagevalue => {\n  console.log(\"this is message to updatae>>>\",messagevalue)\n  setchats(prev => { return [...prev, messagevalue] })\n})\n\n\nconst send = async () => {\n  try {\n    console.log(\"sending message\")\n    // const result = await axios.post(`${BACKEND}/community/message`, {\n    //   communityId: props.communityId,\n    //   user: user._id,\n    //   message: msg\n    // })\n    // console.log(result.data);\n    // if (result.data.success) {\n      socket.emit(\"updateMessage\", {\n        communityId: props.communityId,\n        user: user._id,\n        userName:user.userName,\n        message: msg\n      })\n      // console.log(temp, \"this istem\")\n      // settoggle(!toggle)\n      setmsg(\"\")\n    // }\n  } catch (e) { console.log(e) }\n  // Data.push({ id: inputMessage, message: inputMessage });\n  // setMessage(\"\");\n};\n\n\n  const onStateChange = (e) => {\n    e.preventDefault()\n    setmsg(e.target.value);\n  };\n\n  return (\n    <div className=\"main__chatcontent\">\n      <div className=\"community_content__body\">\n        <div className=\"chat__items\">\n          {chats.map((itm, key) => {\n            return (\n              <CommunityChatItem\n                animationDelay={key+ 2}\n                key={key}\n                // key={itm.key}\n                // user={itm.type ? itm.type : \"me\"}\n                // msg={itm.msg}\n                // image={itm.image}\n                data={itm}\n              />\n            );\n          })}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n      <div className=\"content__footer2\">\n        <div className=\"sendNewMessage\">\n          <button className=\"addFiles\">\n            <i className=\"fa fa-plus\"></i>\n          </button>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message here\"\n            onChange={onStateChange}\n            value={msg}\n          />\n          <button className=\"btnSendMsg\" id=\"sendMsgBtn\" onClick={send}>\n            <i className=\"fa fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communityquestion.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communitymainpost.jsx",["342"],"import React, { useState } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"../../Styles/Communitypost/communitymainpost.css\";\n\nfunction Communitymainpost({ posts }) {\n  // console.log(posts,\"this is in community mainpost\")\n  // const [communityinnerpost, setCommunityInnerPost] = useState([\n  //   {\n  //     displayname: \"Display Name\",\n  //     username: \"@ussername\",\n  //     caption:\n  //       \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi adipisci quibusdam cumque amet!\",\n  //     imagesrc: \"Profile\",\n  //   },\n  //   {\n  //     displayname: \"Display Name\",\n  //     username: \"@ussername\",\n  //     caption:\n  //       \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi adipisci quibusdam cumque amet!\",\n  //     imagesrc: \"Profile\",\n  //   },\n\n\n\n  // ]);\n  const [cmmt, setcmmt] = useState(false);\n  let communityInnerPost = posts?.map((post, index) => {\n    return (\n      <div>\n        <div\n          className={`communitymain-post-container ${cmmt && \"display-cmmt-none\"\n            }`}\n        >\n          <div className=\"communitymain-profile-1\">\n            <Avatar src={post?.author?.avatar} />\n            <div className=\"communitymain-user\">\n              <p className=\"communitymain-displayname\">{post?.author?.userName}</p>\n              <p className=\"communitymain-username\">{post.title\n              }</p>\n            </div>\n          </div>\n          <div className=\"communitymain-image\">\n            <img src={post?.image} alt=\"\" />\n          </div>\n          <div className=\"communitymain-post-info\">\n            <div className=\"communitymain-caption question\">{post.body}</div>\n            <div className=\"communitymain-header\">\n              {/* <div className=\"Communitymain-icons\">\n                <FavoriteBorderIcon className=\"Communitymain-icons-icon\" />\n                {post?.likedBy?.length}\n              </div> */}\n              {/* <div className=\"Communitymain-icons\" onClick={handleClick}>\n                <ModeCommentOutlinedIcon />\n                {post?.comment?.length}\n              </div> */}\n            </div>\n          </div>\n        </div>\n        <div\n          className={`communitymain-post-container ${!cmmt && \"display-cmmt-none\"\n            }`}\n        >\n          <div className=\"communitymain-caption question\">{post.caption}</div>\n          {/* <div className=\"community-comment-header\">\n            <div>Comments</div>{\" \"}\n            <div onClick={handleClick1}>\n              {\" \"}\n              <CancelIcon />\n            </div>\n          </div> */}\n          {/* <div className=\"Comment-Box\">{commentList}</div>\n          <div>\n            <textarea\n              name=\"write\"\n              id=\"\"\n              cols=\"30\"\n              rows=\"10\"\n              placeholder=\"Write Commment\"\n              className=\"community-main-post-cmmt\"\n            ></textarea>\n          </div>\n          <div className=\"post-cmmt-btn\"> Post</div> */}\n        </div>\n      </div>\n    );\n  });\n  return <div>{communityInnerPost}</div>;\n}\n\nexport default Communitymainpost;\n","D:\\quink-post-web-seo\\src\\Components\\SharePostCard.js",["343","344"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ChatAvatar from \"./chatavatar\";\nimport Quinkpost from '../Assets/Quinkpost.jpg'\nimport { Link } from \"react-router-dom\";\nexport default function SharePostCard(props) {\n\n    const { senderId, timeStamp } = props\n    const { user } = useSelector(state => state)\n    const userId = user._id\n    const getTime = () => {\n        // const months=[\"jan\",\"fab\",\"mar\"]\n        const months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n        const date = new Date(timeStamp)\n        // console.log(date.getDate(), date.getHours(), \"+++++++++\")\n        return { hour: date.getHours(), minute: date.getMinutes(), date: date.getDate(), month: months[(date.getMonth())] }\n        // console.log(timeStamp, \"+++++++\")\n    }\n\n    const checkLeftOrRight = () => {\n        // console.log(userId, \"<<0\", senderId)\n        if (userId == senderId) {\n            // console.log(\"should be right\", props.title)\n            return \"chat__item\"\n        }\n        else {\n\n            console.log(\"should be left\", props.title)\n            return \"chat__item other\"\n        }\n    }\n    return (\n        <div\n            style={{ animationDelay: `0.8s` }}\n            className={checkLeftOrRight()}\n        // className=\"chat__item\"\n        >\n            <div className=\"chat__item__content\">\n\n                <Link to={`/user/${props.user2Name}/${props.title}/${props.postId}`}>\n\n                <div>{props.title}</div>\n                <div style={{textAlign: \"center\"}}><img style={{ width: \"75%\", marginTop: \"10px\" }} src={props.image ? props.image : Quinkpost} /></div>\n                <div> {props.caption}</div>\n                <div className=\"chat__meta\">\n\n                    <span >{getTime().hour}:{getTime().minute} | {getTime().date} {getTime().month}</span>\n                    {/* <span>Seen 1.03PM</span> */}\n                </div>\n                </Link>\n\n            </div>\n            <ChatAvatar isOnline=\"active\" image={props?.avatar} />\n        </div>\n    );\n}\n","D:\\quink-post-web-seo\\src\\Components\\InterviewPost.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\challengepost.jsx",["345","346"],"import React from \"react\";\nimport \"../Styles/communitypost.css\";\nimport \"../Styles/challengepost.css\";\nimport Quinkpost from \"../Assets/Quinkpost.jpg\";\nimport { Avatar } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { Link } from \"react-router-dom\";\n\nfunction Challengepost({ challenge }) {\n  console.log(challenge);\n  const end = challenge?.duration.end;\n  const challengeId = challenge?._id;\n  // console.log(end,\"this is end date of challenge\")\n  return (\n    <div className=\"challenge-container\">\n      <div className=\"community-header\">\n        <Avatar src={Quinkpost} className=\"community-avatar\" />\n        <div className=\"community-title\">Quink Post Challenge</div>\n      </div>\n      {/* <div className=\"post-info\">\n        <div className=\"challenge-discription\">\n          <div className=\"challenge-discription-1\">\n            <div className=\"challenge-discription-header\">Description :</div>\n            {challenge?.description}\n          </div>\n          <div className=\"challenge-discription-1\">\n            <div className=\"challenge-discription-header\">\n              {`${challengeDate.getDate()}/${\n                challengeDate.getMonth() + 1\n              }/${challengeDate.getFullYear()}`}\n            </div>\n            12 feb 2021\n          </div>\n          <div className=\"challenge-discription-1\">\n            <div className=\"challenge-discription-header\">Prize :</div>\n          </div>\n        </div>\n      </div> */}\n      <img src={challenge.image ? challenge?.image : Quinkpost} style={{ height: \"35rem\", width: \"100%\" }} />\n      <div className=\"join-community\">\n        <div className=\"members\">\n          <PersonIcon />\n          Participants :<div className=\"members-no\">{parseInt(challenge?.participants?.length) + parseInt(104)}</div>\n        </div>\n        <Link to={{ pathname: `/challenge/${challenge?.title}/${challengeId}/participate` }} style={{ textDecoration: \"none\", color: \"#282c37\" }}>\n          <div className=\"community-readmore\">Enter</div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Challengepost;\n","D:\\quink-post-web-seo\\src\\Components\\searchtab.jsx",["347","348","349","350","351","352","353","354","355","356","357","358","359"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../Styles/searchtab.css\";\nimport Loader from \"react-loader-spinner\";\nimport BACKEND from \"./Constants/Backend\";\n// import SearchArticle from './search/searchArticle';\nimport Post from \"./post\";\nfunction Searchtab({ searchField }) {\n  const globalState = useSelector((state) => state);\n  const toggleLanguage = useSelector((state) => state.LANGUAGE_PREFERENCE);\n  const showSearch = globalState.SHOW_SEARCH;\n  // const searchField = globalState.SEARCH_POST\n  // Shayari -- shayari\n  // Story -- story\n  //Quote --quote\n  // poem\n  // article\n  // meme\n  const [All, setAll] = useState(true);\n  const [showLoader, setshowLoader] = useState(false);\n  const [Article, setArticle] = useState(false);\n  const [Shayari, setShayari] = useState(false);\n  const [Story, setStory] = useState(false);\n  const [Poem, setPoem] = useState(false);\n  const [Meme, setMeme] = useState(false);\n  const [Quote, setQuote] = useState(false);\n\n  const [Feed, setFeed] = useState([]);\n  const [MemeFeed, setMemeFeed] = useState([]);\n  const [ArticleFeed, setArticleFeed] = useState([]);\n  const [StoryFeed, setStoryFeed] = useState([]);\n  const [PoemFeed, setPoemFeed] = useState([]);\n  const [ShayariFeed, setShayariFeed] = useState([]);\n  const [QuoteFeed, setQuoteFeed] = useState([]);\n\n  useEffect(\n    function () {\n      try {\n        const getData = async () => {\n          setshowLoader(true);\n          const resp = await axios.get(`${BACKEND}/post/all/${toggleLanguage}`);\n          const datad = await resp.data;\n\n          // console.log(datad, \"this is dated\")\n          setFeed(datad.posts.reverse());\n\n          setMemeFeed(datad.posts.filter((post) => post.type == \"MEME\"));\n          setArticleFeed(datad.posts.filter((post) => post.type == \"ARTICLE\"));\n          setStoryFeed(datad.posts.filter((post) => post.type == \"STORY\"));\n          setPoemFeed(datad.posts.filter((post) => post.type == \"POEM\"));\n          setShayariFeed(datad.posts.filter((post) => post.type == \"SHAYARI\"));\n          setQuoteFeed(datad.posts.filter((post) => post.type == \"QUOTE\"));\n          setshowLoader(false);\n        };\n        const searchPostData = async () => {\n          // console.log(\"inside search Post<<<<<\", showSearch, \"<<showSearch \", searchField, \"<<<searchField\")\n          setshowLoader(true);\n          const posts = await axios.get(\n            `${BACKEND}/search/post/${searchField}`\n          );\n          console.log(posts.data, \"+++++++++++++\", searchField);\n          setFeed(posts.data.reverse());\n          setMemeFeed(posts.data.filter((post) => post.type == \"MEME\"));\n          setArticleFeed(posts.data.filter((post) => post.type == \"ARTICLE\"));\n          setStoryFeed(posts.data.filter((post) => post.type == \"STORY\"));\n          setPoemFeed(posts.data.filter((post) => post.type == \"POEM\"));\n          setShayariFeed(posts.data.filter((post) => post.type == \"SHAYARI\"));\n          setQuoteFeed(posts.data.filter((post) => post.type == \"QUOTE\"));\n          setshowLoader(false);\n        };\n        // (!showSearch) ? getData() : searchPostData()\n        if (showSearch != null) {\n          searchPostData();\n        } else {\n          getData();\n        }\n        // getData();\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    [showSearch, toggleLanguage]\n  );\n\n  const handleClick0 = () => {\n    setAll(true);\n    setArticle(false);\n    setShayari(false);\n    setStory(false);\n    setPoem(false);\n    setQuote(false)\n    setMeme(false);\n  };\n  const handleClick1 = () => {\n    setAll(false);\n    setArticle(true);\n    setShayari(false);\n    setStory(false);\n    setQuote(false)\n    setPoem(false);\n    setMeme(false);\n  };\n  const handleClick2 = () => {\n    setAll(false);\n    setArticle(false);\n    setShayari(true);\n    setStory(false);\n    setPoem(false);\n    setQuote(false)\n    setMeme(false);\n  };\n  const handleClick3 = () => {\n    setAll(false);\n    setArticle(false);\n    setShayari(false);\n    setQuote(false)\n    setStory(true);\n    setPoem(false);\n    setMeme(false);\n  };\n  const handleClick4 = () => {\n    setArticle(false);\n    setAll(false);\n    setQuote(false)\n    setShayari(false);\n    setStory(false);\n    setPoem(true);\n    setMeme(false);\n  };\n  const handleClick5 = () => {\n    setArticle(false);\n    setAll(false);\n    setQuote(false)\n    setShayari(false);\n    setStory(false);\n    setPoem(false);\n    setMeme(true);\n  };\n\n  const handleClick6 = () => {\n    setArticle(false);\n    setAll(false);\n\n    setShayari(false);\n    setStory(false);\n    setPoem(false);\n    setMeme(false);\n    setQuote(true)\n  };\n  return (\n    <>\n      <div className=\"searchtab-container\">\n        <div className=\"upper-category\">\n          <div\n            className={`upper-category-each ${\n              All && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick0}\n          >\n            Feed\n          </div>\n          <div\n            className={`upper-category-each ${\n              Article && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick1}\n          >\n            Articles\n          </div>\n          <div\n            className={`upper-category-each ${\n              Shayari && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick2}\n          >\n            Shayari\n          </div>\n          <div\n            className={`upper-category-each ${\n              Story && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick3}\n          >\n            Story\n          </div>\n          <div\n            className={`upper-category-each ${\n              Poem && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick4}\n          >\n            Poem\n          </div>\n          <div\n            className={`upper-category-each ${\n              Meme && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick5}\n          >\n            Meme\n          </div>\n          <div\n            className={`upper-category-each ${\n              Quote && \"upper-category-each-active\"\n            }`}\n            onClick={handleClick6}\n          >\n            Quote\n          </div>\n        </div>\n        <div className=\"search-result-container\">\n          <div style={{ alignItems: \"center\", textAlign: \"center\" }}>\n            <Loader\n              visible={showLoader}\n              type=\"MutatingDots\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n            />\n          </div>\n          <div className={`${!All && \"search-display-none\"}`}>\n            <Post dataToShow={Feed} />\n          </div>\n          <div className={`${!Article && \"search-display-none\"}`}>\n            <Post dataToShow={ArticleFeed} />\n          </div>\n          <div className={`${!Shayari && \"search-display-none\"}`}>\n            <Post dataToShow={ShayariFeed} />\n          </div>\n          <div className={`${!Story && \"search-display-none\"}`}>\n            <Post dataToShow={StoryFeed} />\n          </div>\n          <div className={`${!Poem && \"search-display-none\"}`}>\n            <Post dataToShow={PoemFeed} />\n          </div>\n          <div className={`${!Meme && \"search-display-none\"}`}>\n            <Post dataToShow={MemeFeed} />\n          </div>\n          <div className={`${!Quote && \"search-display-none\"}`}>\n            <Post dataToShow={QuoteFeed} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Searchtab;\n","D:\\quink-post-web-seo\\src\\Components\\Communitypost\\communitychatitem.jsx",["360"],"import React from \"react\";\nimport ChatAvatar from \"../chatavatar\";\n\nexport default function CommunityChatItem({ data }) {\n  // console.log(props.data,\"<<))))))\")\\\n  const { message, timeStamp, user } = data;\n  // console.log(user, \"this is data in community chat\");\n  // console.log(user,\"this is userName\")\n  // const{userName,avatar}=user\n  // console.log(message,timeStamp,user)\n  // console.log(user?.userName, \"<<<<<<<<<<<\")\n  return (\n    <div\n      style={{ animationDelay: `0.8s` }}\n      className={`chat__item ${user ? user : \"\"}`}\n    >\n      <div className=\"chat__item__content\">\n        <span style={{ fontWeight: 'normal', color: 'lightgrey' }}> {user?.userName}</span>\n        <div style={{ backgroundColor: 'lightgrey', height: 1, marginBottom: 5, marginTop: 5 }}></div>\n        <div className=\"chat__msg\">{message}</div>\n        <div className=\"chat__meta\">\n          <span>16 mins ago</span>\n          <span>Seen 1.03PM</span>\n        </div>\n      </div>\n      <ChatAvatar isOnline=\"active\" image={user?.avatar} />\n    </div>\n  );\n}\n","D:\\quink-post-web-seo\\src\\Components\\chatavatar.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\post.jsx",["361","362","363","364","365","366","367","368","369","370","371"],"import React, { useState, useEffect } from \"react\";\nimport Profile from \"../Assets/colour.jpg\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"../Styles/post.css\";\nimport { useSelector } from \"react-redux\";\nconst Post = ({ dataToShow }) => {\n  // console.log(\"POST Ok IS IN SCREEN\")\n  // console.log(props.post, \"thsi is post in post \")\n  // console.log(props?.post, \"this i spost in post screen\")\n  const globalState = useSelector(state => state)\n  console.log(globalState, \"<<<<\")\n  // const [showSearch, setshowSearch] = useState(globalState.SHOW_SEARCH)\n  // const [searchField, setsearchField] = useState(globalState.SEARCH_POST)\n  const showSearch = globalState.SHOW_SEARCH\n  const searchField = globalState.SEARCH_POST\n  // console.log(globalState, \"{}{}\")\n  // const setValues = async () => {\n  //   const value = await globalState?.SHOW_SEARCH\n  //   setshowSearch(value)\n  //   const searchvalue = await globalState?.SEARCH_POST\n  //   console.log(searchvalue, \"inside :::::\")\n  //   setsearchField(searchvalue)\n  // }\n  // setValues()\n\n\n  console.log(showSearch, \"  \", searchField, \"<<<<<<<<<<<\")\n  // console.log(globalState)\n  // console.log(globalState, \"this is user\")\n  const [currState, setcurrState] = useState(\"FEED\")\n  const [Feed, setFeed] = useState([])\n  const [Meme, setMeme] = useState([])\n  const [Article, setArticle] = useState([])\n  const [Story, setStory] = useState([])\n  // const [value, setValue] = useState(false)\n\n  // setFeed(useSelector(state => state?.searchPost))\n  // const [globalState, setglobalState] = useState({})\n  // useSelector(state => {\n  //   console.log(\"this is searchPost\", state)\n  //   setFeed(state?.searchPost)\n  // })\n  //   (async () => {\n  //     const globalState = await useSelector(state => state)\n  //     setFeed(globalState.searchPost)\n  //   })()\n  // console.log(globalState, \"this is global state\")\n  // console.log(globalState)\n\n  // const DataToShow =\n  // console.log(dataToShow, \"%%\")\n\n  useEffect(function () {\n    try {\n      //   const getData = async () => {\n      //     console.log(\"inside getData<<<<<\", showSearch, \"<<showSearch \", searchField, \"<<<searchField\")\n      //     const resp = await axios.get(`${BACKEND}/post/all`);\n      //     const datad = await resp.data;\n\n      //     // console.log(datad, \"this is dated\")\n      //     setFeed(datad.posts.reverse());\n\n      //     dispatch({ type: SEARCH_POST, payload: datad.posts })\n      //     setMeme(datad.posts.filter(post => post.type == \"MEME\"))\n      //     setArticle(datad.posts.filter(post => post.type == \"ARTICLE\"))\n      //     setStory(datad.posts.filter(post => post.type == \"STORY\"))\n\n      //   };\n      //   const searchPostData = async () => {\n      //     console.log(\"inside search Post<<<<<\", showSearch, \"<<showSearch \", searchField, \"<<<searchField\")\n\n      //     const posts = await axios.get(`${BACKEND}/search/post/${searchField}`)\n      //     console.log(posts.data)\n      //   }\n      //   (!showSearch) ? getData() : searchPostData()\n    } catch (e) {\n      console.log(e);\n    }\n  }, [showSearch]);\n\n  const [details, setDetails] = useState(true);\n  const defaultUrl = \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\n\n  let postList = dataToShow.map((post, index) => {\n    // let postList = Feed?.map((post, index) => {\n    // console.log(post, \"this is post>>>>>>>>>>>>>>>>>>>>>\")\n\n\n    if (details === true) {\n      return (\n        <div className=\"post-container\">\n          <div className=\"profile-1\">\n            <a href={`/profileOther/${post?.author?._id}`}>    <Avatar src={post?.author?.avatar ? post?.author?.avatar : defaultUrl} /></a>\n            <div className=\"user\">\n              <p className=\"displayname\">{(() => { if (post.author) { return post?.author.userName } else { return \"Loading...\" } })()}</p>\n              <p className=\"username\">{(() => { if (post.author) { return post?.author.firstName } else { return \"Loading...\" } })()}</p>\n            </div>\n          </div>\n          <div  >\n            {/* <Link to=\"/postDetails\"> <img src={post.image} alt=\"\"  /></Link> */}\n            <a href={`user/${post.title}/${post?.author?.userName}/${post._id}`} className=\"image\" ><img src={post.image} alt=\"\" /></a>\n          </div>\n          <div className=\"post-info\">\n            <div className=\"header\">{post.title}</div>\n            <div className=\"caption\">{post.caption}</div>\n          </div>\n          {/* <Link to={{\n            pathname: `/${post.title}/${globalState.user.userName}/${post._id}`,\n            //  state: { post, user: globalState }\n          }}>  <div className=\"readmore\">\n              Read\n          </div></Link> */}\n          <div className=\"readmore\">\n            <a style={{ textDecoration: 'none', color: '#282c37' }} href={`/user/${globalState?.user?.userName}/${post?.title}/${post?._id}`}>Read</a>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"post-container\">\n          <div className=\"profile-1\">\n            <Avatar src={Profile} />\n            <div className=\"user\">\n              <p className=\"displayname\">{post.displayName}</p>\n              <p className=\"username\">{post.username}</p>\n            </div>\n          </div>\n          <div className=\"image\">\n            <img src={Profile} alt=\"\" />\n          </div>\n          <div className=\"post-info\">\n            <div className=\"header\">{post.header}</div>\n            <div className=\"caption\">{post.body}</div>\n          </div>\n          <div className=\"readmore\" >\n            Done\n          </div>\n        </div>\n      );\n    }\n  });\n\n  return <div>{postList}</div>;\n}\n\nexport default Post;\n","D:\\quink-post-web-seo\\src\\Components\\chatitem.jsx",["372"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ChatAvatar from \"./chatavatar\";\n\nexport default function ChatItem(props) {\n  const { senderId } = props\n  const { user } = useSelector(state => state)\n  const userId = user._id\n  const checkLeftOrRight = () => {\n\n    if (userId == senderId) {\n      return \"chat__item\"\n    }\n    else {\n      return \"chat__item other\"\n    }\n  }\n  return (\n    <div\n      style={{ animationDelay: `0.8s` }}\n      className={checkLeftOrRight()}\n    >\n      <div className=\"chat__item__content\">\n        <div className=\"chat__msg\">{props?.msg}</div>\n        <div className=\"chat__meta\">\n          <span>16 mins ago</span>\n          <span>Seen 1.03PM</span>\n        </div>\n      </div>\n      <ChatAvatar isOnline=\"active\" image={props.image} />\n    </div>\n  );\n}\n","D:\\quink-post-web-seo\\src\\Components\\comingsoon.jsx",["373"],"import React, { useRef } from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport Quinkpost from \"../Assets/Poster7.png\";\nimport '../Styles/comingsoon.css';\n\nfunction Comingsoon() {\n  const ref = useRef();\n\n  const flipcard = () => {\n    return (\n      <Flippy\n        flipOnHover={true} // default false\n        flipDirection=\"horizontal\" // horizontal or vertical\n        ref={ref} // to use toggle method like ref.curret.toggle()\n        // if you pass isFlipped prop component will be controlled component.\n        // and other props, which will go to div\n        style={{ width: \"320px\", height: \"320px\" }} /// these are optional style, it is not necessary\n      >\n        <FrontSide style={{ backgroundColor: \"#41669d\", padding: 0 }}>\n          <img\n            src={Quinkpost}\n            style={{ width: \"320px\", height: \"320px\" }}\n          />\n        </FrontSide>\n        <BackSide style={{backgroundColor: \"#d3d9dbd5\"}}>\n          <div\n            style={{\n              textAlign: \"center\",\n              fontSize: 27,\n              fontWeight: \"bold\",\n              color: \"black\",\n              paddingBottom: \"65px\",\n            }}\n          >\n            Quink's Infotainment Magz\n          </div>\n          <a href=\"/Flipbook/flipbook.html\" style={{ color: \"inherit\", textDecorationColor: \"#000\" }}>\n            <div\n              style={{ textAlign: \"center\", fontSize: 20, fontWeight: \"bold\", color: \"#000\" }}\n            >\n              View\n            </div>\n          </a>\n        </BackSide>\n      </Flippy>\n    );\n  };\n\n  return (\n    <div className=\"coming-soon\">\n      {/* This Feature will be soon Available. */}\n      {/* <a href=\"https://heyzine.com/flip-book/59de7901e9.html\"> Flipbook </a> */}\n      <div> {flipcard()}</div>\n    </div>\n  );\n}\n\nexport default Comingsoon;\n","D:\\quink-post-web-seo\\src\\Components\\communityfeed.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\ArticleFeed.jsx",["374","375","376"],"import React, { useEffect, useState } from \"react\";\nimport \"../Styles/ArticleFeed.css\";\nimport ArticlePost from \"./ArticlePost\";\nimport \"../Styles/Original.css\";\nimport BACKEND from \"./Constants/Backend\";\nimport axios from \"axios\";\nconst ArticleFeed = () => {\n  const [article, setarticle] = useState([]);\n\n  useEffect(() => {\n    {\n      (async () => {\n        const result = await axios.get(`${BACKEND}/admin`);\n        console.log(result.data);\n        const posts = result.data.adminPost;\n        posts.map((post, index) => {\n          if (post.type != \"TRANSCRIBED\") {\n            setarticle((prev) => {\n              return [...prev, post];\n            });\n          }\n        });\n      })();\n    }\n  }, []);\n\n  return (\n    <div className=\"articleFeed\">\n      <div className=\"articleFeed-title \">Quink Post Articles.</div>\n      <div className=\"articlePost\">\n        {(() => {\n          return article.map((post, index) => {\n            return <ArticlePost post={post} key={index} />;\n          });\n        })()}\n\n        {/* <ArticlePost /> */}\n        {/* <ArticlePost />        \n        <ArticlePost /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleFeed;\n","D:\\quink-post-web-seo\\src\\Components\\communitypost.jsx",[],"D:\\quink-post-web-seo\\src\\Components\\ArticlePost.jsx",[],{"ruleId":"377","severity":1,"message":"378","line":52,"column":9,"nodeType":"379","messageId":"380","endLine":52,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":239,"column":15,"nodeType":"383","messageId":"384","endLine":239,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":405,"column":15,"nodeType":"383","messageId":"384","endLine":405,"endColumn":17},{"ruleId":"377","severity":1,"message":"385","line":462,"column":9,"nodeType":"379","messageId":"380","endLine":462,"endColumn":25},{"ruleId":"377","severity":1,"message":"386","line":465,"column":9,"nodeType":"379","messageId":"380","endLine":465,"endColumn":25},{"ruleId":"377","severity":1,"message":"387","line":1,"column":17,"nodeType":"379","messageId":"380","endLine":1,"endColumn":25},{"ruleId":"377","severity":1,"message":"378","line":52,"column":11,"nodeType":"379","messageId":"380","endLine":52,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":247,"column":17,"nodeType":"383","messageId":"384","endLine":247,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":402,"column":17,"nodeType":"383","messageId":"384","endLine":402,"endColumn":19},{"ruleId":"377","severity":1,"message":"385","line":459,"column":11,"nodeType":"379","messageId":"380","endLine":459,"endColumn":27},{"ruleId":"377","severity":1,"message":"386","line":462,"column":11,"nodeType":"379","messageId":"380","endLine":462,"endColumn":27},{"ruleId":"377","severity":1,"message":"378","line":51,"column":11,"nodeType":"379","messageId":"380","endLine":51,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":237,"column":17,"nodeType":"383","messageId":"384","endLine":237,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":402,"column":17,"nodeType":"383","messageId":"384","endLine":402,"endColumn":19},{"ruleId":"377","severity":1,"message":"388","line":460,"column":11,"nodeType":"379","messageId":"380","endLine":460,"endColumn":24},{"ruleId":"381","severity":1,"message":"382","line":488,"column":22,"nodeType":"383","messageId":"384","endLine":488,"endColumn":24},{"ruleId":"377","severity":1,"message":"385","line":492,"column":11,"nodeType":"379","messageId":"380","endLine":492,"endColumn":27},{"ruleId":"377","severity":1,"message":"386","line":495,"column":11,"nodeType":"379","messageId":"380","endLine":495,"endColumn":27},{"ruleId":"377","severity":1,"message":"389","line":8,"column":5,"nodeType":"379","messageId":"380","endLine":8,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":37,"column":13,"nodeType":"392","messageId":"393","endLine":37,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":41,"column":13,"nodeType":"392","messageId":"393","endLine":41,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":45,"column":13,"nodeType":"392","messageId":"393","endLine":45,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":49,"column":13,"nodeType":"392","messageId":"393","endLine":49,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":53,"column":13,"nodeType":"392","messageId":"393","endLine":53,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":56,"column":13,"nodeType":"392","messageId":"393","endLine":56,"endColumn":19},{"ruleId":"390","severity":1,"message":"391","line":59,"column":13,"nodeType":"392","messageId":"393","endLine":59,"endColumn":18},{"ruleId":"390","severity":1,"message":"391","line":62,"column":13,"nodeType":"392","messageId":"393","endLine":62,"endColumn":19},{"ruleId":"394","severity":1,"message":"395","line":63,"column":9,"nodeType":"396","messageId":"384","endLine":64,"endColumn":61},{"ruleId":"377","severity":1,"message":"397","line":5,"column":8,"nodeType":"379","messageId":"380","endLine":5,"endColumn":21},{"ruleId":"377","severity":1,"message":"398","line":16,"column":7,"nodeType":"379","messageId":"380","endLine":16,"endColumn":13},{"ruleId":"377","severity":1,"message":"399","line":27,"column":10,"nodeType":"379","messageId":"380","endLine":27,"endColumn":19},{"ruleId":"377","severity":1,"message":"400","line":27,"column":21,"nodeType":"379","messageId":"380","endLine":27,"endColumn":33},{"ruleId":"381","severity":1,"message":"382","line":47,"column":24,"nodeType":"383","messageId":"384","endLine":47,"endColumn":26},{"ruleId":"401","severity":1,"message":"402","line":96,"column":6,"nodeType":"403","endLine":96,"endColumn":8,"suggestions":"404"},{"ruleId":"381","severity":1,"message":"382","line":104,"column":21,"nodeType":"383","messageId":"384","endLine":104,"endColumn":23},{"ruleId":"377","severity":1,"message":"405","line":8,"column":9,"nodeType":"379","messageId":"380","endLine":8,"endColumn":14},{"ruleId":"401","severity":1,"message":"406","line":13,"column":13,"nodeType":"407","endLine":23,"endColumn":4},{"ruleId":"381","severity":1,"message":"382","line":18,"column":15,"nodeType":"383","messageId":"384","endLine":18,"endColumn":17},{"ruleId":"401","severity":1,"message":"408","line":23,"column":6,"nodeType":"403","endLine":23,"endColumn":8,"suggestions":"409"},{"ruleId":"377","severity":1,"message":"410","line":6,"column":10,"nodeType":"379","messageId":"380","endLine":6,"endColumn":14},{"ruleId":"377","severity":1,"message":"411","line":34,"column":10,"nodeType":"379","messageId":"380","endLine":34,"endColumn":18},{"ruleId":"377","severity":1,"message":"412","line":36,"column":10,"nodeType":"379","messageId":"380","endLine":36,"endColumn":19},{"ruleId":"381","severity":1,"message":"413","line":50,"column":23,"nodeType":"383","messageId":"384","endLine":50,"endColumn":25},{"ruleId":"401","severity":1,"message":"414","line":75,"column":6,"nodeType":"403","endLine":75,"endColumn":8,"suggestions":"415"},{"ruleId":"381","severity":1,"message":"382","line":114,"column":24,"nodeType":"383","messageId":"384","endLine":114,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":114,"column":48,"nodeType":"383","messageId":"384","endLine":114,"endColumn":50},{"ruleId":"381","severity":1,"message":"382","line":272,"column":32,"nodeType":"383","messageId":"384","endLine":272,"endColumn":34},{"ruleId":"381","severity":1,"message":"382","line":305,"column":16,"nodeType":"383","messageId":"384","endLine":305,"endColumn":18},{"ruleId":"381","severity":1,"message":"382","line":311,"column":16,"nodeType":"383","messageId":"384","endLine":311,"endColumn":18},{"ruleId":"401","severity":1,"message":"416","line":46,"column":6,"nodeType":"403","endLine":46,"endColumn":8,"suggestions":"417"},{"ruleId":"401","severity":1,"message":"416","line":58,"column":6,"nodeType":"403","endLine":58,"endColumn":23,"suggestions":"418"},{"ruleId":"377","severity":1,"message":"419","line":12,"column":8,"nodeType":"379","messageId":"380","endLine":12,"endColumn":18},{"ruleId":"377","severity":1,"message":"420","line":13,"column":8,"nodeType":"379","messageId":"380","endLine":13,"endColumn":19},{"ruleId":"377","severity":1,"message":"421","line":14,"column":8,"nodeType":"379","messageId":"380","endLine":14,"endColumn":19},{"ruleId":"377","severity":1,"message":"422","line":69,"column":10,"nodeType":"379","messageId":"380","endLine":69,"endColumn":22},{"ruleId":"377","severity":1,"message":"423","line":72,"column":10,"nodeType":"379","messageId":"380","endLine":72,"endColumn":21},{"ruleId":"377","severity":1,"message":"424","line":88,"column":15,"nodeType":"379","messageId":"380","endLine":88,"endColumn":23},{"ruleId":"401","severity":1,"message":"425","line":115,"column":6,"nodeType":"403","endLine":115,"endColumn":13,"suggestions":"426"},{"ruleId":"401","severity":1,"message":"427","line":132,"column":6,"nodeType":"403","endLine":132,"endColumn":8,"suggestions":"428"},{"ruleId":"401","severity":1,"message":"429","line":147,"column":6,"nodeType":"403","endLine":147,"endColumn":8,"suggestions":"430"},{"ruleId":"401","severity":1,"message":"406","line":149,"column":13,"nodeType":"407","endLine":160,"endColumn":4},{"ruleId":"401","severity":1,"message":"431","line":160,"column":6,"nodeType":"403","endLine":160,"endColumn":23,"suggestions":"432"},{"ruleId":"433","severity":1,"message":"434","line":160,"column":6,"nodeType":"403","messageId":"435","endLine":160,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":197,"column":21,"nodeType":"383","messageId":"384","endLine":197,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":271,"column":15,"nodeType":"383","messageId":"384","endLine":271,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":275,"column":15,"nodeType":"383","messageId":"384","endLine":275,"endColumn":17},{"ruleId":"377","severity":1,"message":"436","line":339,"column":9,"nodeType":"379","messageId":"380","endLine":339,"endColumn":24},{"ruleId":"381","severity":1,"message":"382","line":343,"column":13,"nodeType":"383","messageId":"384","endLine":343,"endColumn":15},{"ruleId":"381","severity":1,"message":"382","line":372,"column":13,"nodeType":"383","messageId":"384","endLine":372,"endColumn":15},{"ruleId":"437","severity":1,"message":"438","line":401,"column":13,"nodeType":"439","messageId":"440","endLine":403,"endColumn":14},{"ruleId":"437","severity":1,"message":"438","line":406,"column":15,"nodeType":"439","messageId":"440","endLine":408,"endColumn":16},{"ruleId":"377","severity":1,"message":"441","line":20,"column":10,"nodeType":"379","messageId":"380","endLine":20,"endColumn":16},{"ruleId":"377","severity":1,"message":"442","line":38,"column":10,"nodeType":"379","messageId":"380","endLine":38,"endColumn":18},{"ruleId":"401","severity":1,"message":"443","line":50,"column":6,"nodeType":"403","endLine":50,"endColumn":8,"suggestions":"444"},{"ruleId":"381","severity":1,"message":"382","line":103,"column":15,"nodeType":"383","messageId":"384","endLine":103,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":106,"column":15,"nodeType":"383","messageId":"384","endLine":106,"endColumn":17},{"ruleId":"377","severity":1,"message":"445","line":17,"column":8,"nodeType":"379","messageId":"380","endLine":17,"endColumn":18},{"ruleId":"377","severity":1,"message":"446","line":24,"column":10,"nodeType":"379","messageId":"380","endLine":24,"endColumn":15},{"ruleId":"401","severity":1,"message":"447","line":44,"column":6,"nodeType":"403","endLine":44,"endColumn":8,"suggestions":"448"},{"ruleId":"401","severity":1,"message":"449","line":57,"column":6,"nodeType":"403","endLine":57,"endColumn":20,"suggestions":"450"},{"ruleId":"401","severity":1,"message":"406","line":58,"column":13,"nodeType":"407","endLine":75,"endColumn":4},{"ruleId":"381","severity":1,"message":"382","line":65,"column":25,"nodeType":"383","messageId":"384","endLine":65,"endColumn":27},{"ruleId":"401","severity":1,"message":"451","line":75,"column":6,"nodeType":"403","endLine":75,"endColumn":8,"suggestions":"452"},{"ruleId":"381","severity":1,"message":"382","line":81,"column":25,"nodeType":"383","messageId":"384","endLine":81,"endColumn":27},{"ruleId":"401","severity":1,"message":"431","line":32,"column":6,"nodeType":"403","endLine":32,"endColumn":8,"suggestions":"453"},{"ruleId":"381","severity":1,"message":"413","line":101,"column":67,"nodeType":"383","messageId":"384","endLine":101,"endColumn":69},{"ruleId":"377","severity":1,"message":"411","line":24,"column":10,"nodeType":"379","messageId":"380","endLine":24,"endColumn":18},{"ruleId":"381","severity":1,"message":"382","line":42,"column":21,"nodeType":"383","messageId":"384","endLine":42,"endColumn":23},{"ruleId":"401","severity":1,"message":"454","line":32,"column":5,"nodeType":"403","endLine":32,"endColumn":7,"suggestions":"455"},{"ruleId":"381","severity":1,"message":"413","line":37,"column":22,"nodeType":"383","messageId":"384","endLine":37,"endColumn":24},{"ruleId":"377","severity":1,"message":"456","line":18,"column":10,"nodeType":"379","messageId":"380","endLine":18,"endColumn":20},{"ruleId":"377","severity":1,"message":"457","line":18,"column":22,"nodeType":"379","messageId":"380","endLine":18,"endColumn":35},{"ruleId":"377","severity":1,"message":"458","line":25,"column":9,"nodeType":"379","messageId":"380","endLine":25,"endColumn":23},{"ruleId":"401","severity":1,"message":"459","line":37,"column":6,"nodeType":"403","endLine":37,"endColumn":28,"suggestions":"460"},{"ruleId":"377","severity":1,"message":"461","line":24,"column":8,"nodeType":"379","messageId":"380","endLine":24,"endColumn":14},{"ruleId":"377","severity":1,"message":"462","line":27,"column":3,"nodeType":"379","messageId":"380","endLine":27,"endColumn":14},{"ruleId":"377","severity":1,"message":"463","line":28,"column":3,"nodeType":"379","messageId":"380","endLine":28,"endColumn":14},{"ruleId":"401","severity":1,"message":"464","line":47,"column":6,"nodeType":"403","endLine":47,"endColumn":8,"suggestions":"465"},{"ruleId":"466","severity":1,"message":"467","line":62,"column":57,"nodeType":"407","messageId":"468","endLine":62,"endColumn":59},{"ruleId":"377","severity":1,"message":"461","line":29,"column":8,"nodeType":"379","messageId":"380","endLine":29,"endColumn":14},{"ruleId":"377","severity":1,"message":"462","line":33,"column":3,"nodeType":"379","messageId":"380","endLine":33,"endColumn":14},{"ruleId":"377","severity":1,"message":"411","line":58,"column":10,"nodeType":"379","messageId":"380","endLine":58,"endColumn":18},{"ruleId":"381","severity":1,"message":"382","line":67,"column":23,"nodeType":"383","messageId":"384","endLine":67,"endColumn":25},{"ruleId":"401","severity":1,"message":"414","line":81,"column":6,"nodeType":"403","endLine":81,"endColumn":8,"suggestions":"469"},{"ruleId":"401","severity":1,"message":"470","line":101,"column":6,"nodeType":"403","endLine":101,"endColumn":8,"suggestions":"471"},{"ruleId":"381","severity":1,"message":"382","line":128,"column":21,"nodeType":"383","messageId":"384","endLine":128,"endColumn":23},{"ruleId":"466","severity":1,"message":"467","line":157,"column":46,"nodeType":"407","messageId":"468","endLine":157,"endColumn":48},{"ruleId":"381","severity":1,"message":"413","line":322,"column":28,"nodeType":"383","messageId":"384","endLine":322,"endColumn":30},{"ruleId":"437","severity":1,"message":"438","line":10,"column":5,"nodeType":"439","messageId":"440","endLine":23,"endColumn":6},{"ruleId":"466","severity":1,"message":"472","line":15,"column":33,"nodeType":"407","messageId":"473","endLine":15,"endColumn":35},{"ruleId":"381","severity":1,"message":"382","line":16,"column":25,"nodeType":"383","messageId":"384","endLine":16,"endColumn":27},{"ruleId":"401","severity":1,"message":"474","line":26,"column":6,"nodeType":"403","endLine":26,"endColumn":23,"suggestions":"475"},{"ruleId":"401","severity":1,"message":"476","line":63,"column":5,"nodeType":"403","endLine":63,"endColumn":7,"suggestions":"477"},{"ruleId":"377","severity":1,"message":"478","line":26,"column":16,"nodeType":"379","messageId":"380","endLine":26,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":22,"column":20,"nodeType":"383","messageId":"384","endLine":22,"endColumn":22},{"ruleId":"479","severity":1,"message":"480","line":43,"column":52,"nodeType":"481","endLine":43,"endColumn":147},{"ruleId":"377","severity":1,"message":"482","line":11,"column":9,"nodeType":"379","messageId":"380","endLine":11,"endColumn":12},{"ruleId":"479","severity":1,"message":"480","line":39,"column":7,"nodeType":"481","endLine":39,"endColumn":110},{"ruleId":"381","severity":1,"message":"382","line":48,"column":62,"nodeType":"383","messageId":"384","endLine":48,"endColumn":64},{"ruleId":"381","severity":1,"message":"382","line":49,"column":65,"nodeType":"383","messageId":"384","endLine":49,"endColumn":67},{"ruleId":"381","severity":1,"message":"382","line":50,"column":63,"nodeType":"383","messageId":"384","endLine":50,"endColumn":65},{"ruleId":"381","severity":1,"message":"382","line":51,"column":62,"nodeType":"383","messageId":"384","endLine":51,"endColumn":64},{"ruleId":"381","severity":1,"message":"382","line":52,"column":65,"nodeType":"383","messageId":"384","endLine":52,"endColumn":67},{"ruleId":"381","severity":1,"message":"382","line":53,"column":63,"nodeType":"383","messageId":"384","endLine":53,"endColumn":65},{"ruleId":"381","severity":1,"message":"382","line":64,"column":61,"nodeType":"383","messageId":"384","endLine":64,"endColumn":63},{"ruleId":"381","severity":1,"message":"382","line":65,"column":64,"nodeType":"383","messageId":"384","endLine":65,"endColumn":66},{"ruleId":"381","severity":1,"message":"382","line":66,"column":62,"nodeType":"383","messageId":"384","endLine":66,"endColumn":64},{"ruleId":"381","severity":1,"message":"382","line":67,"column":61,"nodeType":"383","messageId":"384","endLine":67,"endColumn":63},{"ruleId":"381","severity":1,"message":"382","line":68,"column":64,"nodeType":"383","messageId":"384","endLine":68,"endColumn":66},{"ruleId":"381","severity":1,"message":"382","line":69,"column":62,"nodeType":"383","messageId":"384","endLine":69,"endColumn":64},{"ruleId":"401","severity":1,"message":"483","line":83,"column":5,"nodeType":"403","endLine":83,"endColumn":33,"suggestions":"484"},{"ruleId":"377","severity":1,"message":"485","line":6,"column":20,"nodeType":"379","messageId":"380","endLine":6,"endColumn":29},{"ruleId":"377","severity":1,"message":"486","line":30,"column":10,"nodeType":"379","messageId":"380","endLine":30,"endColumn":19},{"ruleId":"377","severity":1,"message":"487","line":30,"column":21,"nodeType":"379","messageId":"380","endLine":30,"endColumn":33},{"ruleId":"377","severity":1,"message":"488","line":31,"column":10,"nodeType":"379","messageId":"380","endLine":31,"endColumn":14},{"ruleId":"377","severity":1,"message":"489","line":31,"column":16,"nodeType":"379","messageId":"380","endLine":31,"endColumn":23},{"ruleId":"377","severity":1,"message":"490","line":32,"column":10,"nodeType":"379","messageId":"380","endLine":32,"endColumn":14},{"ruleId":"377","severity":1,"message":"491","line":32,"column":16,"nodeType":"379","messageId":"380","endLine":32,"endColumn":23},{"ruleId":"377","severity":1,"message":"492","line":33,"column":10,"nodeType":"379","messageId":"380","endLine":33,"endColumn":17},{"ruleId":"377","severity":1,"message":"493","line":33,"column":19,"nodeType":"379","messageId":"380","endLine":33,"endColumn":29},{"ruleId":"377","severity":1,"message":"494","line":34,"column":10,"nodeType":"379","messageId":"380","endLine":34,"endColumn":15},{"ruleId":"377","severity":1,"message":"495","line":34,"column":17,"nodeType":"379","messageId":"380","endLine":34,"endColumn":25},{"ruleId":"377","severity":1,"message":"496","line":81,"column":19,"nodeType":"379","messageId":"380","endLine":81,"endColumn":29},{"ruleId":"381","severity":1,"message":"382","line":11,"column":16,"nodeType":"383","messageId":"384","endLine":11,"endColumn":18},{"ruleId":"479","severity":1,"message":"480","line":20,"column":11,"nodeType":"481","endLine":23,"endColumn":13},{"ruleId":"437","severity":1,"message":"438","line":11,"column":5,"nodeType":"439","messageId":"440","endLine":24,"endColumn":6},{"ruleId":"466","severity":1,"message":"472","line":16,"column":33,"nodeType":"407","messageId":"473","endLine":16,"endColumn":35},{"ruleId":"381","severity":1,"message":"413","line":17,"column":25,"nodeType":"383","messageId":"384","endLine":17,"endColumn":27},"no-unused-vars","'createMarkup' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleTypeClick1' is assigned a value but never used.","'handleTypeClick2' is assigned a value but never used.","'useState' is defined but never used.","'showOriginals' is assigned a value but never used.","'COMMUNITY_POST' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","'profileimageC' is defined but never used.","'socket' is assigned a value but never used.","'chatUser1' is assigned a value but never used.","'setchatUser1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'globalState?.user?._id', 'otherState?.user2Avatar', 'otherState?.user2Id', 'otherState?.user2Name', 'otherState.value', and 'selectContact'. Either include them or remove the dependency array.","ArrayExpression",["497"],"'value' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["498"],"'Link' is defined but never used.","'showLink' is assigned a value but never used.","'showtoken' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["499"],"React Hook useEffect has a missing dependency: 'globalUser.user._id'. Either include it or remove the dependency array.",["500"],["501"],"'ReplayIcon' is defined but never used.","'draftToHtml' is defined but never used.","'htmlToDraft' is defined but never used.","'cmmtMobModal' is assigned a value but never used.","'likeComment' is assigned a value but never used.","'postBody' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postData', 'postId', and 'user._id'. Either include them or remove the dependency array.",["502"],"React Hook useEffect has a missing dependency: 'user?._id'. Either include it or remove the dependency array.",["503"],"React Hook useEffect has missing dependencies: 'postId' and 'user._id'. Either include them or remove the dependency array.",["504"],"React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["505"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'handlecmmtModal' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Helmet' is defined but never used.","'commName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'communityId'. Either include it or remove the dependency array.",["506"],"'HelmetBase' is defined but never used.","'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'OtherProfileId'. Either include it or remove the dependency array.",["507"],"React Hook useEffect has a missing dependency: 'User?._id'. Either include it or remove the dependency array.",["508"],"React Hook useEffect has missing dependencies: 'User?._id' and 'globalState'. Either include them or remove the dependency array.",["509"],["510"],"React Hook useEffect has a missing dependency: 'questionId'. Either include it or remove the dependency array.",["511"],"'newMessage' is assigned a value but never used.","'setnewMessage' is assigned a value but never used.","'scrollToBottom' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatCommonId', 'sender', and 'user2Id'. Either include them or remove the dependency array.",["512"],"'ACTION' is defined but never used.","'SEARCH_POST' is defined but never used.","'SHOW_SEARCH' is defined but never used.","React Hook useEffect has a missing dependency: 'layerUser?.user?._id'. Either include it or remove the dependency array.",["513"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["514"],"React Hook useEffect has missing dependencies: 'layerUser.user?._id' and 'layerUser.user.notification'. Either include them or remove the dependency array.",["515"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["516"],"React Hook useEffect has missing dependencies: 'props.communityId' and 'socket'. Either include them or remove the dependency array.",["517"],"'setcmmt' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'end' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchField'. Either include it or remove the dependency array.",["518"],"'timeStamp' is assigned a value but never used.","'currState' is assigned a value but never used.","'setcurrState' is assigned a value but never used.","'Feed' is assigned a value but never used.","'setFeed' is assigned a value but never used.","'Meme' is assigned a value but never used.","'setMeme' is assigned a value but never used.","'Article' is assigned a value but never used.","'setArticle' is assigned a value but never used.","'Story' is assigned a value but never used.","'setStory' is assigned a value but never used.","'setDetails' is assigned a value but never used.",{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"523","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},"Update the dependencies array to be: [globalState?.user?._id, otherState?.user2Avatar, otherState?.user2Id, otherState?.user2Name, otherState.value, selectContact]",{"range":"562","text":"563"},"Update the dependencies array to be: [history]",{"range":"564","text":"565"},"Update the dependencies array to be: [dispatch, history]",{"range":"566","text":"567"},"Update the dependencies array to be: [globalUser.user._id]",{"range":"568","text":"569"},"Update the dependencies array to be: [globalUser.user._id, toggleFollowers]",{"range":"570","text":"571"},"Update the dependencies array to be: [liked, postData, postId, user._id]",{"range":"572","text":"573"},"Update the dependencies array to be: [user?._id]",{"range":"574","text":"575"},"Update the dependencies array to be: [postId, user._id]",{"range":"576","text":"577"},"Update the dependencies array to be: [commentToggle, postId]",{"range":"578","text":"579"},"Update the dependencies array to be: [communityId]",{"range":"580","text":"581"},"Update the dependencies array to be: [OtherProfileId]",{"range":"582","text":"583"},"Update the dependencies array to be: [User?._id, toggleFollow]",{"range":"584","text":"585"},"Update the dependencies array to be: [User?._id, globalState]",{"range":"586","text":"587"},"Update the dependencies array to be: [postId]",{"range":"588","text":"589"},"Update the dependencies array to be: [questionId]",{"range":"590","text":"591"},"Update the dependencies array to be: [chatCommonId, sender, toggleContactReducer, user2Id]",{"range":"592","text":"593"},"Update the dependencies array to be: [layerUser?.user?._id]",{"range":"594","text":"595"},{"range":"596","text":"567"},"Update the dependencies array to be: [layerUser.user?._id, layerUser.user.notification]",{"range":"597","text":"598"},"Update the dependencies array to be: [createcommunity, dispatch]",{"range":"599","text":"600"},"Update the dependencies array to be: [props.communityId, socket]",{"range":"601","text":"602"},"Update the dependencies array to be: [searchField, showSearch, toggleLanguage]",{"range":"603","text":"604"},[3060,3062],"[globalState?.user?._id, otherState?.user2Avatar, otherState?.user2Id, otherState?.user2Name, otherState.value, selectContact]",[574,576],"[history]",[2863,2865],"[dispatch, history]",[1866,1868],"[globalUser.user._id]",[2295,2312],"[globalUser.user._id, toggleFollowers]",[4168,4175],"[liked, postData, postId, user._id]",[4631,4633],"[user?._id]",[4994,4996],"[postId, user._id]",[5450,5467],"[commentToggle, postId]",[2346,2348],"[communityId]",[1906,1908],"[OtherProfileId]",[2259,2273],"[User?._id, toggleFollow]",[2802,2804],"[User?._id, globalState]",[993,995],"[postId]",[1222,1224],"[questionId]",[1542,1564],"[chatCommonId, sender, toggleContactReducer, user2Id]",[1887,1889],"[layerUser?.user?._id]",[3054,3056],[3769,3771],"[layerUser.user?._id, layerUser.user.notification]",[868,885],"[createcommunity, dispatch]",[1809,1811],"[props.communityId, socket]",[3374,3402],"[searchField, showSearch, toggleLanguage]"]